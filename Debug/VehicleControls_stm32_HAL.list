
VehicleControls_stm32_HAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004be0  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000458  08004cec  08004cec  00014cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005144  08005144  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08005144  08005144  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005144  08005144  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005144  08005144  00015144  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005148  08005148  00015148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  0800514c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000021c  20000070  080051bc  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000028c  080051bc  0002028c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00011311  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002bc7  00000000  00000000  000313aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e20  00000000  00000000  00033f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000ce8  00000000  00000000  00034d98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019776  00000000  00000000  00035a80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001057e  00000000  00000000  0004f1f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a4d1  00000000  00000000  0005f774  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000e9c45  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000044c4  00000000  00000000  000e9c98  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	08004cd4 	.word	0x08004cd4

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	08004cd4 	.word	0x08004cd4

0800014c <strcmp>:
 800014c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000150:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000154:	2a01      	cmp	r2, #1
 8000156:	bf28      	it	cs
 8000158:	429a      	cmpcs	r2, r3
 800015a:	d0f7      	beq.n	800014c <strcmp>
 800015c:	1ad0      	subs	r0, r2, r3
 800015e:	4770      	bx	lr

08000160 <JDY09_StartNewIRQRx>:
 *
 * @param[*jdy09] - pointer to struct for JDY09 bluetooth module
 * @return - void
 */
void JDY09_StartNewIRQRx(JDY09_t *jdy09)
{
 8000160:	b580      	push	{r7, lr}
 8000162:	b082      	sub	sp, #8
 8000164:	af00      	add	r7, sp, #0
 8000166:	6078      	str	r0, [r7, #4]
	// start another IRQ for single sign
	HAL_UART_Receive_IT(jdy09->huart, &(jdy09->RecieveBufferIT), 1);
 8000168:	687b      	ldr	r3, [r7, #4]
 800016a:	6818      	ldr	r0, [r3, #0]
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	3324      	adds	r3, #36	; 0x24
 8000170:	2201      	movs	r2, #1
 8000172:	4619      	mov	r1, r3
 8000174:	f002 fe96 	bl	8002ea4 <HAL_UART_Receive_IT>
}
 8000178:	bf00      	nop
 800017a:	3708      	adds	r7, #8
 800017c:	46bd      	mov	sp, r7
 800017e:	bd80      	pop	{r7, pc}

08000180 <JDY09_DisplayTerminal>:
 *
 * @return - void
 */

static void JDY09_DisplayTerminal(char *Msg)
{
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]

}
 8000188:	bf00      	nop
 800018a:	370c      	adds	r7, #12
 800018c:	46bd      	mov	sp, r7
 800018e:	bc80      	pop	{r7}
 8000190:	4770      	bx	lr
	...

08000194 <JDY09_Init>:
void JDY09_Init(JDY09_t *jdy09, UART_HandleTypeDef *huart
#if (JDY09_USE_STATE_PIN == 1)
		,GPIO_TypeDef *StateGPIOPort, uint16_t StateGPIOPin
#endif
		)
{
 8000194:	b580      	push	{r7, lr}
 8000196:	b082      	sub	sp, #8
 8000198:	af00      	add	r7, sp, #0
 800019a:	6078      	str	r0, [r7, #4]
 800019c:	6039      	str	r1, [r7, #0]

	// init msg
	JDY09_DisplayTerminal("JDY-09 Initializing... \n\r");
 800019e:	4809      	ldr	r0, [pc, #36]	; (80001c4 <JDY09_Init+0x30>)
 80001a0:	f7ff ffee 	bl	8000180 <JDY09_DisplayTerminal>

	// reset the ring buffer
	RB_Flush(&(jdy09->RingBuffer));
 80001a4:	687b      	ldr	r3, [r7, #4]
 80001a6:	3326      	adds	r3, #38	; 0x26
 80001a8:	4618      	mov	r0, r3
 80001aa:	f000 fb4c 	bl	8000846 <RB_Flush>

	// Assign uart
	jdy09->huart = huart;
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	683a      	ldr	r2, [r7, #0]
 80001b2:	601a      	str	r2, [r3, #0]
	jdy09->StateGPIOPort = StateGPIOPort;
	jdy09->StatePinNumber = StateGPIOPin;
#endif
	// if irq mode is used for receive
#if (JDY09_UART_RX_IT == 1)
	JDY09_StartNewIRQRx(jdy09);
 80001b4:	6878      	ldr	r0, [r7, #4]
 80001b6:	f7ff ffd3 	bl	8000160 <JDY09_StartNewIRQRx>
	JDY09_SendCommand(jdy09, JDY09_CMD_GETADRESS);
	JDY09_SendCommand(jdy09, JDY09_CMD_GETBAUDRATE);
	JDY09_SendCommand(jdy09, JDY09_CMD_GETNAME);
	JDY09_SendCommand(jdy09, JDY09_CMD_GETPASSWORD);
#endif
}
 80001ba:	bf00      	nop
 80001bc:	3708      	adds	r7, #8
 80001be:	46bd      	mov	sp, r7
 80001c0:	bd80      	pop	{r7, pc}
 80001c2:	bf00      	nop
 80001c4:	08004d2c 	.word	0x08004d2c

080001c8 <JDY09_ClearMsgPendingFlag>:
 *
 * @param[*jdy09] - pointer to struct for JDY09 bluetooth module
 * @return - void
 */
void JDY09_ClearMsgPendingFlag(JDY09_t *jdy09)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
	jdy09->MessagePending = JDY09_NOMESSAGE;
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	2200      	movs	r2, #0
 80001d4:	f883 20ab 	strb.w	r2, [r3, #171]	; 0xab
}
 80001d8:	bf00      	nop
 80001da:	370c      	adds	r7, #12
 80001dc:	46bd      	mov	sp, r7
 80001de:	bc80      	pop	{r7}
 80001e0:	4770      	bx	lr

080001e2 <JDY09_CheckPendingMessages>:
 * @param[*jdy09] - pointer to struct for JDY09 bluetooth module
 * @param[*MsgBuffer] - pointer to buffer where message has to be written
 * @return - status : massage pending 1/0
 */
uint8_t JDY09_CheckPendingMessages(JDY09_t *jdy09, uint8_t *MsgBuffer)
{
 80001e2:	b580      	push	{r7, lr}
 80001e4:	b084      	sub	sp, #16
 80001e6:	af00      	add	r7, sp, #0
 80001e8:	6078      	str	r0, [r7, #4]
 80001ea:	6039      	str	r1, [r7, #0]

	// Check if there is message finished
	if (jdy09->LinesRecieved > 0)
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	f893 30aa 	ldrb.w	r3, [r3, #170]	; 0xaa
 80001f2:	b2db      	uxtb	r3, r3
 80001f4:	2b00      	cmp	r3, #0
 80001f6:	d032      	beq.n	800025e <JDY09_CheckPendingMessages+0x7c>
	{

		uint8_t i = 0;
 80001f8:	2300      	movs	r3, #0
 80001fa:	73fb      	strb	r3, [r7, #15]
		uint8_t temp = 0;
 80001fc:	2300      	movs	r3, #0
 80001fe:	73bb      	strb	r3, [r7, #14]
		do
		{
			// Move a sign to ring buffer
			RB_Read(&(jdy09->RingBuffer), &temp);
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	3326      	adds	r3, #38	; 0x26
 8000204:	f107 020e 	add.w	r2, r7, #14
 8000208:	4611      	mov	r1, r2
 800020a:	4618      	mov	r0, r3
 800020c:	f000 fac4 	bl	8000798 <RB_Read>
			if (temp == JDY09_LASTCHARACTER)
 8000210:	7bbb      	ldrb	r3, [r7, #14]
 8000212:	2b0a      	cmp	r3, #10
 8000214:	d10b      	bne.n	800022e <JDY09_CheckPendingMessages+0x4c>
			{
				MsgBuffer[i] = JDY09_LASTCHARACTER;
 8000216:	7bfb      	ldrb	r3, [r7, #15]
 8000218:	683a      	ldr	r2, [r7, #0]
 800021a:	4413      	add	r3, r2
 800021c:	220a      	movs	r2, #10
 800021e:	701a      	strb	r2, [r3, #0]
				MsgBuffer[i + 1] = 0;
 8000220:	7bfb      	ldrb	r3, [r7, #15]
 8000222:	3301      	adds	r3, #1
 8000224:	683a      	ldr	r2, [r7, #0]
 8000226:	4413      	add	r3, r2
 8000228:	2200      	movs	r2, #0
 800022a:	701a      	strb	r2, [r3, #0]
 800022c:	e004      	b.n	8000238 <JDY09_CheckPendingMessages+0x56>
			}
			else
			{
				MsgBuffer[i] = temp;
 800022e:	7bfb      	ldrb	r3, [r7, #15]
 8000230:	683a      	ldr	r2, [r7, #0]
 8000232:	4413      	add	r3, r2
 8000234:	7bba      	ldrb	r2, [r7, #14]
 8000236:	701a      	strb	r2, [r3, #0]
			}
			i++;
 8000238:	7bfb      	ldrb	r3, [r7, #15]
 800023a:	3301      	adds	r3, #1
 800023c:	73fb      	strb	r3, [r7, #15]
			//rewrite signs until last character defined by user
		} while (temp != JDY09_LASTCHARACTER);
 800023e:	7bbb      	ldrb	r3, [r7, #14]
 8000240:	2b0a      	cmp	r3, #10
 8000242:	d1dd      	bne.n	8000200 <JDY09_CheckPendingMessages+0x1e>
		//decrement LinesRecieved
		jdy09->LinesRecieved--;
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	f893 30aa 	ldrb.w	r3, [r3, #170]	; 0xaa
 800024a:	b2db      	uxtb	r3, r3
 800024c:	3b01      	subs	r3, #1
 800024e:	b2da      	uxtb	r2, r3
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	f883 20aa 	strb.w	r2, [r3, #170]	; 0xaa
		//set up flag that message is ready to parse
		jdy09->MessagePending = JDY09_MESSAGEPENDING;
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	2201      	movs	r2, #1
 800025a:	f883 20ab 	strb.w	r2, [r3, #171]	; 0xab
	}

	// return if flag status
	return jdy09->MessagePending;
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
}
 8000264:	4618      	mov	r0, r3
 8000266:	3710      	adds	r7, #16
 8000268:	46bd      	mov	sp, r7
 800026a:	bd80      	pop	{r7, pc}

0800026c <JDY09_RxCpltCallbackIT>:
 * @param[*huart] - uart handle
 * @return - void
 */
#if (JDY09_UART_RX_IT == 1)
void JDY09_RxCpltCallbackIT(JDY09_t *jdy09, UART_HandleTypeDef *huart)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
 8000274:	6039      	str	r1, [r7, #0]

	//check if IRQ is coming from correct uart
	if (jdy09->huart->Instance == huart->Instance)
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	681a      	ldr	r2, [r3, #0]
 800027c:	683b      	ldr	r3, [r7, #0]
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	429a      	cmp	r2, r3
 8000282:	d11b      	bne.n	80002bc <JDY09_RxCpltCallbackIT+0x50>
	{
		//write a sign to ring buffer
		RB_Write((&(jdy09->RingBuffer)), jdy09->RecieveBufferIT);
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	f103 0226 	add.w	r2, r3, #38	; 0x26
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8000290:	4619      	mov	r1, r3
 8000292:	4610      	mov	r0, r2
 8000294:	f000 faac 	bl	80007f0 <RB_Write>

		// when line is complete -> add 1 to received lines
		if (jdy09->RecieveBufferIT == JDY09_LASTCHARACTER)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800029e:	2b0a      	cmp	r3, #10
 80002a0:	d109      	bne.n	80002b6 <JDY09_RxCpltCallbackIT+0x4a>
		{
			(jdy09->LinesRecieved)++;
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	f893 30aa 	ldrb.w	r3, [r3, #170]	; 0xaa
 80002a8:	b2db      	uxtb	r3, r3
 80002aa:	3301      	adds	r3, #1
 80002ac:	b2da      	uxtb	r2, r3
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	f883 20aa 	strb.w	r2, [r3, #170]	; 0xaa

			// if user wants to start irq in this momemnt
#if(JDY09_IRQ_CONTINUOUSSTART == 1)
			JDY09_StartNewIRQRx(jdy09);
#endif
			return;
 80002b4:	e002      	b.n	80002bc <JDY09_RxCpltCallbackIT+0x50>
		}
		// start another IRQ for single sign
		JDY09_StartNewIRQRx(jdy09);
 80002b6:	6878      	ldr	r0, [r7, #4]
 80002b8:	f7ff ff52 	bl	8000160 <JDY09_StartNewIRQRx>
	}
}
 80002bc:	3708      	adds	r7, #8
 80002be:	46bd      	mov	sp, r7
 80002c0:	bd80      	pop	{r7, pc}
	...

080002c4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80002c4:	b480      	push	{r7}
 80002c6:	b083      	sub	sp, #12
 80002c8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80002ca:	4b08      	ldr	r3, [pc, #32]	; (80002ec <MX_DMA_Init+0x28>)
 80002cc:	695b      	ldr	r3, [r3, #20]
 80002ce:	4a07      	ldr	r2, [pc, #28]	; (80002ec <MX_DMA_Init+0x28>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6153      	str	r3, [r2, #20]
 80002d6:	4b05      	ldr	r3, [pc, #20]	; (80002ec <MX_DMA_Init+0x28>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	f003 0301 	and.w	r3, r3, #1
 80002de:	607b      	str	r3, [r7, #4]
 80002e0:	687b      	ldr	r3, [r7, #4]

}
 80002e2:	bf00      	nop
 80002e4:	370c      	adds	r7, #12
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bc80      	pop	{r7}
 80002ea:	4770      	bx	lr
 80002ec:	40021000 	.word	0x40021000

080002f0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80002f6:	f107 0308 	add.w	r3, r7, #8
 80002fa:	2200      	movs	r2, #0
 80002fc:	601a      	str	r2, [r3, #0]
 80002fe:	605a      	str	r2, [r3, #4]
 8000300:	609a      	str	r2, [r3, #8]
 8000302:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000304:	4b18      	ldr	r3, [pc, #96]	; (8000368 <MX_GPIO_Init+0x78>)
 8000306:	699b      	ldr	r3, [r3, #24]
 8000308:	4a17      	ldr	r2, [pc, #92]	; (8000368 <MX_GPIO_Init+0x78>)
 800030a:	f043 0308 	orr.w	r3, r3, #8
 800030e:	6193      	str	r3, [r2, #24]
 8000310:	4b15      	ldr	r3, [pc, #84]	; (8000368 <MX_GPIO_Init+0x78>)
 8000312:	699b      	ldr	r3, [r3, #24]
 8000314:	f003 0308 	and.w	r3, r3, #8
 8000318:	607b      	str	r3, [r7, #4]
 800031a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800031c:	4b12      	ldr	r3, [pc, #72]	; (8000368 <MX_GPIO_Init+0x78>)
 800031e:	699b      	ldr	r3, [r3, #24]
 8000320:	4a11      	ldr	r2, [pc, #68]	; (8000368 <MX_GPIO_Init+0x78>)
 8000322:	f043 0304 	orr.w	r3, r3, #4
 8000326:	6193      	str	r3, [r2, #24]
 8000328:	4b0f      	ldr	r3, [pc, #60]	; (8000368 <MX_GPIO_Init+0x78>)
 800032a:	699b      	ldr	r3, [r3, #24]
 800032c:	f003 0304 	and.w	r3, r3, #4
 8000330:	603b      	str	r3, [r7, #0]
 8000332:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, MOTOR_DIR1_Pin|MOTOR_DIR2_Pin, GPIO_PIN_RESET);
 8000334:	2200      	movs	r2, #0
 8000336:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 800033a:	480c      	ldr	r0, [pc, #48]	; (800036c <MX_GPIO_Init+0x7c>)
 800033c:	f001 fa98 	bl	8001870 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PBPin PBPin */
  GPIO_InitStruct.Pin = MOTOR_DIR1_Pin|MOTOR_DIR2_Pin;
 8000340:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8000344:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000346:	2301      	movs	r3, #1
 8000348:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800034a:	2300      	movs	r3, #0
 800034c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800034e:	2302      	movs	r3, #2
 8000350:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000352:	f107 0308 	add.w	r3, r7, #8
 8000356:	4619      	mov	r1, r3
 8000358:	4804      	ldr	r0, [pc, #16]	; (800036c <MX_GPIO_Init+0x7c>)
 800035a:	f001 f90f 	bl	800157c <HAL_GPIO_Init>

}
 800035e:	bf00      	nop
 8000360:	3718      	adds	r7, #24
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}
 8000366:	bf00      	nop
 8000368:	40021000 	.word	0x40021000
 800036c:	40010c00 	.word	0x40010c00

08000370 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b084      	sub	sp, #16
 8000374:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000376:	f000 fd81 	bl	8000e7c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800037a:	f000 f84f 	bl	800041c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800037e:	f7ff ffb7 	bl	80002f0 <MX_GPIO_Init>
  MX_DMA_Init();
 8000382:	f7ff ff9f 	bl	80002c4 <MX_DMA_Init>
  MX_USART1_UART_Init();
 8000386:	f000 fca5 	bl	8000cd4 <MX_USART1_UART_Init>
  MX_TIM1_Init();
 800038a:	f000 fba1 	bl	8000ad0 <MX_TIM1_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 800038e:	f000 f886 	bl	800049e <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */
  JDY09_Init(&JDY09_1, &huart1);
 8000392:	491b      	ldr	r1, [pc, #108]	; (8000400 <main+0x90>)
 8000394:	481b      	ldr	r0, [pc, #108]	; (8000404 <main+0x94>)
 8000396:	f7ff fefd 	bl	8000194 <JDY09_Init>
  Motor_Init(&Motor_1, &htim1, TIM_CHANNEL_2);
 800039a:	2204      	movs	r2, #4
 800039c:	491a      	ldr	r1, [pc, #104]	; (8000408 <main+0x98>)
 800039e:	481b      	ldr	r0, [pc, #108]	; (800040c <main+0x9c>)
 80003a0:	f000 f952 	bl	8000648 <Motor_Init>
  Servo_Init(&Servo_1, &htim1, TIM_CHANNEL_1);
 80003a4:	2200      	movs	r2, #0
 80003a6:	4918      	ldr	r1, [pc, #96]	; (8000408 <main+0x98>)
 80003a8:	4819      	ldr	r0, [pc, #100]	; (8000410 <main+0xa0>)
 80003aa:	f000 f9a8 	bl	80006fe <Servo_Init>

  uint8_t AckMsg[8];
  uint8_t Len;
  Len = sprintf((char*) AckMsg, "OKAY\n");
 80003ae:	1d3b      	adds	r3, r7, #4
 80003b0:	4918      	ldr	r1, [pc, #96]	; (8000414 <main+0xa4>)
 80003b2:	4618      	mov	r0, r3
 80003b4:	f003 fa04 	bl	80037c0 <siprintf>
 80003b8:	4603      	mov	r3, r0
 80003ba:	73fb      	strb	r3, [r7, #15]
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
		// check if there is msg - if yes transfer it to a buffer
		if (JDY09_CheckPendingMessages(&JDY09_1,
 80003bc:	4916      	ldr	r1, [pc, #88]	; (8000418 <main+0xa8>)
 80003be:	4811      	ldr	r0, [pc, #68]	; (8000404 <main+0x94>)
 80003c0:	f7ff ff0f 	bl	80001e2 <JDY09_CheckPendingMessages>
 80003c4:	4603      	mov	r3, r0
 80003c6:	2b01      	cmp	r3, #1
 80003c8:	d1f8      	bne.n	80003bc <main+0x4c>
				TransferBuffer) == JDY09_MESSAGEPENDING)
		{
			//clear pending flag
			JDY09_ClearMsgPendingFlag(&JDY09_1);
 80003ca:	480e      	ldr	r0, [pc, #56]	; (8000404 <main+0x94>)
 80003cc:	f7ff fefc 	bl	80001c8 <JDY09_ClearMsgPendingFlag>

			// fetch data from command message
			Parser_Parse(TransferBuffer, &Servo_1.PWMCommandNew, &Motor_1.PWMCommandNew);
 80003d0:	4a0e      	ldr	r2, [pc, #56]	; (800040c <main+0x9c>)
 80003d2:	490f      	ldr	r1, [pc, #60]	; (8000410 <main+0xa0>)
 80003d4:	4810      	ldr	r0, [pc, #64]	; (8000418 <main+0xa8>)
 80003d6:	f000 f9ab 	bl	8000730 <Parser_Parse>

			// control servo
			Servo_Control(&Servo_1);
 80003da:	480d      	ldr	r0, [pc, #52]	; (8000410 <main+0xa0>)
 80003dc:	f000 f94d 	bl	800067a <Servo_Control>

			// control motor
			Motor_Control(&Motor_1);
 80003e0:	480a      	ldr	r0, [pc, #40]	; (800040c <main+0x9c>)
 80003e2:	f000 f885 	bl	80004f0 <Motor_Control>

			// send acknowledge message
			HAL_UART_Transmit(&huart1, AckMsg, Len, 1000);
 80003e6:	7bfb      	ldrb	r3, [r7, #15]
 80003e8:	b29a      	uxth	r2, r3
 80003ea:	1d39      	adds	r1, r7, #4
 80003ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003f0:	4803      	ldr	r0, [pc, #12]	; (8000400 <main+0x90>)
 80003f2:	f002 fcc5 	bl	8002d80 <HAL_UART_Transmit>
			
			// start new IRQ
			JDY09_StartNewIRQRx(&JDY09_1);
 80003f6:	4803      	ldr	r0, [pc, #12]	; (8000404 <main+0x94>)
 80003f8:	f7ff feb2 	bl	8000160 <JDY09_StartNewIRQRx>
		if (JDY09_CheckPendingMessages(&JDY09_1,
 80003fc:	e7de      	b.n	80003bc <main+0x4c>
 80003fe:	bf00      	nop
 8000400:	20000234 	.word	0x20000234
 8000404:	20000098 	.word	0x20000098
 8000408:	200001a8 	.word	0x200001a8
 800040c:	20000198 	.word	0x20000198
 8000410:	2000014c 	.word	0x2000014c
 8000414:	08004ec0 	.word	0x08004ec0
 8000418:	20000158 	.word	0x20000158

0800041c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b090      	sub	sp, #64	; 0x40
 8000420:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000422:	f107 0318 	add.w	r3, r7, #24
 8000426:	2228      	movs	r2, #40	; 0x28
 8000428:	2100      	movs	r1, #0
 800042a:	4618      	mov	r0, r3
 800042c:	f003 f9c0 	bl	80037b0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000430:	1d3b      	adds	r3, r7, #4
 8000432:	2200      	movs	r2, #0
 8000434:	601a      	str	r2, [r3, #0]
 8000436:	605a      	str	r2, [r3, #4]
 8000438:	609a      	str	r2, [r3, #8]
 800043a:	60da      	str	r2, [r3, #12]
 800043c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800043e:	2302      	movs	r3, #2
 8000440:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000442:	2301      	movs	r3, #1
 8000444:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000446:	2310      	movs	r3, #16
 8000448:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800044a:	2302      	movs	r3, #2
 800044c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800044e:	2300      	movs	r3, #0
 8000450:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000452:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000456:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000458:	f107 0318 	add.w	r3, r7, #24
 800045c:	4618      	mov	r0, r3
 800045e:	f001 fa1f 	bl	80018a0 <HAL_RCC_OscConfig>
 8000462:	4603      	mov	r3, r0
 8000464:	2b00      	cmp	r3, #0
 8000466:	d001      	beq.n	800046c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000468:	f000 f83c 	bl	80004e4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800046c:	230f      	movs	r3, #15
 800046e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000470:	2302      	movs	r3, #2
 8000472:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000474:	2300      	movs	r3, #0
 8000476:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000478:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800047c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800047e:	2300      	movs	r3, #0
 8000480:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000482:	1d3b      	adds	r3, r7, #4
 8000484:	2102      	movs	r1, #2
 8000486:	4618      	mov	r0, r3
 8000488:	f001 fc8a 	bl	8001da0 <HAL_RCC_ClockConfig>
 800048c:	4603      	mov	r3, r0
 800048e:	2b00      	cmp	r3, #0
 8000490:	d001      	beq.n	8000496 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000492:	f000 f827 	bl	80004e4 <Error_Handler>
  }
}
 8000496:	bf00      	nop
 8000498:	3740      	adds	r7, #64	; 0x40
 800049a:	46bd      	mov	sp, r7
 800049c:	bd80      	pop	{r7, pc}

0800049e <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 800049e:	b580      	push	{r7, lr}
 80004a0:	af00      	add	r7, sp, #0
  /* USART1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80004a2:	2200      	movs	r2, #0
 80004a4:	2100      	movs	r1, #0
 80004a6:	2025      	movs	r0, #37	; 0x25
 80004a8:	f000 fe21 	bl	80010ee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART1_IRQn);
 80004ac:	2025      	movs	r0, #37	; 0x25
 80004ae:	f000 fe3a 	bl	8001126 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 80004b2:	2200      	movs	r2, #0
 80004b4:	2100      	movs	r1, #0
 80004b6:	200f      	movs	r0, #15
 80004b8:	f000 fe19 	bl	80010ee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 80004bc:	200f      	movs	r0, #15
 80004be:	f000 fe32 	bl	8001126 <HAL_NVIC_EnableIRQ>
}
 80004c2:	bf00      	nop
 80004c4:	bd80      	pop	{r7, pc}
	...

080004c8 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
#if (JDY09_UART_RX_IT == 1)
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
	// Callback from BT module
	JDY09_RxCpltCallbackIT(&JDY09_1, huart);
 80004d0:	6879      	ldr	r1, [r7, #4]
 80004d2:	4803      	ldr	r0, [pc, #12]	; (80004e0 <HAL_UART_RxCpltCallback+0x18>)
 80004d4:	f7ff feca 	bl	800026c <JDY09_RxCpltCallbackIT>
}
 80004d8:	bf00      	nop
 80004da:	3708      	adds	r7, #8
 80004dc:	46bd      	mov	sp, r7
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	20000098 	.word	0x20000098

080004e4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80004e4:	b480      	push	{r7}
 80004e6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80004e8:	b672      	cpsid	i
}
 80004ea:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80004ec:	e7fe      	b.n	80004ec <Error_Handler+0x8>
	...

080004f0 <Motor_Control>:
 *
 * @param[*Motor] - handler of Motor struct
 * @return - void
 */
void Motor_Control (Motor_t *Motor)
{
 80004f0:	b580      	push	{r7, lr}
 80004f2:	b082      	sub	sp, #8
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	6078      	str	r0, [r7, #4]

	// check if value is not within deadband limits
	if (Motor->PWMCommandNew > MOTOR_DEADBAND_LOW_LIMIT
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	881b      	ldrh	r3, [r3, #0]
 80004fc:	f244 6250 	movw	r2, #18000	; 0x4650
 8000500:	4293      	cmp	r3, r2
 8000502:	d935      	bls.n	8000570 <Motor_Control+0x80>
			&& Motor->PWMCommandNew < MOTOR_DEADBAND_HIGH_LIMIT)
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	881b      	ldrh	r3, [r3, #0]
 8000508:	f245 52ef 	movw	r2, #21999	; 0x55ef
 800050c:	4293      	cmp	r3, r2
 800050e:	d82f      	bhi.n	8000570 <Motor_Control+0x80>
	{
		// if value is in deadband set PWM to 0%
		__HAL_TIM_SET_COMPARE(Motor->PWMTimer, Motor->PWMTimerChannel, 0);
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	7b1b      	ldrb	r3, [r3, #12]
 8000514:	2b00      	cmp	r3, #0
 8000516:	d105      	bne.n	8000524 <Motor_Control+0x34>
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	689b      	ldr	r3, [r3, #8]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	2200      	movs	r2, #0
 8000520:	635a      	str	r2, [r3, #52]	; 0x34
 8000522:	e018      	b.n	8000556 <Motor_Control+0x66>
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	7b1b      	ldrb	r3, [r3, #12]
 8000528:	2b04      	cmp	r3, #4
 800052a:	d105      	bne.n	8000538 <Motor_Control+0x48>
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	689b      	ldr	r3, [r3, #8]
 8000530:	681a      	ldr	r2, [r3, #0]
 8000532:	2300      	movs	r3, #0
 8000534:	6393      	str	r3, [r2, #56]	; 0x38
 8000536:	e00e      	b.n	8000556 <Motor_Control+0x66>
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	7b1b      	ldrb	r3, [r3, #12]
 800053c:	2b08      	cmp	r3, #8
 800053e:	d105      	bne.n	800054c <Motor_Control+0x5c>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	689b      	ldr	r3, [r3, #8]
 8000544:	681a      	ldr	r2, [r3, #0]
 8000546:	2300      	movs	r3, #0
 8000548:	63d3      	str	r3, [r2, #60]	; 0x3c
 800054a:	e004      	b.n	8000556 <Motor_Control+0x66>
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	689b      	ldr	r3, [r3, #8]
 8000550:	681a      	ldr	r2, [r3, #0]
 8000552:	2300      	movs	r3, #0
 8000554:	6413      	str	r3, [r2, #64]	; 0x40
		// turn GPIOs to Motor off
		LN298N_MOTOR_OFF();
 8000556:	2200      	movs	r2, #0
 8000558:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800055c:	4839      	ldr	r0, [pc, #228]	; (8000644 <Motor_Control+0x154>)
 800055e:	f001 f987 	bl	8001870 <HAL_GPIO_WritePin>
 8000562:	2200      	movs	r2, #0
 8000564:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000568:	4836      	ldr	r0, [pc, #216]	; (8000644 <Motor_Control+0x154>)
 800056a:	f001 f981 	bl	8001870 <HAL_GPIO_WritePin>
 800056e:	e060      	b.n	8000632 <Motor_Control+0x142>
	}
	//check if adc value changed by 1%
	else if (abs(Motor->PWMCommandNew - Motor->PWMCommandLast) > MOTOR_RESOLUTION_1PERCENT)
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	881b      	ldrh	r3, [r3, #0]
 8000574:	461a      	mov	r2, r3
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	885b      	ldrh	r3, [r3, #2]
 800057a:	1ad3      	subs	r3, r2, r3
 800057c:	2b00      	cmp	r3, #0
 800057e:	bfb8      	it	lt
 8000580:	425b      	neglt	r3, r3
 8000582:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000586:	dd54      	ble.n	8000632 <Motor_Control+0x142>
	{
			// deadbands use to avoid soft movements and noise
			if (Motor->PWMCommandNew < MOTOR_DEADBAND_LOW_LIMIT)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	881b      	ldrh	r3, [r3, #0]
 800058c:	f244 624f 	movw	r2, #17999	; 0x464f
 8000590:	4293      	cmp	r3, r2
 8000592:	d814      	bhi.n	80005be <Motor_Control+0xce>
			{
				// write gpio to LN298 for backward movement
				LN298N_MOTOR_BACKWARD();
 8000594:	2200      	movs	r2, #0
 8000596:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800059a:	482a      	ldr	r0, [pc, #168]	; (8000644 <Motor_Control+0x154>)
 800059c:	f001 f968 	bl	8001870 <HAL_GPIO_WritePin>
 80005a0:	2201      	movs	r2, #1
 80005a2:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80005a6:	4827      	ldr	r0, [pc, #156]	; (8000644 <Motor_Control+0x154>)
 80005a8:	f001 f962 	bl	8001870 <HAL_GPIO_WritePin>
				// even if joystick is moved backward, PWM value has to be more than high deadband
				// beacuse direction is set by GPIO
				Motor->MotorSpeed = Motor->PWMCommandNew + MOTOR_DEADBAND_LOW_LIMIT;
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	881b      	ldrh	r3, [r3, #0]
 80005b0:	f503 438c 	add.w	r3, r3, #17920	; 0x4600
 80005b4:	3350      	adds	r3, #80	; 0x50
 80005b6:	b29a      	uxth	r2, r3
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	809a      	strh	r2, [r3, #4]
 80005bc:	e00f      	b.n	80005de <Motor_Control+0xee>
			}
			else
			{
				// write gpio for forward movement
				LN298N_MOTOR_FORWARD();
 80005be:	2201      	movs	r2, #1
 80005c0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80005c4:	481f      	ldr	r0, [pc, #124]	; (8000644 <Motor_Control+0x154>)
 80005c6:	f001 f953 	bl	8001870 <HAL_GPIO_WritePin>
 80005ca:	2200      	movs	r2, #0
 80005cc:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80005d0:	481c      	ldr	r0, [pc, #112]	; (8000644 <Motor_Control+0x154>)
 80005d2:	f001 f94d 	bl	8001870 <HAL_GPIO_WritePin>
				// value from joystick is equal to speed value for forward movement
				Motor->MotorSpeed = Motor->PWMCommandNew;
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	881a      	ldrh	r2, [r3, #0]
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	809a      	strh	r2, [r3, #4]
			}

			__HAL_TIM_SET_COMPARE(Motor->PWMTimer, Motor->PWMTimerChannel, Motor->MotorSpeed);
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	7b1b      	ldrb	r3, [r3, #12]
 80005e2:	2b00      	cmp	r3, #0
 80005e4:	d106      	bne.n	80005f4 <Motor_Control+0x104>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	889a      	ldrh	r2, [r3, #4]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	689b      	ldr	r3, [r3, #8]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	635a      	str	r2, [r3, #52]	; 0x34
 80005f2:	e01e      	b.n	8000632 <Motor_Control+0x142>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	7b1b      	ldrb	r3, [r3, #12]
 80005f8:	2b04      	cmp	r3, #4
 80005fa:	d107      	bne.n	800060c <Motor_Control+0x11c>
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	8899      	ldrh	r1, [r3, #4]
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	689b      	ldr	r3, [r3, #8]
 8000604:	681a      	ldr	r2, [r3, #0]
 8000606:	460b      	mov	r3, r1
 8000608:	6393      	str	r3, [r2, #56]	; 0x38
 800060a:	e012      	b.n	8000632 <Motor_Control+0x142>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	7b1b      	ldrb	r3, [r3, #12]
 8000610:	2b08      	cmp	r3, #8
 8000612:	d107      	bne.n	8000624 <Motor_Control+0x134>
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	8899      	ldrh	r1, [r3, #4]
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	689b      	ldr	r3, [r3, #8]
 800061c:	681a      	ldr	r2, [r3, #0]
 800061e:	460b      	mov	r3, r1
 8000620:	63d3      	str	r3, [r2, #60]	; 0x3c
 8000622:	e006      	b.n	8000632 <Motor_Control+0x142>
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	8899      	ldrh	r1, [r3, #4]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	689b      	ldr	r3, [r3, #8]
 800062c:	681a      	ldr	r2, [r3, #0]
 800062e:	460b      	mov	r3, r1
 8000630:	6413      	str	r3, [r2, #64]	; 0x40
	}

	// save value for next cycle to compare
	Motor->PWMCommandLast = Motor->PWMCommandNew;
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	881a      	ldrh	r2, [r3, #0]
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	805a      	strh	r2, [r3, #2]
}
 800063a:	bf00      	nop
 800063c:	3708      	adds	r7, #8
 800063e:	46bd      	mov	sp, r7
 8000640:	bd80      	pop	{r7, pc}
 8000642:	bf00      	nop
 8000644:	40010c00 	.word	0x40010c00

08000648 <Motor_Init>:
 * @param[*PWMTimer] - handler to HAL timer structure
 * @param[PWMTimerChannel] - channel definition : TIM_CHANNEL_1
 * @return - void
 */
void Motor_Init (Motor_t* Motor, TIM_HandleTypeDef* PWMTimer, uint8_t PWMTimerChannel)
{
 8000648:	b580      	push	{r7, lr}
 800064a:	b084      	sub	sp, #16
 800064c:	af00      	add	r7, sp, #0
 800064e:	60f8      	str	r0, [r7, #12]
 8000650:	60b9      	str	r1, [r7, #8]
 8000652:	4613      	mov	r3, r2
 8000654:	71fb      	strb	r3, [r7, #7]
	// assign parameters to strcut
	Motor->PWMTimer = PWMTimer;
 8000656:	68fb      	ldr	r3, [r7, #12]
 8000658:	68ba      	ldr	r2, [r7, #8]
 800065a:	609a      	str	r2, [r3, #8]
	Motor->PWMTimerChannel = PWMTimerChannel;
 800065c:	68fb      	ldr	r3, [r7, #12]
 800065e:	79fa      	ldrb	r2, [r7, #7]
 8000660:	731a      	strb	r2, [r3, #12]

	// start PWM singal
	HAL_TIM_PWM_Start(Motor->PWMTimer, Motor->PWMTimerChannel);
 8000662:	68fb      	ldr	r3, [r7, #12]
 8000664:	689a      	ldr	r2, [r3, #8]
 8000666:	68fb      	ldr	r3, [r7, #12]
 8000668:	7b1b      	ldrb	r3, [r3, #12]
 800066a:	4619      	mov	r1, r3
 800066c:	4610      	mov	r0, r2
 800066e:	f001 fdd9 	bl	8002224 <HAL_TIM_PWM_Start>
}
 8000672:	bf00      	nop
 8000674:	3710      	adds	r7, #16
 8000676:	46bd      	mov	sp, r7
 8000678:	bd80      	pop	{r7, pc}

0800067a <Servo_Control>:
 *
 * @param[*Motor] - handler of Motor struct
 * @return - void
 */
void Servo_Control (Servo_t *Servo)
{
 800067a:	b480      	push	{r7}
 800067c:	b083      	sub	sp, #12
 800067e:	af00      	add	r7, sp, #0
 8000680:	6078      	str	r0, [r7, #4]
	// move only when value changes by 1 degree
	if (abs(Servo->PWMCommandNew - Servo->PWMCommandLast) > SERVO_RESOLUTION_1DEGREE)
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	881b      	ldrh	r3, [r3, #0]
 8000686:	461a      	mov	r2, r3
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	885b      	ldrh	r3, [r3, #2]
 800068c:	1ad3      	subs	r3, r2, r3
 800068e:	2b00      	cmp	r3, #0
 8000690:	bfb8      	it	lt
 8000692:	425b      	neglt	r3, r3
 8000694:	2b16      	cmp	r3, #22
 8000696:	dd29      	ble.n	80006ec <Servo_Control+0x72>
	{
		// write new value to PWM
		__HAL_TIM_SET_COMPARE(Servo->PWMTimer, Servo->PWMTimerChannel, Servo->PWMCommandNew);
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	7a1b      	ldrb	r3, [r3, #8]
 800069c:	2b00      	cmp	r3, #0
 800069e:	d106      	bne.n	80006ae <Servo_Control+0x34>
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	881a      	ldrh	r2, [r3, #0]
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	685b      	ldr	r3, [r3, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	635a      	str	r2, [r3, #52]	; 0x34
 80006ac:	e01e      	b.n	80006ec <Servo_Control+0x72>
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	7a1b      	ldrb	r3, [r3, #8]
 80006b2:	2b04      	cmp	r3, #4
 80006b4:	d107      	bne.n	80006c6 <Servo_Control+0x4c>
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	8819      	ldrh	r1, [r3, #0]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	685b      	ldr	r3, [r3, #4]
 80006be:	681a      	ldr	r2, [r3, #0]
 80006c0:	460b      	mov	r3, r1
 80006c2:	6393      	str	r3, [r2, #56]	; 0x38
 80006c4:	e012      	b.n	80006ec <Servo_Control+0x72>
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	7a1b      	ldrb	r3, [r3, #8]
 80006ca:	2b08      	cmp	r3, #8
 80006cc:	d107      	bne.n	80006de <Servo_Control+0x64>
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	8819      	ldrh	r1, [r3, #0]
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	685b      	ldr	r3, [r3, #4]
 80006d6:	681a      	ldr	r2, [r3, #0]
 80006d8:	460b      	mov	r3, r1
 80006da:	63d3      	str	r3, [r2, #60]	; 0x3c
 80006dc:	e006      	b.n	80006ec <Servo_Control+0x72>
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	8819      	ldrh	r1, [r3, #0]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	685b      	ldr	r3, [r3, #4]
 80006e6:	681a      	ldr	r2, [r3, #0]
 80006e8:	460b      	mov	r3, r1
 80006ea:	6413      	str	r3, [r2, #64]	; 0x40
	}

	// save value for next cycle to compare
	Servo->PWMCommandLast = Servo->PWMCommandNew;
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	881a      	ldrh	r2, [r3, #0]
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	805a      	strh	r2, [r3, #2]
}
 80006f4:	bf00      	nop
 80006f6:	370c      	adds	r7, #12
 80006f8:	46bd      	mov	sp, r7
 80006fa:	bc80      	pop	{r7}
 80006fc:	4770      	bx	lr

080006fe <Servo_Init>:
 * @param[*PWMTimer] - handler to HAL timer structure
 * @param[PWMTimerChannel] - channel definition : TIM_CHANNEL_1
 * @return - void
 */
void Servo_Init (Servo_t *Servo, TIM_HandleTypeDef* PWMTimer, uint8_t PWMTimerChannel)
{
 80006fe:	b580      	push	{r7, lr}
 8000700:	b084      	sub	sp, #16
 8000702:	af00      	add	r7, sp, #0
 8000704:	60f8      	str	r0, [r7, #12]
 8000706:	60b9      	str	r1, [r7, #8]
 8000708:	4613      	mov	r3, r2
 800070a:	71fb      	strb	r3, [r7, #7]
	// assign parameters to strcut
	Servo->PWMTimer = PWMTimer;
 800070c:	68fb      	ldr	r3, [r7, #12]
 800070e:	68ba      	ldr	r2, [r7, #8]
 8000710:	605a      	str	r2, [r3, #4]
	Servo->PWMTimerChannel = PWMTimerChannel;
 8000712:	68fb      	ldr	r3, [r7, #12]
 8000714:	79fa      	ldrb	r2, [r7, #7]
 8000716:	721a      	strb	r2, [r3, #8]

	// start PWM singal
	HAL_TIM_PWM_Start(Servo->PWMTimer, Servo->PWMTimerChannel);
 8000718:	68fb      	ldr	r3, [r7, #12]
 800071a:	685a      	ldr	r2, [r3, #4]
 800071c:	68fb      	ldr	r3, [r7, #12]
 800071e:	7a1b      	ldrb	r3, [r3, #8]
 8000720:	4619      	mov	r1, r3
 8000722:	4610      	mov	r0, r2
 8000724:	f001 fd7e 	bl	8002224 <HAL_TIM_PWM_Start>
}
 8000728:	bf00      	nop
 800072a:	3710      	adds	r7, #16
 800072c:	46bd      	mov	sp, r7
 800072e:	bd80      	pop	{r7, pc}

08000730 <Parser_Parse>:

/*
 * @ function parse message and start command procedures
 */
uint8_t Parser_Parse(uint8_t *ParseBuffer, uint16_t *ServoX, uint16_t *ServoY)
{
 8000730:	b580      	push	{r7, lr}
 8000732:	b086      	sub	sp, #24
 8000734:	af00      	add	r7, sp, #0
 8000736:	60f8      	str	r0, [r7, #12]
 8000738:	60b9      	str	r1, [r7, #8]
 800073a:	607a      	str	r2, [r7, #4]
	uint8_t *ParsePointer;

	ParsePointer = (uint8_t*)(strtok((char*)ParseBuffer, ";"));
 800073c:	4914      	ldr	r1, [pc, #80]	; (8000790 <Parser_Parse+0x60>)
 800073e:	68f8      	ldr	r0, [r7, #12]
 8000740:	f003 f85e 	bl	8003800 <strtok>
 8000744:	6178      	str	r0, [r7, #20]

	if(strcmp((char*)ParsePointer,"ACK") == 0)
 8000746:	4913      	ldr	r1, [pc, #76]	; (8000794 <Parser_Parse+0x64>)
 8000748:	6978      	ldr	r0, [r7, #20]
 800074a:	f7ff fcff 	bl	800014c <strcmp>
 800074e:	4603      	mov	r3, r0
 8000750:	2b00      	cmp	r3, #0
 8000752:	d117      	bne.n	8000784 <Parser_Parse+0x54>
	{
		ParsePointer = (uint8_t*)(strtok(NULL, ";"));
 8000754:	490e      	ldr	r1, [pc, #56]	; (8000790 <Parser_Parse+0x60>)
 8000756:	2000      	movs	r0, #0
 8000758:	f003 f852 	bl	8003800 <strtok>
 800075c:	6178      	str	r0, [r7, #20]
		*ServoX = atoi((const char*) ParsePointer);
 800075e:	6978      	ldr	r0, [r7, #20]
 8000760:	f002 fff8 	bl	8003754 <atoi>
 8000764:	4603      	mov	r3, r0
 8000766:	b29a      	uxth	r2, r3
 8000768:	68bb      	ldr	r3, [r7, #8]
 800076a:	801a      	strh	r2, [r3, #0]

		ParsePointer = (uint8_t*)(strtok(NULL, ";"));
 800076c:	4908      	ldr	r1, [pc, #32]	; (8000790 <Parser_Parse+0x60>)
 800076e:	2000      	movs	r0, #0
 8000770:	f003 f846 	bl	8003800 <strtok>
 8000774:	6178      	str	r0, [r7, #20]
		*ServoY = atoi((const char*) ParsePointer);
 8000776:	6978      	ldr	r0, [r7, #20]
 8000778:	f002 ffec 	bl	8003754 <atoi>
 800077c:	4603      	mov	r3, r0
 800077e:	b29a      	uxth	r2, r3
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	801a      	strh	r2, [r3, #0]
	}

	return 0;
 8000784:	2300      	movs	r3, #0
}
 8000786:	4618      	mov	r0, r3
 8000788:	3718      	adds	r7, #24
 800078a:	46bd      	mov	sp, r7
 800078c:	bd80      	pop	{r7, pc}
 800078e:	bf00      	nop
 8000790:	08004ec8 	.word	0x08004ec8
 8000794:	08004ecc 	.word	0x08004ecc

08000798 <RB_Read>:
 */

#include "ringbuffer.h"

RB_Status RB_Read(Ringbuffer_t *buffer, uint8_t *value)
{
 8000798:	b480      	push	{r7}
 800079a:	b083      	sub	sp, #12
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
 80007a0:	6039      	str	r1, [r7, #0]
	if(buffer->Head == buffer->Tail)
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	f8b3 2080 	ldrh.w	r2, [r3, #128]	; 0x80
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	f8b3 3082 	ldrh.w	r3, [r3, #130]	; 0x82
 80007ae:	429a      	cmp	r2, r3
 80007b0:	d101      	bne.n	80007b6 <RB_Read+0x1e>
	{
		return RB_ERROR;
 80007b2:	2301      	movs	r3, #1
 80007b4:	e017      	b.n	80007e6 <RB_Read+0x4e>
	}

	*value = buffer->buffer[buffer->Tail];
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	f8b3 3082 	ldrh.w	r3, [r3, #130]	; 0x82
 80007bc:	461a      	mov	r2, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	5c9a      	ldrb	r2, [r3, r2]
 80007c2:	683b      	ldr	r3, [r7, #0]
 80007c4:	701a      	strb	r2, [r3, #0]

	buffer->Tail = (buffer->Tail + 1) % RING_BUFFER_SIZE;
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	f8b3 3082 	ldrh.w	r3, [r3, #130]	; 0x82
 80007cc:	3301      	adds	r3, #1
 80007ce:	425a      	negs	r2, r3
 80007d0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80007d4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80007d8:	bf58      	it	pl
 80007da:	4253      	negpl	r3, r2
 80007dc:	b29a      	uxth	r2, r3
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	f8a3 2082 	strh.w	r2, [r3, #130]	; 0x82

	return RB_OK;
 80007e4:	2300      	movs	r3, #0
}
 80007e6:	4618      	mov	r0, r3
 80007e8:	370c      	adds	r7, #12
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bc80      	pop	{r7}
 80007ee:	4770      	bx	lr

080007f0 <RB_Write>:

RB_Status RB_Write(Ringbuffer_t *buffer, uint8_t value)
{
 80007f0:	b480      	push	{r7}
 80007f2:	b085      	sub	sp, #20
 80007f4:	af00      	add	r7, sp, #0
 80007f6:	6078      	str	r0, [r7, #4]
 80007f8:	460b      	mov	r3, r1
 80007fa:	70fb      	strb	r3, [r7, #3]

	uint16_t HeadTmp;
	HeadTmp = (buffer->Head + 1) % RING_BUFFER_SIZE;
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	f8b3 3080 	ldrh.w	r3, [r3, #128]	; 0x80
 8000802:	3301      	adds	r3, #1
 8000804:	425a      	negs	r2, r3
 8000806:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800080a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800080e:	bf58      	it	pl
 8000810:	4253      	negpl	r3, r2
 8000812:	81fb      	strh	r3, [r7, #14]

	if (HeadTmp == buffer->Tail)
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	f8b3 3082 	ldrh.w	r3, [r3, #130]	; 0x82
 800081a:	89fa      	ldrh	r2, [r7, #14]
 800081c:	429a      	cmp	r2, r3
 800081e:	d101      	bne.n	8000824 <RB_Write+0x34>
	{
		return RB_ERROR;
 8000820:	2301      	movs	r3, #1
 8000822:	e00b      	b.n	800083c <RB_Write+0x4c>
	}

	buffer->buffer[buffer->Head] = value;
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	f8b3 3080 	ldrh.w	r3, [r3, #128]	; 0x80
 800082a:	4619      	mov	r1, r3
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	78fa      	ldrb	r2, [r7, #3]
 8000830:	545a      	strb	r2, [r3, r1]
	buffer->Head = HeadTmp;
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	89fa      	ldrh	r2, [r7, #14]
 8000836:	f8a3 2080 	strh.w	r2, [r3, #128]	; 0x80

	return RB_OK;
 800083a:	2300      	movs	r3, #0
}
 800083c:	4618      	mov	r0, r3
 800083e:	3714      	adds	r7, #20
 8000840:	46bd      	mov	sp, r7
 8000842:	bc80      	pop	{r7}
 8000844:	4770      	bx	lr

08000846 <RB_Flush>:

void RB_Flush(Ringbuffer_t *buffer)
{
 8000846:	b480      	push	{r7}
 8000848:	b083      	sub	sp, #12
 800084a:	af00      	add	r7, sp, #0
 800084c:	6078      	str	r0, [r7, #4]
	buffer->Head = 0;
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	2200      	movs	r2, #0
 8000852:	f8a3 2080 	strh.w	r2, [r3, #128]	; 0x80
	buffer->Tail = 0;
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	2200      	movs	r2, #0
 800085a:	f8a3 2082 	strh.w	r2, [r3, #130]	; 0x82
}
 800085e:	bf00      	nop
 8000860:	370c      	adds	r7, #12
 8000862:	46bd      	mov	sp, r7
 8000864:	bc80      	pop	{r7}
 8000866:	4770      	bx	lr

08000868 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000868:	b480      	push	{r7}
 800086a:	b085      	sub	sp, #20
 800086c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800086e:	4b15      	ldr	r3, [pc, #84]	; (80008c4 <HAL_MspInit+0x5c>)
 8000870:	699b      	ldr	r3, [r3, #24]
 8000872:	4a14      	ldr	r2, [pc, #80]	; (80008c4 <HAL_MspInit+0x5c>)
 8000874:	f043 0301 	orr.w	r3, r3, #1
 8000878:	6193      	str	r3, [r2, #24]
 800087a:	4b12      	ldr	r3, [pc, #72]	; (80008c4 <HAL_MspInit+0x5c>)
 800087c:	699b      	ldr	r3, [r3, #24]
 800087e:	f003 0301 	and.w	r3, r3, #1
 8000882:	60bb      	str	r3, [r7, #8]
 8000884:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000886:	4b0f      	ldr	r3, [pc, #60]	; (80008c4 <HAL_MspInit+0x5c>)
 8000888:	69db      	ldr	r3, [r3, #28]
 800088a:	4a0e      	ldr	r2, [pc, #56]	; (80008c4 <HAL_MspInit+0x5c>)
 800088c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000890:	61d3      	str	r3, [r2, #28]
 8000892:	4b0c      	ldr	r3, [pc, #48]	; (80008c4 <HAL_MspInit+0x5c>)
 8000894:	69db      	ldr	r3, [r3, #28]
 8000896:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800089a:	607b      	str	r3, [r7, #4]
 800089c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800089e:	4b0a      	ldr	r3, [pc, #40]	; (80008c8 <HAL_MspInit+0x60>)
 80008a0:	685b      	ldr	r3, [r3, #4]
 80008a2:	60fb      	str	r3, [r7, #12]
 80008a4:	68fb      	ldr	r3, [r7, #12]
 80008a6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80008aa:	60fb      	str	r3, [r7, #12]
 80008ac:	68fb      	ldr	r3, [r7, #12]
 80008ae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80008b2:	60fb      	str	r3, [r7, #12]
 80008b4:	4a04      	ldr	r2, [pc, #16]	; (80008c8 <HAL_MspInit+0x60>)
 80008b6:	68fb      	ldr	r3, [r7, #12]
 80008b8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80008ba:	bf00      	nop
 80008bc:	3714      	adds	r7, #20
 80008be:	46bd      	mov	sp, r7
 80008c0:	bc80      	pop	{r7}
 80008c2:	4770      	bx	lr
 80008c4:	40021000 	.word	0x40021000
 80008c8:	40010000 	.word	0x40010000

080008cc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80008cc:	b480      	push	{r7}
 80008ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80008d0:	e7fe      	b.n	80008d0 <NMI_Handler+0x4>

080008d2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80008d2:	b480      	push	{r7}
 80008d4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80008d6:	e7fe      	b.n	80008d6 <HardFault_Handler+0x4>

080008d8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80008d8:	b480      	push	{r7}
 80008da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80008dc:	e7fe      	b.n	80008dc <MemManage_Handler+0x4>

080008de <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80008de:	b480      	push	{r7}
 80008e0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80008e2:	e7fe      	b.n	80008e2 <BusFault_Handler+0x4>

080008e4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80008e4:	b480      	push	{r7}
 80008e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80008e8:	e7fe      	b.n	80008e8 <UsageFault_Handler+0x4>

080008ea <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80008ea:	b480      	push	{r7}
 80008ec:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80008ee:	bf00      	nop
 80008f0:	46bd      	mov	sp, r7
 80008f2:	bc80      	pop	{r7}
 80008f4:	4770      	bx	lr

080008f6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80008f6:	b480      	push	{r7}
 80008f8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80008fa:	bf00      	nop
 80008fc:	46bd      	mov	sp, r7
 80008fe:	bc80      	pop	{r7}
 8000900:	4770      	bx	lr

08000902 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000902:	b480      	push	{r7}
 8000904:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000906:	bf00      	nop
 8000908:	46bd      	mov	sp, r7
 800090a:	bc80      	pop	{r7}
 800090c:	4770      	bx	lr

0800090e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800090e:	b580      	push	{r7, lr}
 8000910:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000912:	f000 faf9 	bl	8000f08 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000916:	bf00      	nop
 8000918:	bd80      	pop	{r7, pc}
	...

0800091c <DMA1_Channel5_IRQHandler>:

/**
  * @brief This function handles DMA1 channel5 global interrupt.
  */
void DMA1_Channel5_IRQHandler(void)
{
 800091c:	b580      	push	{r7, lr}
 800091e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */

  /* USER CODE END DMA1_Channel5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8000920:	4802      	ldr	r0, [pc, #8]	; (800092c <DMA1_Channel5_IRQHandler+0x10>)
 8000922:	f000 fd25 	bl	8001370 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */

  /* USER CODE END DMA1_Channel5_IRQn 1 */
}
 8000926:	bf00      	nop
 8000928:	bd80      	pop	{r7, pc}
 800092a:	bf00      	nop
 800092c:	200001f0 	.word	0x200001f0

08000930 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000930:	b580      	push	{r7, lr}
 8000932:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000934:	4802      	ldr	r0, [pc, #8]	; (8000940 <USART1_IRQHandler+0x10>)
 8000936:	f002 fae5 	bl	8002f04 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800093a:	bf00      	nop
 800093c:	bd80      	pop	{r7, pc}
 800093e:	bf00      	nop
 8000940:	20000234 	.word	0x20000234

08000944 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000944:	b480      	push	{r7}
 8000946:	af00      	add	r7, sp, #0
	return 1;
 8000948:	2301      	movs	r3, #1
}
 800094a:	4618      	mov	r0, r3
 800094c:	46bd      	mov	sp, r7
 800094e:	bc80      	pop	{r7}
 8000950:	4770      	bx	lr

08000952 <_kill>:

int _kill(int pid, int sig)
{
 8000952:	b580      	push	{r7, lr}
 8000954:	b082      	sub	sp, #8
 8000956:	af00      	add	r7, sp, #0
 8000958:	6078      	str	r0, [r7, #4]
 800095a:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800095c:	f002 fefe 	bl	800375c <__errno>
 8000960:	4603      	mov	r3, r0
 8000962:	2216      	movs	r2, #22
 8000964:	601a      	str	r2, [r3, #0]
	return -1;
 8000966:	f04f 33ff 	mov.w	r3, #4294967295
}
 800096a:	4618      	mov	r0, r3
 800096c:	3708      	adds	r7, #8
 800096e:	46bd      	mov	sp, r7
 8000970:	bd80      	pop	{r7, pc}

08000972 <_exit>:

void _exit (int status)
{
 8000972:	b580      	push	{r7, lr}
 8000974:	b082      	sub	sp, #8
 8000976:	af00      	add	r7, sp, #0
 8000978:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800097a:	f04f 31ff 	mov.w	r1, #4294967295
 800097e:	6878      	ldr	r0, [r7, #4]
 8000980:	f7ff ffe7 	bl	8000952 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000984:	e7fe      	b.n	8000984 <_exit+0x12>

08000986 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000986:	b580      	push	{r7, lr}
 8000988:	b086      	sub	sp, #24
 800098a:	af00      	add	r7, sp, #0
 800098c:	60f8      	str	r0, [r7, #12]
 800098e:	60b9      	str	r1, [r7, #8]
 8000990:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000992:	2300      	movs	r3, #0
 8000994:	617b      	str	r3, [r7, #20]
 8000996:	e00a      	b.n	80009ae <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000998:	f3af 8000 	nop.w
 800099c:	4601      	mov	r1, r0
 800099e:	68bb      	ldr	r3, [r7, #8]
 80009a0:	1c5a      	adds	r2, r3, #1
 80009a2:	60ba      	str	r2, [r7, #8]
 80009a4:	b2ca      	uxtb	r2, r1
 80009a6:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80009a8:	697b      	ldr	r3, [r7, #20]
 80009aa:	3301      	adds	r3, #1
 80009ac:	617b      	str	r3, [r7, #20]
 80009ae:	697a      	ldr	r2, [r7, #20]
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	429a      	cmp	r2, r3
 80009b4:	dbf0      	blt.n	8000998 <_read+0x12>
	}

return len;
 80009b6:	687b      	ldr	r3, [r7, #4]
}
 80009b8:	4618      	mov	r0, r3
 80009ba:	3718      	adds	r7, #24
 80009bc:	46bd      	mov	sp, r7
 80009be:	bd80      	pop	{r7, pc}

080009c0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b086      	sub	sp, #24
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	60f8      	str	r0, [r7, #12]
 80009c8:	60b9      	str	r1, [r7, #8]
 80009ca:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80009cc:	2300      	movs	r3, #0
 80009ce:	617b      	str	r3, [r7, #20]
 80009d0:	e009      	b.n	80009e6 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80009d2:	68bb      	ldr	r3, [r7, #8]
 80009d4:	1c5a      	adds	r2, r3, #1
 80009d6:	60ba      	str	r2, [r7, #8]
 80009d8:	781b      	ldrb	r3, [r3, #0]
 80009da:	4618      	mov	r0, r3
 80009dc:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80009e0:	697b      	ldr	r3, [r7, #20]
 80009e2:	3301      	adds	r3, #1
 80009e4:	617b      	str	r3, [r7, #20]
 80009e6:	697a      	ldr	r2, [r7, #20]
 80009e8:	687b      	ldr	r3, [r7, #4]
 80009ea:	429a      	cmp	r2, r3
 80009ec:	dbf1      	blt.n	80009d2 <_write+0x12>
	}
	return len;
 80009ee:	687b      	ldr	r3, [r7, #4]
}
 80009f0:	4618      	mov	r0, r3
 80009f2:	3718      	adds	r7, #24
 80009f4:	46bd      	mov	sp, r7
 80009f6:	bd80      	pop	{r7, pc}

080009f8 <_close>:

int _close(int file)
{
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
	return -1;
 8000a00:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000a04:	4618      	mov	r0, r3
 8000a06:	370c      	adds	r7, #12
 8000a08:	46bd      	mov	sp, r7
 8000a0a:	bc80      	pop	{r7}
 8000a0c:	4770      	bx	lr

08000a0e <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000a0e:	b480      	push	{r7}
 8000a10:	b083      	sub	sp, #12
 8000a12:	af00      	add	r7, sp, #0
 8000a14:	6078      	str	r0, [r7, #4]
 8000a16:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000a18:	683b      	ldr	r3, [r7, #0]
 8000a1a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000a1e:	605a      	str	r2, [r3, #4]
	return 0;
 8000a20:	2300      	movs	r3, #0
}
 8000a22:	4618      	mov	r0, r3
 8000a24:	370c      	adds	r7, #12
 8000a26:	46bd      	mov	sp, r7
 8000a28:	bc80      	pop	{r7}
 8000a2a:	4770      	bx	lr

08000a2c <_isatty>:

int _isatty(int file)
{
 8000a2c:	b480      	push	{r7}
 8000a2e:	b083      	sub	sp, #12
 8000a30:	af00      	add	r7, sp, #0
 8000a32:	6078      	str	r0, [r7, #4]
	return 1;
 8000a34:	2301      	movs	r3, #1
}
 8000a36:	4618      	mov	r0, r3
 8000a38:	370c      	adds	r7, #12
 8000a3a:	46bd      	mov	sp, r7
 8000a3c:	bc80      	pop	{r7}
 8000a3e:	4770      	bx	lr

08000a40 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000a40:	b480      	push	{r7}
 8000a42:	b085      	sub	sp, #20
 8000a44:	af00      	add	r7, sp, #0
 8000a46:	60f8      	str	r0, [r7, #12]
 8000a48:	60b9      	str	r1, [r7, #8]
 8000a4a:	607a      	str	r2, [r7, #4]
	return 0;
 8000a4c:	2300      	movs	r3, #0
}
 8000a4e:	4618      	mov	r0, r3
 8000a50:	3714      	adds	r7, #20
 8000a52:	46bd      	mov	sp, r7
 8000a54:	bc80      	pop	{r7}
 8000a56:	4770      	bx	lr

08000a58 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000a58:	b580      	push	{r7, lr}
 8000a5a:	b086      	sub	sp, #24
 8000a5c:	af00      	add	r7, sp, #0
 8000a5e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000a60:	4a14      	ldr	r2, [pc, #80]	; (8000ab4 <_sbrk+0x5c>)
 8000a62:	4b15      	ldr	r3, [pc, #84]	; (8000ab8 <_sbrk+0x60>)
 8000a64:	1ad3      	subs	r3, r2, r3
 8000a66:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000a68:	697b      	ldr	r3, [r7, #20]
 8000a6a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000a6c:	4b13      	ldr	r3, [pc, #76]	; (8000abc <_sbrk+0x64>)
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	d102      	bne.n	8000a7a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000a74:	4b11      	ldr	r3, [pc, #68]	; (8000abc <_sbrk+0x64>)
 8000a76:	4a12      	ldr	r2, [pc, #72]	; (8000ac0 <_sbrk+0x68>)
 8000a78:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000a7a:	4b10      	ldr	r3, [pc, #64]	; (8000abc <_sbrk+0x64>)
 8000a7c:	681a      	ldr	r2, [r3, #0]
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	4413      	add	r3, r2
 8000a82:	693a      	ldr	r2, [r7, #16]
 8000a84:	429a      	cmp	r2, r3
 8000a86:	d207      	bcs.n	8000a98 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000a88:	f002 fe68 	bl	800375c <__errno>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	220c      	movs	r2, #12
 8000a90:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000a92:	f04f 33ff 	mov.w	r3, #4294967295
 8000a96:	e009      	b.n	8000aac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000a98:	4b08      	ldr	r3, [pc, #32]	; (8000abc <_sbrk+0x64>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000a9e:	4b07      	ldr	r3, [pc, #28]	; (8000abc <_sbrk+0x64>)
 8000aa0:	681a      	ldr	r2, [r3, #0]
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	4413      	add	r3, r2
 8000aa6:	4a05      	ldr	r2, [pc, #20]	; (8000abc <_sbrk+0x64>)
 8000aa8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000aaa:	68fb      	ldr	r3, [r7, #12]
}
 8000aac:	4618      	mov	r0, r3
 8000aae:	3718      	adds	r7, #24
 8000ab0:	46bd      	mov	sp, r7
 8000ab2:	bd80      	pop	{r7, pc}
 8000ab4:	20002800 	.word	0x20002800
 8000ab8:	00000400 	.word	0x00000400
 8000abc:	2000008c 	.word	0x2000008c
 8000ac0:	20000290 	.word	0x20000290

08000ac4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000ac4:	b480      	push	{r7}
 8000ac6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000ac8:	bf00      	nop
 8000aca:	46bd      	mov	sp, r7
 8000acc:	bc80      	pop	{r7}
 8000ace:	4770      	bx	lr

08000ad0 <MX_TIM1_Init>:

TIM_HandleTypeDef htim1;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	b096      	sub	sp, #88	; 0x58
 8000ad4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000ad6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000ada:	2200      	movs	r2, #0
 8000adc:	601a      	str	r2, [r3, #0]
 8000ade:	605a      	str	r2, [r3, #4]
 8000ae0:	609a      	str	r2, [r3, #8]
 8000ae2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000ae4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000ae8:	2200      	movs	r2, #0
 8000aea:	601a      	str	r2, [r3, #0]
 8000aec:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000aee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000af2:	2200      	movs	r2, #0
 8000af4:	601a      	str	r2, [r3, #0]
 8000af6:	605a      	str	r2, [r3, #4]
 8000af8:	609a      	str	r2, [r3, #8]
 8000afa:	60da      	str	r2, [r3, #12]
 8000afc:	611a      	str	r2, [r3, #16]
 8000afe:	615a      	str	r2, [r3, #20]
 8000b00:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000b02:	1d3b      	adds	r3, r7, #4
 8000b04:	2220      	movs	r2, #32
 8000b06:	2100      	movs	r1, #0
 8000b08:	4618      	mov	r0, r3
 8000b0a:	f002 fe51 	bl	80037b0 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000b0e:	4b46      	ldr	r3, [pc, #280]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b10:	4a46      	ldr	r2, [pc, #280]	; (8000c2c <MX_TIM1_Init+0x15c>)
 8000b12:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 31;
 8000b14:	4b44      	ldr	r3, [pc, #272]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b16:	221f      	movs	r2, #31
 8000b18:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b1a:	4b43      	ldr	r3, [pc, #268]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 39999;
 8000b20:	4b41      	ldr	r3, [pc, #260]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b22:	f649 423f 	movw	r2, #39999	; 0x9c3f
 8000b26:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b28:	4b3f      	ldr	r3, [pc, #252]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000b2e:	4b3e      	ldr	r3, [pc, #248]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b30:	2200      	movs	r2, #0
 8000b32:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000b34:	4b3c      	ldr	r3, [pc, #240]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b36:	2200      	movs	r2, #0
 8000b38:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000b3a:	483b      	ldr	r0, [pc, #236]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b3c:	f001 faca 	bl	80020d4 <HAL_TIM_Base_Init>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8000b46:	f7ff fccd 	bl	80004e4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000b4a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b4e:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000b50:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000b54:	4619      	mov	r1, r3
 8000b56:	4834      	ldr	r0, [pc, #208]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b58:	f001 fcbe 	bl	80024d8 <HAL_TIM_ConfigClockSource>
 8000b5c:	4603      	mov	r3, r0
 8000b5e:	2b00      	cmp	r3, #0
 8000b60:	d001      	beq.n	8000b66 <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8000b62:	f7ff fcbf 	bl	80004e4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8000b66:	4830      	ldr	r0, [pc, #192]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b68:	f001 fb03 	bl	8002172 <HAL_TIM_PWM_Init>
 8000b6c:	4603      	mov	r3, r0
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d001      	beq.n	8000b76 <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8000b72:	f7ff fcb7 	bl	80004e4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b76:	2300      	movs	r3, #0
 8000b78:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000b7e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000b82:	4619      	mov	r1, r3
 8000b84:	4828      	ldr	r0, [pc, #160]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000b86:	f002 f805 	bl	8002b94 <HAL_TIMEx_MasterConfigSynchronization>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d001      	beq.n	8000b94 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8000b90:	f7ff fca8 	bl	80004e4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000b94:	2360      	movs	r3, #96	; 0x60
 8000b96:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 200;
 8000b98:	23c8      	movs	r3, #200	; 0xc8
 8000b9a:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000ba8:	2300      	movs	r3, #0
 8000baa:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000bac:	2300      	movs	r3, #0
 8000bae:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000bb0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000bb4:	2200      	movs	r2, #0
 8000bb6:	4619      	mov	r1, r3
 8000bb8:	481b      	ldr	r0, [pc, #108]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000bba:	f001 fbcf 	bl	800235c <HAL_TIM_PWM_ConfigChannel>
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	d001      	beq.n	8000bc8 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8000bc4:	f7ff fc8e 	bl	80004e4 <Error_Handler>
  }
  sConfigOC.Pulse = 20000;
 8000bc8:	f644 6320 	movw	r3, #20000	; 0x4e20
 8000bcc:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000bce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000bd2:	2204      	movs	r2, #4
 8000bd4:	4619      	mov	r1, r3
 8000bd6:	4814      	ldr	r0, [pc, #80]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000bd8:	f001 fbc0 	bl	800235c <HAL_TIM_PWM_ConfigChannel>
 8000bdc:	4603      	mov	r3, r0
 8000bde:	2b00      	cmp	r3, #0
 8000be0:	d001      	beq.n	8000be6 <MX_TIM1_Init+0x116>
  {
    Error_Handler();
 8000be2:	f7ff fc7f 	bl	80004e4 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000be6:	2300      	movs	r3, #0
 8000be8:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000bea:	2300      	movs	r3, #0
 8000bec:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000bee:	2300      	movs	r3, #0
 8000bf0:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000bfa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000bfe:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000c00:	2300      	movs	r3, #0
 8000c02:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000c04:	1d3b      	adds	r3, r7, #4
 8000c06:	4619      	mov	r1, r3
 8000c08:	4807      	ldr	r0, [pc, #28]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000c0a:	f002 f81b 	bl	8002c44 <HAL_TIMEx_ConfigBreakDeadTime>
 8000c0e:	4603      	mov	r3, r0
 8000c10:	2b00      	cmp	r3, #0
 8000c12:	d001      	beq.n	8000c18 <MX_TIM1_Init+0x148>
  {
    Error_Handler();
 8000c14:	f7ff fc66 	bl	80004e4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000c18:	4803      	ldr	r0, [pc, #12]	; (8000c28 <MX_TIM1_Init+0x158>)
 8000c1a:	f000 f827 	bl	8000c6c <HAL_TIM_MspPostInit>

}
 8000c1e:	bf00      	nop
 8000c20:	3758      	adds	r7, #88	; 0x58
 8000c22:	46bd      	mov	sp, r7
 8000c24:	bd80      	pop	{r7, pc}
 8000c26:	bf00      	nop
 8000c28:	200001a8 	.word	0x200001a8
 8000c2c:	40012c00 	.word	0x40012c00

08000c30 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8000c30:	b480      	push	{r7}
 8000c32:	b085      	sub	sp, #20
 8000c34:	af00      	add	r7, sp, #0
 8000c36:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8000c38:	687b      	ldr	r3, [r7, #4]
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	4a09      	ldr	r2, [pc, #36]	; (8000c64 <HAL_TIM_Base_MspInit+0x34>)
 8000c3e:	4293      	cmp	r3, r2
 8000c40:	d10b      	bne.n	8000c5a <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8000c42:	4b09      	ldr	r3, [pc, #36]	; (8000c68 <HAL_TIM_Base_MspInit+0x38>)
 8000c44:	699b      	ldr	r3, [r3, #24]
 8000c46:	4a08      	ldr	r2, [pc, #32]	; (8000c68 <HAL_TIM_Base_MspInit+0x38>)
 8000c48:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000c4c:	6193      	str	r3, [r2, #24]
 8000c4e:	4b06      	ldr	r3, [pc, #24]	; (8000c68 <HAL_TIM_Base_MspInit+0x38>)
 8000c50:	699b      	ldr	r3, [r3, #24]
 8000c52:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000c56:	60fb      	str	r3, [r7, #12]
 8000c58:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8000c5a:	bf00      	nop
 8000c5c:	3714      	adds	r7, #20
 8000c5e:	46bd      	mov	sp, r7
 8000c60:	bc80      	pop	{r7}
 8000c62:	4770      	bx	lr
 8000c64:	40012c00 	.word	0x40012c00
 8000c68:	40021000 	.word	0x40021000

08000c6c <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b088      	sub	sp, #32
 8000c70:	af00      	add	r7, sp, #0
 8000c72:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c74:	f107 0310 	add.w	r3, r7, #16
 8000c78:	2200      	movs	r2, #0
 8000c7a:	601a      	str	r2, [r3, #0]
 8000c7c:	605a      	str	r2, [r3, #4]
 8000c7e:	609a      	str	r2, [r3, #8]
 8000c80:	60da      	str	r2, [r3, #12]
  if(timHandle->Instance==TIM1)
 8000c82:	687b      	ldr	r3, [r7, #4]
 8000c84:	681b      	ldr	r3, [r3, #0]
 8000c86:	4a10      	ldr	r2, [pc, #64]	; (8000cc8 <HAL_TIM_MspPostInit+0x5c>)
 8000c88:	4293      	cmp	r3, r2
 8000c8a:	d118      	bne.n	8000cbe <HAL_TIM_MspPostInit+0x52>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c8c:	4b0f      	ldr	r3, [pc, #60]	; (8000ccc <HAL_TIM_MspPostInit+0x60>)
 8000c8e:	699b      	ldr	r3, [r3, #24]
 8000c90:	4a0e      	ldr	r2, [pc, #56]	; (8000ccc <HAL_TIM_MspPostInit+0x60>)
 8000c92:	f043 0304 	orr.w	r3, r3, #4
 8000c96:	6193      	str	r3, [r2, #24]
 8000c98:	4b0c      	ldr	r3, [pc, #48]	; (8000ccc <HAL_TIM_MspPostInit+0x60>)
 8000c9a:	699b      	ldr	r3, [r3, #24]
 8000c9c:	f003 0304 	and.w	r3, r3, #4
 8000ca0:	60fb      	str	r3, [r7, #12]
 8000ca2:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000ca4:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000ca8:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000caa:	2302      	movs	r3, #2
 8000cac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cae:	2302      	movs	r3, #2
 8000cb0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cb2:	f107 0310 	add.w	r3, r7, #16
 8000cb6:	4619      	mov	r1, r3
 8000cb8:	4805      	ldr	r0, [pc, #20]	; (8000cd0 <HAL_TIM_MspPostInit+0x64>)
 8000cba:	f000 fc5f 	bl	800157c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8000cbe:	bf00      	nop
 8000cc0:	3720      	adds	r7, #32
 8000cc2:	46bd      	mov	sp, r7
 8000cc4:	bd80      	pop	{r7, pc}
 8000cc6:	bf00      	nop
 8000cc8:	40012c00 	.word	0x40012c00
 8000ccc:	40021000 	.word	0x40021000
 8000cd0:	40010800 	.word	0x40010800

08000cd4 <MX_USART1_UART_Init>:
DMA_HandleTypeDef hdma_usart1_rx;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000cd8:	4b11      	ldr	r3, [pc, #68]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000cda:	4a12      	ldr	r2, [pc, #72]	; (8000d24 <MX_USART1_UART_Init+0x50>)
 8000cdc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 38400;
 8000cde:	4b10      	ldr	r3, [pc, #64]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000ce0:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8000ce4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000ce6:	4b0e      	ldr	r3, [pc, #56]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000ce8:	2200      	movs	r2, #0
 8000cea:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000cec:	4b0c      	ldr	r3, [pc, #48]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000cee:	2200      	movs	r2, #0
 8000cf0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000cf2:	4b0b      	ldr	r3, [pc, #44]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000cf8:	4b09      	ldr	r3, [pc, #36]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000cfa:	220c      	movs	r2, #12
 8000cfc:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000cfe:	4b08      	ldr	r3, [pc, #32]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000d00:	2200      	movs	r2, #0
 8000d02:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000d04:	4b06      	ldr	r3, [pc, #24]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000d06:	2200      	movs	r2, #0
 8000d08:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000d0a:	4805      	ldr	r0, [pc, #20]	; (8000d20 <MX_USART1_UART_Init+0x4c>)
 8000d0c:	f001 ffeb 	bl	8002ce6 <HAL_UART_Init>
 8000d10:	4603      	mov	r3, r0
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d001      	beq.n	8000d1a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000d16:	f7ff fbe5 	bl	80004e4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000d1a:	bf00      	nop
 8000d1c:	bd80      	pop	{r7, pc}
 8000d1e:	bf00      	nop
 8000d20:	20000234 	.word	0x20000234
 8000d24:	40013800 	.word	0x40013800

08000d28 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	b08a      	sub	sp, #40	; 0x28
 8000d2c:	af00      	add	r7, sp, #0
 8000d2e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d30:	f107 0314 	add.w	r3, r7, #20
 8000d34:	2200      	movs	r2, #0
 8000d36:	601a      	str	r2, [r3, #0]
 8000d38:	605a      	str	r2, [r3, #4]
 8000d3a:	609a      	str	r2, [r3, #8]
 8000d3c:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	4a35      	ldr	r2, [pc, #212]	; (8000e18 <HAL_UART_MspInit+0xf0>)
 8000d44:	4293      	cmp	r3, r2
 8000d46:	d163      	bne.n	8000e10 <HAL_UART_MspInit+0xe8>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000d48:	4b34      	ldr	r3, [pc, #208]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d4a:	699b      	ldr	r3, [r3, #24]
 8000d4c:	4a33      	ldr	r2, [pc, #204]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d4e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d52:	6193      	str	r3, [r2, #24]
 8000d54:	4b31      	ldr	r3, [pc, #196]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d56:	699b      	ldr	r3, [r3, #24]
 8000d58:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000d5c:	613b      	str	r3, [r7, #16]
 8000d5e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d60:	4b2e      	ldr	r3, [pc, #184]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d62:	699b      	ldr	r3, [r3, #24]
 8000d64:	4a2d      	ldr	r2, [pc, #180]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d66:	f043 0308 	orr.w	r3, r3, #8
 8000d6a:	6193      	str	r3, [r2, #24]
 8000d6c:	4b2b      	ldr	r3, [pc, #172]	; (8000e1c <HAL_UART_MspInit+0xf4>)
 8000d6e:	699b      	ldr	r3, [r3, #24]
 8000d70:	f003 0308 	and.w	r3, r3, #8
 8000d74:	60fb      	str	r3, [r7, #12]
 8000d76:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000d78:	2340      	movs	r3, #64	; 0x40
 8000d7a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d7c:	2302      	movs	r3, #2
 8000d7e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000d80:	2303      	movs	r3, #3
 8000d82:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d84:	f107 0314 	add.w	r3, r7, #20
 8000d88:	4619      	mov	r1, r3
 8000d8a:	4825      	ldr	r0, [pc, #148]	; (8000e20 <HAL_UART_MspInit+0xf8>)
 8000d8c:	f000 fbf6 	bl	800157c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8000d90:	2380      	movs	r3, #128	; 0x80
 8000d92:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d94:	2300      	movs	r3, #0
 8000d96:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d98:	2300      	movs	r3, #0
 8000d9a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d9c:	f107 0314 	add.w	r3, r7, #20
 8000da0:	4619      	mov	r1, r3
 8000da2:	481f      	ldr	r0, [pc, #124]	; (8000e20 <HAL_UART_MspInit+0xf8>)
 8000da4:	f000 fbea 	bl	800157c <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_USART1_ENABLE();
 8000da8:	4b1e      	ldr	r3, [pc, #120]	; (8000e24 <HAL_UART_MspInit+0xfc>)
 8000daa:	685b      	ldr	r3, [r3, #4]
 8000dac:	627b      	str	r3, [r7, #36]	; 0x24
 8000dae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000db0:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8000db4:	627b      	str	r3, [r7, #36]	; 0x24
 8000db6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000db8:	f043 0304 	orr.w	r3, r3, #4
 8000dbc:	627b      	str	r3, [r7, #36]	; 0x24
 8000dbe:	4a19      	ldr	r2, [pc, #100]	; (8000e24 <HAL_UART_MspInit+0xfc>)
 8000dc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000dc2:	6053      	str	r3, [r2, #4]

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA1_Channel5;
 8000dc4:	4b18      	ldr	r3, [pc, #96]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dc6:	4a19      	ldr	r2, [pc, #100]	; (8000e2c <HAL_UART_MspInit+0x104>)
 8000dc8:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000dca:	4b17      	ldr	r3, [pc, #92]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dcc:	2200      	movs	r2, #0
 8000dce:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8000dd0:	4b15      	ldr	r3, [pc, #84]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8000dd6:	4b14      	ldr	r3, [pc, #80]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dd8:	2280      	movs	r2, #128	; 0x80
 8000dda:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8000ddc:	4b12      	ldr	r3, [pc, #72]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dde:	2200      	movs	r2, #0
 8000de0:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000de2:	4b11      	ldr	r3, [pc, #68]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000de4:	2200      	movs	r2, #0
 8000de6:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 8000de8:	4b0f      	ldr	r3, [pc, #60]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000dea:	2200      	movs	r2, #0
 8000dec:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 8000dee:	4b0e      	ldr	r3, [pc, #56]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 8000df4:	480c      	ldr	r0, [pc, #48]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000df6:	f000 f9b1 	bl	800115c <HAL_DMA_Init>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d001      	beq.n	8000e04 <HAL_UART_MspInit+0xdc>
    {
      Error_Handler();
 8000e00:	f7ff fb70 	bl	80004e4 <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	4a08      	ldr	r2, [pc, #32]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000e08:	639a      	str	r2, [r3, #56]	; 0x38
 8000e0a:	4a07      	ldr	r2, [pc, #28]	; (8000e28 <HAL_UART_MspInit+0x100>)
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	6253      	str	r3, [r2, #36]	; 0x24

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8000e10:	bf00      	nop
 8000e12:	3728      	adds	r7, #40	; 0x28
 8000e14:	46bd      	mov	sp, r7
 8000e16:	bd80      	pop	{r7, pc}
 8000e18:	40013800 	.word	0x40013800
 8000e1c:	40021000 	.word	0x40021000
 8000e20:	40010c00 	.word	0x40010c00
 8000e24:	40010000 	.word	0x40010000
 8000e28:	200001f0 	.word	0x200001f0
 8000e2c:	40020058 	.word	0x40020058

08000e30 <Reset_Handler>:
 8000e30:	480c      	ldr	r0, [pc, #48]	; (8000e64 <LoopFillZerobss+0x12>)
 8000e32:	490d      	ldr	r1, [pc, #52]	; (8000e68 <LoopFillZerobss+0x16>)
 8000e34:	4a0d      	ldr	r2, [pc, #52]	; (8000e6c <LoopFillZerobss+0x1a>)
 8000e36:	2300      	movs	r3, #0
 8000e38:	e002      	b.n	8000e40 <LoopCopyDataInit>

08000e3a <CopyDataInit>:
 8000e3a:	58d4      	ldr	r4, [r2, r3]
 8000e3c:	50c4      	str	r4, [r0, r3]
 8000e3e:	3304      	adds	r3, #4

08000e40 <LoopCopyDataInit>:
 8000e40:	18c4      	adds	r4, r0, r3
 8000e42:	428c      	cmp	r4, r1
 8000e44:	d3f9      	bcc.n	8000e3a <CopyDataInit>
 8000e46:	4a0a      	ldr	r2, [pc, #40]	; (8000e70 <LoopFillZerobss+0x1e>)
 8000e48:	4c0a      	ldr	r4, [pc, #40]	; (8000e74 <LoopFillZerobss+0x22>)
 8000e4a:	2300      	movs	r3, #0
 8000e4c:	e001      	b.n	8000e52 <LoopFillZerobss>

08000e4e <FillZerobss>:
 8000e4e:	6013      	str	r3, [r2, #0]
 8000e50:	3204      	adds	r2, #4

08000e52 <LoopFillZerobss>:
 8000e52:	42a2      	cmp	r2, r4
 8000e54:	d3fb      	bcc.n	8000e4e <FillZerobss>
 8000e56:	f7ff fe35 	bl	8000ac4 <SystemInit>
 8000e5a:	f002 fc85 	bl	8003768 <__libc_init_array>
 8000e5e:	f7ff fa87 	bl	8000370 <main>
 8000e62:	4770      	bx	lr
 8000e64:	20000000 	.word	0x20000000
 8000e68:	20000070 	.word	0x20000070
 8000e6c:	0800514c 	.word	0x0800514c
 8000e70:	20000070 	.word	0x20000070
 8000e74:	2000028c 	.word	0x2000028c

08000e78 <ADC1_2_IRQHandler>:
 8000e78:	e7fe      	b.n	8000e78 <ADC1_2_IRQHandler>
	...

08000e7c <HAL_Init>:
 8000e7c:	b580      	push	{r7, lr}
 8000e7e:	af00      	add	r7, sp, #0
 8000e80:	4b08      	ldr	r3, [pc, #32]	; (8000ea4 <HAL_Init+0x28>)
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	4a07      	ldr	r2, [pc, #28]	; (8000ea4 <HAL_Init+0x28>)
 8000e86:	f043 0310 	orr.w	r3, r3, #16
 8000e8a:	6013      	str	r3, [r2, #0]
 8000e8c:	2003      	movs	r0, #3
 8000e8e:	f000 f923 	bl	80010d8 <HAL_NVIC_SetPriorityGrouping>
 8000e92:	200f      	movs	r0, #15
 8000e94:	f000 f808 	bl	8000ea8 <HAL_InitTick>
 8000e98:	f7ff fce6 	bl	8000868 <HAL_MspInit>
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	bd80      	pop	{r7, pc}
 8000ea2:	bf00      	nop
 8000ea4:	40022000 	.word	0x40022000

08000ea8 <HAL_InitTick>:
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b082      	sub	sp, #8
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
 8000eb0:	4b12      	ldr	r3, [pc, #72]	; (8000efc <HAL_InitTick+0x54>)
 8000eb2:	681a      	ldr	r2, [r3, #0]
 8000eb4:	4b12      	ldr	r3, [pc, #72]	; (8000f00 <HAL_InitTick+0x58>)
 8000eb6:	781b      	ldrb	r3, [r3, #0]
 8000eb8:	4619      	mov	r1, r3
 8000eba:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ebe:	fbb3 f3f1 	udiv	r3, r3, r1
 8000ec2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ec6:	4618      	mov	r0, r3
 8000ec8:	f000 f93b 	bl	8001142 <HAL_SYSTICK_Config>
 8000ecc:	4603      	mov	r3, r0
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d001      	beq.n	8000ed6 <HAL_InitTick+0x2e>
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	e00e      	b.n	8000ef4 <HAL_InitTick+0x4c>
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	2b0f      	cmp	r3, #15
 8000eda:	d80a      	bhi.n	8000ef2 <HAL_InitTick+0x4a>
 8000edc:	2200      	movs	r2, #0
 8000ede:	6879      	ldr	r1, [r7, #4]
 8000ee0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee4:	f000 f903 	bl	80010ee <HAL_NVIC_SetPriority>
 8000ee8:	4a06      	ldr	r2, [pc, #24]	; (8000f04 <HAL_InitTick+0x5c>)
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	6013      	str	r3, [r2, #0]
 8000eee:	2300      	movs	r3, #0
 8000ef0:	e000      	b.n	8000ef4 <HAL_InitTick+0x4c>
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	3708      	adds	r7, #8
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	bd80      	pop	{r7, pc}
 8000efc:	20000000 	.word	0x20000000
 8000f00:	20000008 	.word	0x20000008
 8000f04:	20000004 	.word	0x20000004

08000f08 <HAL_IncTick>:
 8000f08:	b480      	push	{r7}
 8000f0a:	af00      	add	r7, sp, #0
 8000f0c:	4b05      	ldr	r3, [pc, #20]	; (8000f24 <HAL_IncTick+0x1c>)
 8000f0e:	781b      	ldrb	r3, [r3, #0]
 8000f10:	461a      	mov	r2, r3
 8000f12:	4b05      	ldr	r3, [pc, #20]	; (8000f28 <HAL_IncTick+0x20>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	4413      	add	r3, r2
 8000f18:	4a03      	ldr	r2, [pc, #12]	; (8000f28 <HAL_IncTick+0x20>)
 8000f1a:	6013      	str	r3, [r2, #0]
 8000f1c:	bf00      	nop
 8000f1e:	46bd      	mov	sp, r7
 8000f20:	bc80      	pop	{r7}
 8000f22:	4770      	bx	lr
 8000f24:	20000008 	.word	0x20000008
 8000f28:	20000278 	.word	0x20000278

08000f2c <HAL_GetTick>:
 8000f2c:	b480      	push	{r7}
 8000f2e:	af00      	add	r7, sp, #0
 8000f30:	4b02      	ldr	r3, [pc, #8]	; (8000f3c <HAL_GetTick+0x10>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	4618      	mov	r0, r3
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bc80      	pop	{r7}
 8000f3a:	4770      	bx	lr
 8000f3c:	20000278 	.word	0x20000278

08000f40 <__NVIC_SetPriorityGrouping>:
 8000f40:	b480      	push	{r7}
 8000f42:	b085      	sub	sp, #20
 8000f44:	af00      	add	r7, sp, #0
 8000f46:	6078      	str	r0, [r7, #4]
 8000f48:	687b      	ldr	r3, [r7, #4]
 8000f4a:	f003 0307 	and.w	r3, r3, #7
 8000f4e:	60fb      	str	r3, [r7, #12]
 8000f50:	4b0c      	ldr	r3, [pc, #48]	; (8000f84 <__NVIC_SetPriorityGrouping+0x44>)
 8000f52:	68db      	ldr	r3, [r3, #12]
 8000f54:	60bb      	str	r3, [r7, #8]
 8000f56:	68ba      	ldr	r2, [r7, #8]
 8000f58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000f5c:	4013      	ands	r3, r2
 8000f5e:	60bb      	str	r3, [r7, #8]
 8000f60:	68fb      	ldr	r3, [r7, #12]
 8000f62:	021a      	lsls	r2, r3, #8
 8000f64:	68bb      	ldr	r3, [r7, #8]
 8000f66:	4313      	orrs	r3, r2
 8000f68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000f6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f70:	60bb      	str	r3, [r7, #8]
 8000f72:	4a04      	ldr	r2, [pc, #16]	; (8000f84 <__NVIC_SetPriorityGrouping+0x44>)
 8000f74:	68bb      	ldr	r3, [r7, #8]
 8000f76:	60d3      	str	r3, [r2, #12]
 8000f78:	bf00      	nop
 8000f7a:	3714      	adds	r7, #20
 8000f7c:	46bd      	mov	sp, r7
 8000f7e:	bc80      	pop	{r7}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000ed00 	.word	0xe000ed00

08000f88 <__NVIC_GetPriorityGrouping>:
 8000f88:	b480      	push	{r7}
 8000f8a:	af00      	add	r7, sp, #0
 8000f8c:	4b04      	ldr	r3, [pc, #16]	; (8000fa0 <__NVIC_GetPriorityGrouping+0x18>)
 8000f8e:	68db      	ldr	r3, [r3, #12]
 8000f90:	0a1b      	lsrs	r3, r3, #8
 8000f92:	f003 0307 	and.w	r3, r3, #7
 8000f96:	4618      	mov	r0, r3
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	e000ed00 	.word	0xe000ed00

08000fa4 <__NVIC_EnableIRQ>:
 8000fa4:	b480      	push	{r7}
 8000fa6:	b083      	sub	sp, #12
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	4603      	mov	r3, r0
 8000fac:	71fb      	strb	r3, [r7, #7]
 8000fae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	db0b      	blt.n	8000fce <__NVIC_EnableIRQ+0x2a>
 8000fb6:	79fb      	ldrb	r3, [r7, #7]
 8000fb8:	f003 021f 	and.w	r2, r3, #31
 8000fbc:	4906      	ldr	r1, [pc, #24]	; (8000fd8 <__NVIC_EnableIRQ+0x34>)
 8000fbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fc2:	095b      	lsrs	r3, r3, #5
 8000fc4:	2001      	movs	r0, #1
 8000fc6:	fa00 f202 	lsl.w	r2, r0, r2
 8000fca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000fce:	bf00      	nop
 8000fd0:	370c      	adds	r7, #12
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	bc80      	pop	{r7}
 8000fd6:	4770      	bx	lr
 8000fd8:	e000e100 	.word	0xe000e100

08000fdc <__NVIC_SetPriority>:
 8000fdc:	b480      	push	{r7}
 8000fde:	b083      	sub	sp, #12
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	4603      	mov	r3, r0
 8000fe4:	6039      	str	r1, [r7, #0]
 8000fe6:	71fb      	strb	r3, [r7, #7]
 8000fe8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fec:	2b00      	cmp	r3, #0
 8000fee:	db0a      	blt.n	8001006 <__NVIC_SetPriority+0x2a>
 8000ff0:	683b      	ldr	r3, [r7, #0]
 8000ff2:	b2da      	uxtb	r2, r3
 8000ff4:	490c      	ldr	r1, [pc, #48]	; (8001028 <__NVIC_SetPriority+0x4c>)
 8000ff6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ffa:	0112      	lsls	r2, r2, #4
 8000ffc:	b2d2      	uxtb	r2, r2
 8000ffe:	440b      	add	r3, r1
 8001000:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001004:	e00a      	b.n	800101c <__NVIC_SetPriority+0x40>
 8001006:	683b      	ldr	r3, [r7, #0]
 8001008:	b2da      	uxtb	r2, r3
 800100a:	4908      	ldr	r1, [pc, #32]	; (800102c <__NVIC_SetPriority+0x50>)
 800100c:	79fb      	ldrb	r3, [r7, #7]
 800100e:	f003 030f 	and.w	r3, r3, #15
 8001012:	3b04      	subs	r3, #4
 8001014:	0112      	lsls	r2, r2, #4
 8001016:	b2d2      	uxtb	r2, r2
 8001018:	440b      	add	r3, r1
 800101a:	761a      	strb	r2, [r3, #24]
 800101c:	bf00      	nop
 800101e:	370c      	adds	r7, #12
 8001020:	46bd      	mov	sp, r7
 8001022:	bc80      	pop	{r7}
 8001024:	4770      	bx	lr
 8001026:	bf00      	nop
 8001028:	e000e100 	.word	0xe000e100
 800102c:	e000ed00 	.word	0xe000ed00

08001030 <NVIC_EncodePriority>:
 8001030:	b480      	push	{r7}
 8001032:	b089      	sub	sp, #36	; 0x24
 8001034:	af00      	add	r7, sp, #0
 8001036:	60f8      	str	r0, [r7, #12]
 8001038:	60b9      	str	r1, [r7, #8]
 800103a:	607a      	str	r2, [r7, #4]
 800103c:	68fb      	ldr	r3, [r7, #12]
 800103e:	f003 0307 	and.w	r3, r3, #7
 8001042:	61fb      	str	r3, [r7, #28]
 8001044:	69fb      	ldr	r3, [r7, #28]
 8001046:	f1c3 0307 	rsb	r3, r3, #7
 800104a:	2b04      	cmp	r3, #4
 800104c:	bf28      	it	cs
 800104e:	2304      	movcs	r3, #4
 8001050:	61bb      	str	r3, [r7, #24]
 8001052:	69fb      	ldr	r3, [r7, #28]
 8001054:	3304      	adds	r3, #4
 8001056:	2b06      	cmp	r3, #6
 8001058:	d902      	bls.n	8001060 <NVIC_EncodePriority+0x30>
 800105a:	69fb      	ldr	r3, [r7, #28]
 800105c:	3b03      	subs	r3, #3
 800105e:	e000      	b.n	8001062 <NVIC_EncodePriority+0x32>
 8001060:	2300      	movs	r3, #0
 8001062:	617b      	str	r3, [r7, #20]
 8001064:	f04f 32ff 	mov.w	r2, #4294967295
 8001068:	69bb      	ldr	r3, [r7, #24]
 800106a:	fa02 f303 	lsl.w	r3, r2, r3
 800106e:	43da      	mvns	r2, r3
 8001070:	68bb      	ldr	r3, [r7, #8]
 8001072:	401a      	ands	r2, r3
 8001074:	697b      	ldr	r3, [r7, #20]
 8001076:	409a      	lsls	r2, r3
 8001078:	f04f 31ff 	mov.w	r1, #4294967295
 800107c:	697b      	ldr	r3, [r7, #20]
 800107e:	fa01 f303 	lsl.w	r3, r1, r3
 8001082:	43d9      	mvns	r1, r3
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	400b      	ands	r3, r1
 8001088:	4313      	orrs	r3, r2
 800108a:	4618      	mov	r0, r3
 800108c:	3724      	adds	r7, #36	; 0x24
 800108e:	46bd      	mov	sp, r7
 8001090:	bc80      	pop	{r7}
 8001092:	4770      	bx	lr

08001094 <SysTick_Config>:
 8001094:	b580      	push	{r7, lr}
 8001096:	b082      	sub	sp, #8
 8001098:	af00      	add	r7, sp, #0
 800109a:	6078      	str	r0, [r7, #4]
 800109c:	687b      	ldr	r3, [r7, #4]
 800109e:	3b01      	subs	r3, #1
 80010a0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80010a4:	d301      	bcc.n	80010aa <SysTick_Config+0x16>
 80010a6:	2301      	movs	r3, #1
 80010a8:	e00f      	b.n	80010ca <SysTick_Config+0x36>
 80010aa:	4a0a      	ldr	r2, [pc, #40]	; (80010d4 <SysTick_Config+0x40>)
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	3b01      	subs	r3, #1
 80010b0:	6053      	str	r3, [r2, #4]
 80010b2:	210f      	movs	r1, #15
 80010b4:	f04f 30ff 	mov.w	r0, #4294967295
 80010b8:	f7ff ff90 	bl	8000fdc <__NVIC_SetPriority>
 80010bc:	4b05      	ldr	r3, [pc, #20]	; (80010d4 <SysTick_Config+0x40>)
 80010be:	2200      	movs	r2, #0
 80010c0:	609a      	str	r2, [r3, #8]
 80010c2:	4b04      	ldr	r3, [pc, #16]	; (80010d4 <SysTick_Config+0x40>)
 80010c4:	2207      	movs	r2, #7
 80010c6:	601a      	str	r2, [r3, #0]
 80010c8:	2300      	movs	r3, #0
 80010ca:	4618      	mov	r0, r3
 80010cc:	3708      	adds	r7, #8
 80010ce:	46bd      	mov	sp, r7
 80010d0:	bd80      	pop	{r7, pc}
 80010d2:	bf00      	nop
 80010d4:	e000e010 	.word	0xe000e010

080010d8 <HAL_NVIC_SetPriorityGrouping>:
 80010d8:	b580      	push	{r7, lr}
 80010da:	b082      	sub	sp, #8
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
 80010e0:	6878      	ldr	r0, [r7, #4]
 80010e2:	f7ff ff2d 	bl	8000f40 <__NVIC_SetPriorityGrouping>
 80010e6:	bf00      	nop
 80010e8:	3708      	adds	r7, #8
 80010ea:	46bd      	mov	sp, r7
 80010ec:	bd80      	pop	{r7, pc}

080010ee <HAL_NVIC_SetPriority>:
 80010ee:	b580      	push	{r7, lr}
 80010f0:	b086      	sub	sp, #24
 80010f2:	af00      	add	r7, sp, #0
 80010f4:	4603      	mov	r3, r0
 80010f6:	60b9      	str	r1, [r7, #8]
 80010f8:	607a      	str	r2, [r7, #4]
 80010fa:	73fb      	strb	r3, [r7, #15]
 80010fc:	2300      	movs	r3, #0
 80010fe:	617b      	str	r3, [r7, #20]
 8001100:	f7ff ff42 	bl	8000f88 <__NVIC_GetPriorityGrouping>
 8001104:	6178      	str	r0, [r7, #20]
 8001106:	687a      	ldr	r2, [r7, #4]
 8001108:	68b9      	ldr	r1, [r7, #8]
 800110a:	6978      	ldr	r0, [r7, #20]
 800110c:	f7ff ff90 	bl	8001030 <NVIC_EncodePriority>
 8001110:	4602      	mov	r2, r0
 8001112:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001116:	4611      	mov	r1, r2
 8001118:	4618      	mov	r0, r3
 800111a:	f7ff ff5f 	bl	8000fdc <__NVIC_SetPriority>
 800111e:	bf00      	nop
 8001120:	3718      	adds	r7, #24
 8001122:	46bd      	mov	sp, r7
 8001124:	bd80      	pop	{r7, pc}

08001126 <HAL_NVIC_EnableIRQ>:
 8001126:	b580      	push	{r7, lr}
 8001128:	b082      	sub	sp, #8
 800112a:	af00      	add	r7, sp, #0
 800112c:	4603      	mov	r3, r0
 800112e:	71fb      	strb	r3, [r7, #7]
 8001130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001134:	4618      	mov	r0, r3
 8001136:	f7ff ff35 	bl	8000fa4 <__NVIC_EnableIRQ>
 800113a:	bf00      	nop
 800113c:	3708      	adds	r7, #8
 800113e:	46bd      	mov	sp, r7
 8001140:	bd80      	pop	{r7, pc}

08001142 <HAL_SYSTICK_Config>:
 8001142:	b580      	push	{r7, lr}
 8001144:	b082      	sub	sp, #8
 8001146:	af00      	add	r7, sp, #0
 8001148:	6078      	str	r0, [r7, #4]
 800114a:	6878      	ldr	r0, [r7, #4]
 800114c:	f7ff ffa2 	bl	8001094 <SysTick_Config>
 8001150:	4603      	mov	r3, r0
 8001152:	4618      	mov	r0, r3
 8001154:	3708      	adds	r7, #8
 8001156:	46bd      	mov	sp, r7
 8001158:	bd80      	pop	{r7, pc}
	...

0800115c <HAL_DMA_Init>:
 800115c:	b480      	push	{r7}
 800115e:	b085      	sub	sp, #20
 8001160:	af00      	add	r7, sp, #0
 8001162:	6078      	str	r0, [r7, #4]
 8001164:	2300      	movs	r3, #0
 8001166:	60fb      	str	r3, [r7, #12]
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	2b00      	cmp	r3, #0
 800116c:	d101      	bne.n	8001172 <HAL_DMA_Init+0x16>
 800116e:	2301      	movs	r3, #1
 8001170:	e043      	b.n	80011fa <HAL_DMA_Init+0x9e>
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	461a      	mov	r2, r3
 8001178:	4b22      	ldr	r3, [pc, #136]	; (8001204 <HAL_DMA_Init+0xa8>)
 800117a:	4413      	add	r3, r2
 800117c:	4a22      	ldr	r2, [pc, #136]	; (8001208 <HAL_DMA_Init+0xac>)
 800117e:	fba2 2303 	umull	r2, r3, r2, r3
 8001182:	091b      	lsrs	r3, r3, #4
 8001184:	009a      	lsls	r2, r3, #2
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	641a      	str	r2, [r3, #64]	; 0x40
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	4a1f      	ldr	r2, [pc, #124]	; (800120c <HAL_DMA_Init+0xb0>)
 800118e:	63da      	str	r2, [r3, #60]	; 0x3c
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	2202      	movs	r2, #2
 8001194:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	60fb      	str	r3, [r7, #12]
 80011a0:	68fb      	ldr	r3, [r7, #12]
 80011a2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80011a6:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80011aa:	60fb      	str	r3, [r7, #12]
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	685a      	ldr	r2, [r3, #4]
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	689b      	ldr	r3, [r3, #8]
 80011b4:	431a      	orrs	r2, r3
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	68db      	ldr	r3, [r3, #12]
 80011ba:	431a      	orrs	r2, r3
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	691b      	ldr	r3, [r3, #16]
 80011c0:	431a      	orrs	r2, r3
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	695b      	ldr	r3, [r3, #20]
 80011c6:	431a      	orrs	r2, r3
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	699b      	ldr	r3, [r3, #24]
 80011cc:	431a      	orrs	r2, r3
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	69db      	ldr	r3, [r3, #28]
 80011d2:	4313      	orrs	r3, r2
 80011d4:	68fa      	ldr	r2, [r7, #12]
 80011d6:	4313      	orrs	r3, r2
 80011d8:	60fb      	str	r3, [r7, #12]
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	68fa      	ldr	r2, [r7, #12]
 80011e0:	601a      	str	r2, [r3, #0]
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	2200      	movs	r2, #0
 80011e6:	639a      	str	r2, [r3, #56]	; 0x38
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	2201      	movs	r2, #1
 80011ec:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	2200      	movs	r2, #0
 80011f4:	f883 2020 	strb.w	r2, [r3, #32]
 80011f8:	2300      	movs	r3, #0
 80011fa:	4618      	mov	r0, r3
 80011fc:	3714      	adds	r7, #20
 80011fe:	46bd      	mov	sp, r7
 8001200:	bc80      	pop	{r7}
 8001202:	4770      	bx	lr
 8001204:	bffdfff8 	.word	0xbffdfff8
 8001208:	cccccccd 	.word	0xcccccccd
 800120c:	40020000 	.word	0x40020000

08001210 <HAL_DMA_Abort>:
 8001210:	b480      	push	{r7}
 8001212:	b085      	sub	sp, #20
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
 8001218:	2300      	movs	r3, #0
 800121a:	73fb      	strb	r3, [r7, #15]
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001222:	2b02      	cmp	r3, #2
 8001224:	d008      	beq.n	8001238 <HAL_DMA_Abort+0x28>
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	2204      	movs	r2, #4
 800122a:	639a      	str	r2, [r3, #56]	; 0x38
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	2200      	movs	r2, #0
 8001230:	f883 2020 	strb.w	r2, [r3, #32]
 8001234:	2301      	movs	r3, #1
 8001236:	e020      	b.n	800127a <HAL_DMA_Abort+0x6a>
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	681a      	ldr	r2, [r3, #0]
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	681b      	ldr	r3, [r3, #0]
 8001242:	f022 020e 	bic.w	r2, r2, #14
 8001246:	601a      	str	r2, [r3, #0]
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	681a      	ldr	r2, [r3, #0]
 800124e:	687b      	ldr	r3, [r7, #4]
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	f022 0201 	bic.w	r2, r2, #1
 8001256:	601a      	str	r2, [r3, #0]
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001260:	2101      	movs	r1, #1
 8001262:	fa01 f202 	lsl.w	r2, r1, r2
 8001266:	605a      	str	r2, [r3, #4]
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	2201      	movs	r2, #1
 800126c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	2200      	movs	r2, #0
 8001274:	f883 2020 	strb.w	r2, [r3, #32]
 8001278:	7bfb      	ldrb	r3, [r7, #15]
 800127a:	4618      	mov	r0, r3
 800127c:	3714      	adds	r7, #20
 800127e:	46bd      	mov	sp, r7
 8001280:	bc80      	pop	{r7}
 8001282:	4770      	bx	lr

08001284 <HAL_DMA_Abort_IT>:
 8001284:	b580      	push	{r7, lr}
 8001286:	b084      	sub	sp, #16
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
 800128c:	2300      	movs	r3, #0
 800128e:	73fb      	strb	r3, [r7, #15]
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001296:	2b02      	cmp	r3, #2
 8001298:	d005      	beq.n	80012a6 <HAL_DMA_Abort_IT+0x22>
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	2204      	movs	r2, #4
 800129e:	639a      	str	r2, [r3, #56]	; 0x38
 80012a0:	2301      	movs	r3, #1
 80012a2:	73fb      	strb	r3, [r7, #15]
 80012a4:	e051      	b.n	800134a <HAL_DMA_Abort_IT+0xc6>
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	681a      	ldr	r2, [r3, #0]
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	f022 020e 	bic.w	r2, r2, #14
 80012b4:	601a      	str	r2, [r3, #0]
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	681a      	ldr	r2, [r3, #0]
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	f022 0201 	bic.w	r2, r2, #1
 80012c4:	601a      	str	r2, [r3, #0]
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	4a22      	ldr	r2, [pc, #136]	; (8001354 <HAL_DMA_Abort_IT+0xd0>)
 80012cc:	4293      	cmp	r3, r2
 80012ce:	d029      	beq.n	8001324 <HAL_DMA_Abort_IT+0xa0>
 80012d0:	687b      	ldr	r3, [r7, #4]
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	4a20      	ldr	r2, [pc, #128]	; (8001358 <HAL_DMA_Abort_IT+0xd4>)
 80012d6:	4293      	cmp	r3, r2
 80012d8:	d022      	beq.n	8001320 <HAL_DMA_Abort_IT+0x9c>
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	4a1f      	ldr	r2, [pc, #124]	; (800135c <HAL_DMA_Abort_IT+0xd8>)
 80012e0:	4293      	cmp	r3, r2
 80012e2:	d01a      	beq.n	800131a <HAL_DMA_Abort_IT+0x96>
 80012e4:	687b      	ldr	r3, [r7, #4]
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	4a1d      	ldr	r2, [pc, #116]	; (8001360 <HAL_DMA_Abort_IT+0xdc>)
 80012ea:	4293      	cmp	r3, r2
 80012ec:	d012      	beq.n	8001314 <HAL_DMA_Abort_IT+0x90>
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	681b      	ldr	r3, [r3, #0]
 80012f2:	4a1c      	ldr	r2, [pc, #112]	; (8001364 <HAL_DMA_Abort_IT+0xe0>)
 80012f4:	4293      	cmp	r3, r2
 80012f6:	d00a      	beq.n	800130e <HAL_DMA_Abort_IT+0x8a>
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	4a1a      	ldr	r2, [pc, #104]	; (8001368 <HAL_DMA_Abort_IT+0xe4>)
 80012fe:	4293      	cmp	r3, r2
 8001300:	d102      	bne.n	8001308 <HAL_DMA_Abort_IT+0x84>
 8001302:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001306:	e00e      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 8001308:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800130c:	e00b      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 800130e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001312:	e008      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 8001314:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001318:	e005      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 800131a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800131e:	e002      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 8001320:	2310      	movs	r3, #16
 8001322:	e000      	b.n	8001326 <HAL_DMA_Abort_IT+0xa2>
 8001324:	2301      	movs	r3, #1
 8001326:	4a11      	ldr	r2, [pc, #68]	; (800136c <HAL_DMA_Abort_IT+0xe8>)
 8001328:	6053      	str	r3, [r2, #4]
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	2201      	movs	r2, #1
 800132e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	2200      	movs	r2, #0
 8001336:	f883 2020 	strb.w	r2, [r3, #32]
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800133e:	2b00      	cmp	r3, #0
 8001340:	d003      	beq.n	800134a <HAL_DMA_Abort_IT+0xc6>
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001346:	6878      	ldr	r0, [r7, #4]
 8001348:	4798      	blx	r3
 800134a:	7bfb      	ldrb	r3, [r7, #15]
 800134c:	4618      	mov	r0, r3
 800134e:	3710      	adds	r7, #16
 8001350:	46bd      	mov	sp, r7
 8001352:	bd80      	pop	{r7, pc}
 8001354:	40020008 	.word	0x40020008
 8001358:	4002001c 	.word	0x4002001c
 800135c:	40020030 	.word	0x40020030
 8001360:	40020044 	.word	0x40020044
 8001364:	40020058 	.word	0x40020058
 8001368:	4002006c 	.word	0x4002006c
 800136c:	40020000 	.word	0x40020000

08001370 <HAL_DMA_IRQHandler>:
 8001370:	b580      	push	{r7, lr}
 8001372:	b084      	sub	sp, #16
 8001374:	af00      	add	r7, sp, #0
 8001376:	6078      	str	r0, [r7, #4]
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	60fb      	str	r3, [r7, #12]
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	681b      	ldr	r3, [r3, #0]
 8001386:	60bb      	str	r3, [r7, #8]
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800138c:	2204      	movs	r2, #4
 800138e:	409a      	lsls	r2, r3
 8001390:	68fb      	ldr	r3, [r7, #12]
 8001392:	4013      	ands	r3, r2
 8001394:	2b00      	cmp	r3, #0
 8001396:	d04f      	beq.n	8001438 <HAL_DMA_IRQHandler+0xc8>
 8001398:	68bb      	ldr	r3, [r7, #8]
 800139a:	f003 0304 	and.w	r3, r3, #4
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d04a      	beq.n	8001438 <HAL_DMA_IRQHandler+0xc8>
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	681b      	ldr	r3, [r3, #0]
 80013a8:	f003 0320 	and.w	r3, r3, #32
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d107      	bne.n	80013c0 <HAL_DMA_IRQHandler+0x50>
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	681a      	ldr	r2, [r3, #0]
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	f022 0204 	bic.w	r2, r2, #4
 80013be:	601a      	str	r2, [r3, #0]
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	4a66      	ldr	r2, [pc, #408]	; (8001560 <HAL_DMA_IRQHandler+0x1f0>)
 80013c6:	4293      	cmp	r3, r2
 80013c8:	d029      	beq.n	800141e <HAL_DMA_IRQHandler+0xae>
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	4a65      	ldr	r2, [pc, #404]	; (8001564 <HAL_DMA_IRQHandler+0x1f4>)
 80013d0:	4293      	cmp	r3, r2
 80013d2:	d022      	beq.n	800141a <HAL_DMA_IRQHandler+0xaa>
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	4a63      	ldr	r2, [pc, #396]	; (8001568 <HAL_DMA_IRQHandler+0x1f8>)
 80013da:	4293      	cmp	r3, r2
 80013dc:	d01a      	beq.n	8001414 <HAL_DMA_IRQHandler+0xa4>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	4a62      	ldr	r2, [pc, #392]	; (800156c <HAL_DMA_IRQHandler+0x1fc>)
 80013e4:	4293      	cmp	r3, r2
 80013e6:	d012      	beq.n	800140e <HAL_DMA_IRQHandler+0x9e>
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	4a60      	ldr	r2, [pc, #384]	; (8001570 <HAL_DMA_IRQHandler+0x200>)
 80013ee:	4293      	cmp	r3, r2
 80013f0:	d00a      	beq.n	8001408 <HAL_DMA_IRQHandler+0x98>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	4a5f      	ldr	r2, [pc, #380]	; (8001574 <HAL_DMA_IRQHandler+0x204>)
 80013f8:	4293      	cmp	r3, r2
 80013fa:	d102      	bne.n	8001402 <HAL_DMA_IRQHandler+0x92>
 80013fc:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001400:	e00e      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 8001402:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8001406:	e00b      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 8001408:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800140c:	e008      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 800140e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001412:	e005      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 8001414:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001418:	e002      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 800141a:	2340      	movs	r3, #64	; 0x40
 800141c:	e000      	b.n	8001420 <HAL_DMA_IRQHandler+0xb0>
 800141e:	2304      	movs	r3, #4
 8001420:	4a55      	ldr	r2, [pc, #340]	; (8001578 <HAL_DMA_IRQHandler+0x208>)
 8001422:	6053      	str	r3, [r2, #4]
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001428:	2b00      	cmp	r3, #0
 800142a:	f000 8094 	beq.w	8001556 <HAL_DMA_IRQHandler+0x1e6>
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001432:	6878      	ldr	r0, [r7, #4]
 8001434:	4798      	blx	r3
 8001436:	e08e      	b.n	8001556 <HAL_DMA_IRQHandler+0x1e6>
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800143c:	2202      	movs	r2, #2
 800143e:	409a      	lsls	r2, r3
 8001440:	68fb      	ldr	r3, [r7, #12]
 8001442:	4013      	ands	r3, r2
 8001444:	2b00      	cmp	r3, #0
 8001446:	d056      	beq.n	80014f6 <HAL_DMA_IRQHandler+0x186>
 8001448:	68bb      	ldr	r3, [r7, #8]
 800144a:	f003 0302 	and.w	r3, r3, #2
 800144e:	2b00      	cmp	r3, #0
 8001450:	d051      	beq.n	80014f6 <HAL_DMA_IRQHandler+0x186>
 8001452:	687b      	ldr	r3, [r7, #4]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	f003 0320 	and.w	r3, r3, #32
 800145c:	2b00      	cmp	r3, #0
 800145e:	d10b      	bne.n	8001478 <HAL_DMA_IRQHandler+0x108>
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	f022 020a 	bic.w	r2, r2, #10
 800146e:	601a      	str	r2, [r3, #0]
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	2201      	movs	r2, #1
 8001474:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4a38      	ldr	r2, [pc, #224]	; (8001560 <HAL_DMA_IRQHandler+0x1f0>)
 800147e:	4293      	cmp	r3, r2
 8001480:	d029      	beq.n	80014d6 <HAL_DMA_IRQHandler+0x166>
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	4a37      	ldr	r2, [pc, #220]	; (8001564 <HAL_DMA_IRQHandler+0x1f4>)
 8001488:	4293      	cmp	r3, r2
 800148a:	d022      	beq.n	80014d2 <HAL_DMA_IRQHandler+0x162>
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	4a35      	ldr	r2, [pc, #212]	; (8001568 <HAL_DMA_IRQHandler+0x1f8>)
 8001492:	4293      	cmp	r3, r2
 8001494:	d01a      	beq.n	80014cc <HAL_DMA_IRQHandler+0x15c>
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	4a34      	ldr	r2, [pc, #208]	; (800156c <HAL_DMA_IRQHandler+0x1fc>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d012      	beq.n	80014c6 <HAL_DMA_IRQHandler+0x156>
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	4a32      	ldr	r2, [pc, #200]	; (8001570 <HAL_DMA_IRQHandler+0x200>)
 80014a6:	4293      	cmp	r3, r2
 80014a8:	d00a      	beq.n	80014c0 <HAL_DMA_IRQHandler+0x150>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	4a31      	ldr	r2, [pc, #196]	; (8001574 <HAL_DMA_IRQHandler+0x204>)
 80014b0:	4293      	cmp	r3, r2
 80014b2:	d102      	bne.n	80014ba <HAL_DMA_IRQHandler+0x14a>
 80014b4:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80014b8:	e00e      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014ba:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80014be:	e00b      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014c0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80014c4:	e008      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014c6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80014ca:	e005      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014cc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80014d0:	e002      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014d2:	2320      	movs	r3, #32
 80014d4:	e000      	b.n	80014d8 <HAL_DMA_IRQHandler+0x168>
 80014d6:	2302      	movs	r3, #2
 80014d8:	4a27      	ldr	r2, [pc, #156]	; (8001578 <HAL_DMA_IRQHandler+0x208>)
 80014da:	6053      	str	r3, [r2, #4]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	2200      	movs	r2, #0
 80014e0:	f883 2020 	strb.w	r2, [r3, #32]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d034      	beq.n	8001556 <HAL_DMA_IRQHandler+0x1e6>
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80014f0:	6878      	ldr	r0, [r7, #4]
 80014f2:	4798      	blx	r3
 80014f4:	e02f      	b.n	8001556 <HAL_DMA_IRQHandler+0x1e6>
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014fa:	2208      	movs	r2, #8
 80014fc:	409a      	lsls	r2, r3
 80014fe:	68fb      	ldr	r3, [r7, #12]
 8001500:	4013      	ands	r3, r2
 8001502:	2b00      	cmp	r3, #0
 8001504:	d028      	beq.n	8001558 <HAL_DMA_IRQHandler+0x1e8>
 8001506:	68bb      	ldr	r3, [r7, #8]
 8001508:	f003 0308 	and.w	r3, r3, #8
 800150c:	2b00      	cmp	r3, #0
 800150e:	d023      	beq.n	8001558 <HAL_DMA_IRQHandler+0x1e8>
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	681a      	ldr	r2, [r3, #0]
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	f022 020e 	bic.w	r2, r2, #14
 800151e:	601a      	str	r2, [r3, #0]
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001528:	2101      	movs	r1, #1
 800152a:	fa01 f202 	lsl.w	r2, r1, r2
 800152e:	605a      	str	r2, [r3, #4]
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	2201      	movs	r2, #1
 8001534:	639a      	str	r2, [r3, #56]	; 0x38
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	2201      	movs	r2, #1
 800153a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	2200      	movs	r2, #0
 8001542:	f883 2020 	strb.w	r2, [r3, #32]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800154a:	2b00      	cmp	r3, #0
 800154c:	d004      	beq.n	8001558 <HAL_DMA_IRQHandler+0x1e8>
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001552:	6878      	ldr	r0, [r7, #4]
 8001554:	4798      	blx	r3
 8001556:	bf00      	nop
 8001558:	bf00      	nop
 800155a:	3710      	adds	r7, #16
 800155c:	46bd      	mov	sp, r7
 800155e:	bd80      	pop	{r7, pc}
 8001560:	40020008 	.word	0x40020008
 8001564:	4002001c 	.word	0x4002001c
 8001568:	40020030 	.word	0x40020030
 800156c:	40020044 	.word	0x40020044
 8001570:	40020058 	.word	0x40020058
 8001574:	4002006c 	.word	0x4002006c
 8001578:	40020000 	.word	0x40020000

0800157c <HAL_GPIO_Init>:
 800157c:	b480      	push	{r7}
 800157e:	b08b      	sub	sp, #44	; 0x2c
 8001580:	af00      	add	r7, sp, #0
 8001582:	6078      	str	r0, [r7, #4]
 8001584:	6039      	str	r1, [r7, #0]
 8001586:	2300      	movs	r3, #0
 8001588:	627b      	str	r3, [r7, #36]	; 0x24
 800158a:	2300      	movs	r3, #0
 800158c:	623b      	str	r3, [r7, #32]
 800158e:	e148      	b.n	8001822 <HAL_GPIO_Init+0x2a6>
 8001590:	2201      	movs	r2, #1
 8001592:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001594:	fa02 f303 	lsl.w	r3, r2, r3
 8001598:	61fb      	str	r3, [r7, #28]
 800159a:	683b      	ldr	r3, [r7, #0]
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	69fa      	ldr	r2, [r7, #28]
 80015a0:	4013      	ands	r3, r2
 80015a2:	61bb      	str	r3, [r7, #24]
 80015a4:	69ba      	ldr	r2, [r7, #24]
 80015a6:	69fb      	ldr	r3, [r7, #28]
 80015a8:	429a      	cmp	r2, r3
 80015aa:	f040 8137 	bne.w	800181c <HAL_GPIO_Init+0x2a0>
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	685b      	ldr	r3, [r3, #4]
 80015b2:	4aa3      	ldr	r2, [pc, #652]	; (8001840 <HAL_GPIO_Init+0x2c4>)
 80015b4:	4293      	cmp	r3, r2
 80015b6:	d05e      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 80015b8:	4aa1      	ldr	r2, [pc, #644]	; (8001840 <HAL_GPIO_Init+0x2c4>)
 80015ba:	4293      	cmp	r3, r2
 80015bc:	d875      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015be:	4aa1      	ldr	r2, [pc, #644]	; (8001844 <HAL_GPIO_Init+0x2c8>)
 80015c0:	4293      	cmp	r3, r2
 80015c2:	d058      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 80015c4:	4a9f      	ldr	r2, [pc, #636]	; (8001844 <HAL_GPIO_Init+0x2c8>)
 80015c6:	4293      	cmp	r3, r2
 80015c8:	d86f      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015ca:	4a9f      	ldr	r2, [pc, #636]	; (8001848 <HAL_GPIO_Init+0x2cc>)
 80015cc:	4293      	cmp	r3, r2
 80015ce:	d052      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 80015d0:	4a9d      	ldr	r2, [pc, #628]	; (8001848 <HAL_GPIO_Init+0x2cc>)
 80015d2:	4293      	cmp	r3, r2
 80015d4:	d869      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015d6:	4a9d      	ldr	r2, [pc, #628]	; (800184c <HAL_GPIO_Init+0x2d0>)
 80015d8:	4293      	cmp	r3, r2
 80015da:	d04c      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 80015dc:	4a9b      	ldr	r2, [pc, #620]	; (800184c <HAL_GPIO_Init+0x2d0>)
 80015de:	4293      	cmp	r3, r2
 80015e0:	d863      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015e2:	4a9b      	ldr	r2, [pc, #620]	; (8001850 <HAL_GPIO_Init+0x2d4>)
 80015e4:	4293      	cmp	r3, r2
 80015e6:	d046      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 80015e8:	4a99      	ldr	r2, [pc, #612]	; (8001850 <HAL_GPIO_Init+0x2d4>)
 80015ea:	4293      	cmp	r3, r2
 80015ec:	d85d      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015ee:	2b12      	cmp	r3, #18
 80015f0:	d82a      	bhi.n	8001648 <HAL_GPIO_Init+0xcc>
 80015f2:	2b12      	cmp	r3, #18
 80015f4:	d859      	bhi.n	80016aa <HAL_GPIO_Init+0x12e>
 80015f6:	a201      	add	r2, pc, #4	; (adr r2, 80015fc <HAL_GPIO_Init+0x80>)
 80015f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80015fc:	08001677 	.word	0x08001677
 8001600:	08001651 	.word	0x08001651
 8001604:	08001663 	.word	0x08001663
 8001608:	080016a5 	.word	0x080016a5
 800160c:	080016ab 	.word	0x080016ab
 8001610:	080016ab 	.word	0x080016ab
 8001614:	080016ab 	.word	0x080016ab
 8001618:	080016ab 	.word	0x080016ab
 800161c:	080016ab 	.word	0x080016ab
 8001620:	080016ab 	.word	0x080016ab
 8001624:	080016ab 	.word	0x080016ab
 8001628:	080016ab 	.word	0x080016ab
 800162c:	080016ab 	.word	0x080016ab
 8001630:	080016ab 	.word	0x080016ab
 8001634:	080016ab 	.word	0x080016ab
 8001638:	080016ab 	.word	0x080016ab
 800163c:	080016ab 	.word	0x080016ab
 8001640:	08001659 	.word	0x08001659
 8001644:	0800166d 	.word	0x0800166d
 8001648:	4a82      	ldr	r2, [pc, #520]	; (8001854 <HAL_GPIO_Init+0x2d8>)
 800164a:	4293      	cmp	r3, r2
 800164c:	d013      	beq.n	8001676 <HAL_GPIO_Init+0xfa>
 800164e:	e02c      	b.n	80016aa <HAL_GPIO_Init+0x12e>
 8001650:	683b      	ldr	r3, [r7, #0]
 8001652:	68db      	ldr	r3, [r3, #12]
 8001654:	623b      	str	r3, [r7, #32]
 8001656:	e029      	b.n	80016ac <HAL_GPIO_Init+0x130>
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	68db      	ldr	r3, [r3, #12]
 800165c:	3304      	adds	r3, #4
 800165e:	623b      	str	r3, [r7, #32]
 8001660:	e024      	b.n	80016ac <HAL_GPIO_Init+0x130>
 8001662:	683b      	ldr	r3, [r7, #0]
 8001664:	68db      	ldr	r3, [r3, #12]
 8001666:	3308      	adds	r3, #8
 8001668:	623b      	str	r3, [r7, #32]
 800166a:	e01f      	b.n	80016ac <HAL_GPIO_Init+0x130>
 800166c:	683b      	ldr	r3, [r7, #0]
 800166e:	68db      	ldr	r3, [r3, #12]
 8001670:	330c      	adds	r3, #12
 8001672:	623b      	str	r3, [r7, #32]
 8001674:	e01a      	b.n	80016ac <HAL_GPIO_Init+0x130>
 8001676:	683b      	ldr	r3, [r7, #0]
 8001678:	689b      	ldr	r3, [r3, #8]
 800167a:	2b00      	cmp	r3, #0
 800167c:	d102      	bne.n	8001684 <HAL_GPIO_Init+0x108>
 800167e:	2304      	movs	r3, #4
 8001680:	623b      	str	r3, [r7, #32]
 8001682:	e013      	b.n	80016ac <HAL_GPIO_Init+0x130>
 8001684:	683b      	ldr	r3, [r7, #0]
 8001686:	689b      	ldr	r3, [r3, #8]
 8001688:	2b01      	cmp	r3, #1
 800168a:	d105      	bne.n	8001698 <HAL_GPIO_Init+0x11c>
 800168c:	2308      	movs	r3, #8
 800168e:	623b      	str	r3, [r7, #32]
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	69fa      	ldr	r2, [r7, #28]
 8001694:	611a      	str	r2, [r3, #16]
 8001696:	e009      	b.n	80016ac <HAL_GPIO_Init+0x130>
 8001698:	2308      	movs	r3, #8
 800169a:	623b      	str	r3, [r7, #32]
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	69fa      	ldr	r2, [r7, #28]
 80016a0:	615a      	str	r2, [r3, #20]
 80016a2:	e003      	b.n	80016ac <HAL_GPIO_Init+0x130>
 80016a4:	2300      	movs	r3, #0
 80016a6:	623b      	str	r3, [r7, #32]
 80016a8:	e000      	b.n	80016ac <HAL_GPIO_Init+0x130>
 80016aa:	bf00      	nop
 80016ac:	69bb      	ldr	r3, [r7, #24]
 80016ae:	2bff      	cmp	r3, #255	; 0xff
 80016b0:	d801      	bhi.n	80016b6 <HAL_GPIO_Init+0x13a>
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	e001      	b.n	80016ba <HAL_GPIO_Init+0x13e>
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	3304      	adds	r3, #4
 80016ba:	617b      	str	r3, [r7, #20]
 80016bc:	69bb      	ldr	r3, [r7, #24]
 80016be:	2bff      	cmp	r3, #255	; 0xff
 80016c0:	d802      	bhi.n	80016c8 <HAL_GPIO_Init+0x14c>
 80016c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016c4:	009b      	lsls	r3, r3, #2
 80016c6:	e002      	b.n	80016ce <HAL_GPIO_Init+0x152>
 80016c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016ca:	3b08      	subs	r3, #8
 80016cc:	009b      	lsls	r3, r3, #2
 80016ce:	613b      	str	r3, [r7, #16]
 80016d0:	697b      	ldr	r3, [r7, #20]
 80016d2:	681a      	ldr	r2, [r3, #0]
 80016d4:	210f      	movs	r1, #15
 80016d6:	693b      	ldr	r3, [r7, #16]
 80016d8:	fa01 f303 	lsl.w	r3, r1, r3
 80016dc:	43db      	mvns	r3, r3
 80016de:	401a      	ands	r2, r3
 80016e0:	6a39      	ldr	r1, [r7, #32]
 80016e2:	693b      	ldr	r3, [r7, #16]
 80016e4:	fa01 f303 	lsl.w	r3, r1, r3
 80016e8:	431a      	orrs	r2, r3
 80016ea:	697b      	ldr	r3, [r7, #20]
 80016ec:	601a      	str	r2, [r3, #0]
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	685b      	ldr	r3, [r3, #4]
 80016f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016f6:	2b00      	cmp	r3, #0
 80016f8:	f000 8090 	beq.w	800181c <HAL_GPIO_Init+0x2a0>
 80016fc:	4b56      	ldr	r3, [pc, #344]	; (8001858 <HAL_GPIO_Init+0x2dc>)
 80016fe:	699b      	ldr	r3, [r3, #24]
 8001700:	4a55      	ldr	r2, [pc, #340]	; (8001858 <HAL_GPIO_Init+0x2dc>)
 8001702:	f043 0301 	orr.w	r3, r3, #1
 8001706:	6193      	str	r3, [r2, #24]
 8001708:	4b53      	ldr	r3, [pc, #332]	; (8001858 <HAL_GPIO_Init+0x2dc>)
 800170a:	699b      	ldr	r3, [r3, #24]
 800170c:	f003 0301 	and.w	r3, r3, #1
 8001710:	60bb      	str	r3, [r7, #8]
 8001712:	68bb      	ldr	r3, [r7, #8]
 8001714:	4a51      	ldr	r2, [pc, #324]	; (800185c <HAL_GPIO_Init+0x2e0>)
 8001716:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001718:	089b      	lsrs	r3, r3, #2
 800171a:	3302      	adds	r3, #2
 800171c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001720:	60fb      	str	r3, [r7, #12]
 8001722:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001724:	f003 0303 	and.w	r3, r3, #3
 8001728:	009b      	lsls	r3, r3, #2
 800172a:	220f      	movs	r2, #15
 800172c:	fa02 f303 	lsl.w	r3, r2, r3
 8001730:	43db      	mvns	r3, r3
 8001732:	68fa      	ldr	r2, [r7, #12]
 8001734:	4013      	ands	r3, r2
 8001736:	60fb      	str	r3, [r7, #12]
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	4a49      	ldr	r2, [pc, #292]	; (8001860 <HAL_GPIO_Init+0x2e4>)
 800173c:	4293      	cmp	r3, r2
 800173e:	d00d      	beq.n	800175c <HAL_GPIO_Init+0x1e0>
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	4a48      	ldr	r2, [pc, #288]	; (8001864 <HAL_GPIO_Init+0x2e8>)
 8001744:	4293      	cmp	r3, r2
 8001746:	d007      	beq.n	8001758 <HAL_GPIO_Init+0x1dc>
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	4a47      	ldr	r2, [pc, #284]	; (8001868 <HAL_GPIO_Init+0x2ec>)
 800174c:	4293      	cmp	r3, r2
 800174e:	d101      	bne.n	8001754 <HAL_GPIO_Init+0x1d8>
 8001750:	2302      	movs	r3, #2
 8001752:	e004      	b.n	800175e <HAL_GPIO_Init+0x1e2>
 8001754:	2303      	movs	r3, #3
 8001756:	e002      	b.n	800175e <HAL_GPIO_Init+0x1e2>
 8001758:	2301      	movs	r3, #1
 800175a:	e000      	b.n	800175e <HAL_GPIO_Init+0x1e2>
 800175c:	2300      	movs	r3, #0
 800175e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001760:	f002 0203 	and.w	r2, r2, #3
 8001764:	0092      	lsls	r2, r2, #2
 8001766:	4093      	lsls	r3, r2
 8001768:	68fa      	ldr	r2, [r7, #12]
 800176a:	4313      	orrs	r3, r2
 800176c:	60fb      	str	r3, [r7, #12]
 800176e:	493b      	ldr	r1, [pc, #236]	; (800185c <HAL_GPIO_Init+0x2e0>)
 8001770:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001772:	089b      	lsrs	r3, r3, #2
 8001774:	3302      	adds	r3, #2
 8001776:	68fa      	ldr	r2, [r7, #12]
 8001778:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800177c:	683b      	ldr	r3, [r7, #0]
 800177e:	685b      	ldr	r3, [r3, #4]
 8001780:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001784:	2b00      	cmp	r3, #0
 8001786:	d006      	beq.n	8001796 <HAL_GPIO_Init+0x21a>
 8001788:	4b38      	ldr	r3, [pc, #224]	; (800186c <HAL_GPIO_Init+0x2f0>)
 800178a:	681a      	ldr	r2, [r3, #0]
 800178c:	4937      	ldr	r1, [pc, #220]	; (800186c <HAL_GPIO_Init+0x2f0>)
 800178e:	69bb      	ldr	r3, [r7, #24]
 8001790:	4313      	orrs	r3, r2
 8001792:	600b      	str	r3, [r1, #0]
 8001794:	e006      	b.n	80017a4 <HAL_GPIO_Init+0x228>
 8001796:	4b35      	ldr	r3, [pc, #212]	; (800186c <HAL_GPIO_Init+0x2f0>)
 8001798:	681a      	ldr	r2, [r3, #0]
 800179a:	69bb      	ldr	r3, [r7, #24]
 800179c:	43db      	mvns	r3, r3
 800179e:	4933      	ldr	r1, [pc, #204]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017a0:	4013      	ands	r3, r2
 80017a2:	600b      	str	r3, [r1, #0]
 80017a4:	683b      	ldr	r3, [r7, #0]
 80017a6:	685b      	ldr	r3, [r3, #4]
 80017a8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017ac:	2b00      	cmp	r3, #0
 80017ae:	d006      	beq.n	80017be <HAL_GPIO_Init+0x242>
 80017b0:	4b2e      	ldr	r3, [pc, #184]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017b2:	685a      	ldr	r2, [r3, #4]
 80017b4:	492d      	ldr	r1, [pc, #180]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017b6:	69bb      	ldr	r3, [r7, #24]
 80017b8:	4313      	orrs	r3, r2
 80017ba:	604b      	str	r3, [r1, #4]
 80017bc:	e006      	b.n	80017cc <HAL_GPIO_Init+0x250>
 80017be:	4b2b      	ldr	r3, [pc, #172]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017c0:	685a      	ldr	r2, [r3, #4]
 80017c2:	69bb      	ldr	r3, [r7, #24]
 80017c4:	43db      	mvns	r3, r3
 80017c6:	4929      	ldr	r1, [pc, #164]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017c8:	4013      	ands	r3, r2
 80017ca:	604b      	str	r3, [r1, #4]
 80017cc:	683b      	ldr	r3, [r7, #0]
 80017ce:	685b      	ldr	r3, [r3, #4]
 80017d0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d006      	beq.n	80017e6 <HAL_GPIO_Init+0x26a>
 80017d8:	4b24      	ldr	r3, [pc, #144]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017da:	689a      	ldr	r2, [r3, #8]
 80017dc:	4923      	ldr	r1, [pc, #140]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017de:	69bb      	ldr	r3, [r7, #24]
 80017e0:	4313      	orrs	r3, r2
 80017e2:	608b      	str	r3, [r1, #8]
 80017e4:	e006      	b.n	80017f4 <HAL_GPIO_Init+0x278>
 80017e6:	4b21      	ldr	r3, [pc, #132]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017e8:	689a      	ldr	r2, [r3, #8]
 80017ea:	69bb      	ldr	r3, [r7, #24]
 80017ec:	43db      	mvns	r3, r3
 80017ee:	491f      	ldr	r1, [pc, #124]	; (800186c <HAL_GPIO_Init+0x2f0>)
 80017f0:	4013      	ands	r3, r2
 80017f2:	608b      	str	r3, [r1, #8]
 80017f4:	683b      	ldr	r3, [r7, #0]
 80017f6:	685b      	ldr	r3, [r3, #4]
 80017f8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80017fc:	2b00      	cmp	r3, #0
 80017fe:	d006      	beq.n	800180e <HAL_GPIO_Init+0x292>
 8001800:	4b1a      	ldr	r3, [pc, #104]	; (800186c <HAL_GPIO_Init+0x2f0>)
 8001802:	68da      	ldr	r2, [r3, #12]
 8001804:	4919      	ldr	r1, [pc, #100]	; (800186c <HAL_GPIO_Init+0x2f0>)
 8001806:	69bb      	ldr	r3, [r7, #24]
 8001808:	4313      	orrs	r3, r2
 800180a:	60cb      	str	r3, [r1, #12]
 800180c:	e006      	b.n	800181c <HAL_GPIO_Init+0x2a0>
 800180e:	4b17      	ldr	r3, [pc, #92]	; (800186c <HAL_GPIO_Init+0x2f0>)
 8001810:	68da      	ldr	r2, [r3, #12]
 8001812:	69bb      	ldr	r3, [r7, #24]
 8001814:	43db      	mvns	r3, r3
 8001816:	4915      	ldr	r1, [pc, #84]	; (800186c <HAL_GPIO_Init+0x2f0>)
 8001818:	4013      	ands	r3, r2
 800181a:	60cb      	str	r3, [r1, #12]
 800181c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800181e:	3301      	adds	r3, #1
 8001820:	627b      	str	r3, [r7, #36]	; 0x24
 8001822:	683b      	ldr	r3, [r7, #0]
 8001824:	681a      	ldr	r2, [r3, #0]
 8001826:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001828:	fa22 f303 	lsr.w	r3, r2, r3
 800182c:	2b00      	cmp	r3, #0
 800182e:	f47f aeaf 	bne.w	8001590 <HAL_GPIO_Init+0x14>
 8001832:	bf00      	nop
 8001834:	bf00      	nop
 8001836:	372c      	adds	r7, #44	; 0x2c
 8001838:	46bd      	mov	sp, r7
 800183a:	bc80      	pop	{r7}
 800183c:	4770      	bx	lr
 800183e:	bf00      	nop
 8001840:	10320000 	.word	0x10320000
 8001844:	10310000 	.word	0x10310000
 8001848:	10220000 	.word	0x10220000
 800184c:	10210000 	.word	0x10210000
 8001850:	10120000 	.word	0x10120000
 8001854:	10110000 	.word	0x10110000
 8001858:	40021000 	.word	0x40021000
 800185c:	40010000 	.word	0x40010000
 8001860:	40010800 	.word	0x40010800
 8001864:	40010c00 	.word	0x40010c00
 8001868:	40011000 	.word	0x40011000
 800186c:	40010400 	.word	0x40010400

08001870 <HAL_GPIO_WritePin>:
 8001870:	b480      	push	{r7}
 8001872:	b083      	sub	sp, #12
 8001874:	af00      	add	r7, sp, #0
 8001876:	6078      	str	r0, [r7, #4]
 8001878:	460b      	mov	r3, r1
 800187a:	807b      	strh	r3, [r7, #2]
 800187c:	4613      	mov	r3, r2
 800187e:	707b      	strb	r3, [r7, #1]
 8001880:	787b      	ldrb	r3, [r7, #1]
 8001882:	2b00      	cmp	r3, #0
 8001884:	d003      	beq.n	800188e <HAL_GPIO_WritePin+0x1e>
 8001886:	887a      	ldrh	r2, [r7, #2]
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	611a      	str	r2, [r3, #16]
 800188c:	e003      	b.n	8001896 <HAL_GPIO_WritePin+0x26>
 800188e:	887b      	ldrh	r3, [r7, #2]
 8001890:	041a      	lsls	r2, r3, #16
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	611a      	str	r2, [r3, #16]
 8001896:	bf00      	nop
 8001898:	370c      	adds	r7, #12
 800189a:	46bd      	mov	sp, r7
 800189c:	bc80      	pop	{r7}
 800189e:	4770      	bx	lr

080018a0 <HAL_RCC_OscConfig>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b086      	sub	sp, #24
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	2b00      	cmp	r3, #0
 80018ac:	d101      	bne.n	80018b2 <HAL_RCC_OscConfig+0x12>
 80018ae:	2301      	movs	r3, #1
 80018b0:	e26c      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	f003 0301 	and.w	r3, r3, #1
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	f000 8087 	beq.w	80019ce <HAL_RCC_OscConfig+0x12e>
 80018c0:	4b92      	ldr	r3, [pc, #584]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80018c2:	685b      	ldr	r3, [r3, #4]
 80018c4:	f003 030c 	and.w	r3, r3, #12
 80018c8:	2b04      	cmp	r3, #4
 80018ca:	d00c      	beq.n	80018e6 <HAL_RCC_OscConfig+0x46>
 80018cc:	4b8f      	ldr	r3, [pc, #572]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	f003 030c 	and.w	r3, r3, #12
 80018d4:	2b08      	cmp	r3, #8
 80018d6:	d112      	bne.n	80018fe <HAL_RCC_OscConfig+0x5e>
 80018d8:	4b8c      	ldr	r3, [pc, #560]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80018da:	685b      	ldr	r3, [r3, #4]
 80018dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80018e4:	d10b      	bne.n	80018fe <HAL_RCC_OscConfig+0x5e>
 80018e6:	4b89      	ldr	r3, [pc, #548]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d06c      	beq.n	80019cc <HAL_RCC_OscConfig+0x12c>
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	685b      	ldr	r3, [r3, #4]
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d168      	bne.n	80019cc <HAL_RCC_OscConfig+0x12c>
 80018fa:	2301      	movs	r3, #1
 80018fc:	e246      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	685b      	ldr	r3, [r3, #4]
 8001902:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001906:	d106      	bne.n	8001916 <HAL_RCC_OscConfig+0x76>
 8001908:	4b80      	ldr	r3, [pc, #512]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4a7f      	ldr	r2, [pc, #508]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800190e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001912:	6013      	str	r3, [r2, #0]
 8001914:	e02e      	b.n	8001974 <HAL_RCC_OscConfig+0xd4>
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	685b      	ldr	r3, [r3, #4]
 800191a:	2b00      	cmp	r3, #0
 800191c:	d10c      	bne.n	8001938 <HAL_RCC_OscConfig+0x98>
 800191e:	4b7b      	ldr	r3, [pc, #492]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4a7a      	ldr	r2, [pc, #488]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001924:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001928:	6013      	str	r3, [r2, #0]
 800192a:	4b78      	ldr	r3, [pc, #480]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	4a77      	ldr	r2, [pc, #476]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001930:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001934:	6013      	str	r3, [r2, #0]
 8001936:	e01d      	b.n	8001974 <HAL_RCC_OscConfig+0xd4>
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	685b      	ldr	r3, [r3, #4]
 800193c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001940:	d10c      	bne.n	800195c <HAL_RCC_OscConfig+0xbc>
 8001942:	4b72      	ldr	r3, [pc, #456]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	4a71      	ldr	r2, [pc, #452]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001948:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800194c:	6013      	str	r3, [r2, #0]
 800194e:	4b6f      	ldr	r3, [pc, #444]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	4a6e      	ldr	r2, [pc, #440]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001954:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001958:	6013      	str	r3, [r2, #0]
 800195a:	e00b      	b.n	8001974 <HAL_RCC_OscConfig+0xd4>
 800195c:	4b6b      	ldr	r3, [pc, #428]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	4a6a      	ldr	r2, [pc, #424]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001962:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001966:	6013      	str	r3, [r2, #0]
 8001968:	4b68      	ldr	r3, [pc, #416]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	4a67      	ldr	r2, [pc, #412]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 800196e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001972:	6013      	str	r3, [r2, #0]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	685b      	ldr	r3, [r3, #4]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d013      	beq.n	80019a4 <HAL_RCC_OscConfig+0x104>
 800197c:	f7ff fad6 	bl	8000f2c <HAL_GetTick>
 8001980:	6138      	str	r0, [r7, #16]
 8001982:	e008      	b.n	8001996 <HAL_RCC_OscConfig+0xf6>
 8001984:	f7ff fad2 	bl	8000f2c <HAL_GetTick>
 8001988:	4602      	mov	r2, r0
 800198a:	693b      	ldr	r3, [r7, #16]
 800198c:	1ad3      	subs	r3, r2, r3
 800198e:	2b64      	cmp	r3, #100	; 0x64
 8001990:	d901      	bls.n	8001996 <HAL_RCC_OscConfig+0xf6>
 8001992:	2303      	movs	r3, #3
 8001994:	e1fa      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001996:	4b5d      	ldr	r3, [pc, #372]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800199e:	2b00      	cmp	r3, #0
 80019a0:	d0f0      	beq.n	8001984 <HAL_RCC_OscConfig+0xe4>
 80019a2:	e014      	b.n	80019ce <HAL_RCC_OscConfig+0x12e>
 80019a4:	f7ff fac2 	bl	8000f2c <HAL_GetTick>
 80019a8:	6138      	str	r0, [r7, #16]
 80019aa:	e008      	b.n	80019be <HAL_RCC_OscConfig+0x11e>
 80019ac:	f7ff fabe 	bl	8000f2c <HAL_GetTick>
 80019b0:	4602      	mov	r2, r0
 80019b2:	693b      	ldr	r3, [r7, #16]
 80019b4:	1ad3      	subs	r3, r2, r3
 80019b6:	2b64      	cmp	r3, #100	; 0x64
 80019b8:	d901      	bls.n	80019be <HAL_RCC_OscConfig+0x11e>
 80019ba:	2303      	movs	r3, #3
 80019bc:	e1e6      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 80019be:	4b53      	ldr	r3, [pc, #332]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019c6:	2b00      	cmp	r3, #0
 80019c8:	d1f0      	bne.n	80019ac <HAL_RCC_OscConfig+0x10c>
 80019ca:	e000      	b.n	80019ce <HAL_RCC_OscConfig+0x12e>
 80019cc:	bf00      	nop
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	f003 0302 	and.w	r3, r3, #2
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d063      	beq.n	8001aa2 <HAL_RCC_OscConfig+0x202>
 80019da:	4b4c      	ldr	r3, [pc, #304]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80019dc:	685b      	ldr	r3, [r3, #4]
 80019de:	f003 030c 	and.w	r3, r3, #12
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d00b      	beq.n	80019fe <HAL_RCC_OscConfig+0x15e>
 80019e6:	4b49      	ldr	r3, [pc, #292]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80019e8:	685b      	ldr	r3, [r3, #4]
 80019ea:	f003 030c 	and.w	r3, r3, #12
 80019ee:	2b08      	cmp	r3, #8
 80019f0:	d11c      	bne.n	8001a2c <HAL_RCC_OscConfig+0x18c>
 80019f2:	4b46      	ldr	r3, [pc, #280]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 80019f4:	685b      	ldr	r3, [r3, #4]
 80019f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d116      	bne.n	8001a2c <HAL_RCC_OscConfig+0x18c>
 80019fe:	4b43      	ldr	r3, [pc, #268]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	f003 0302 	and.w	r3, r3, #2
 8001a06:	2b00      	cmp	r3, #0
 8001a08:	d005      	beq.n	8001a16 <HAL_RCC_OscConfig+0x176>
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	691b      	ldr	r3, [r3, #16]
 8001a0e:	2b01      	cmp	r3, #1
 8001a10:	d001      	beq.n	8001a16 <HAL_RCC_OscConfig+0x176>
 8001a12:	2301      	movs	r3, #1
 8001a14:	e1ba      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001a16:	4b3d      	ldr	r3, [pc, #244]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a18:	681b      	ldr	r3, [r3, #0]
 8001a1a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	695b      	ldr	r3, [r3, #20]
 8001a22:	00db      	lsls	r3, r3, #3
 8001a24:	4939      	ldr	r1, [pc, #228]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a26:	4313      	orrs	r3, r2
 8001a28:	600b      	str	r3, [r1, #0]
 8001a2a:	e03a      	b.n	8001aa2 <HAL_RCC_OscConfig+0x202>
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	691b      	ldr	r3, [r3, #16]
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d020      	beq.n	8001a76 <HAL_RCC_OscConfig+0x1d6>
 8001a34:	4b36      	ldr	r3, [pc, #216]	; (8001b10 <HAL_RCC_OscConfig+0x270>)
 8001a36:	2201      	movs	r2, #1
 8001a38:	601a      	str	r2, [r3, #0]
 8001a3a:	f7ff fa77 	bl	8000f2c <HAL_GetTick>
 8001a3e:	6138      	str	r0, [r7, #16]
 8001a40:	e008      	b.n	8001a54 <HAL_RCC_OscConfig+0x1b4>
 8001a42:	f7ff fa73 	bl	8000f2c <HAL_GetTick>
 8001a46:	4602      	mov	r2, r0
 8001a48:	693b      	ldr	r3, [r7, #16]
 8001a4a:	1ad3      	subs	r3, r2, r3
 8001a4c:	2b02      	cmp	r3, #2
 8001a4e:	d901      	bls.n	8001a54 <HAL_RCC_OscConfig+0x1b4>
 8001a50:	2303      	movs	r3, #3
 8001a52:	e19b      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001a54:	4b2d      	ldr	r3, [pc, #180]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	f003 0302 	and.w	r3, r3, #2
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d0f0      	beq.n	8001a42 <HAL_RCC_OscConfig+0x1a2>
 8001a60:	4b2a      	ldr	r3, [pc, #168]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	695b      	ldr	r3, [r3, #20]
 8001a6c:	00db      	lsls	r3, r3, #3
 8001a6e:	4927      	ldr	r1, [pc, #156]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a70:	4313      	orrs	r3, r2
 8001a72:	600b      	str	r3, [r1, #0]
 8001a74:	e015      	b.n	8001aa2 <HAL_RCC_OscConfig+0x202>
 8001a76:	4b26      	ldr	r3, [pc, #152]	; (8001b10 <HAL_RCC_OscConfig+0x270>)
 8001a78:	2200      	movs	r2, #0
 8001a7a:	601a      	str	r2, [r3, #0]
 8001a7c:	f7ff fa56 	bl	8000f2c <HAL_GetTick>
 8001a80:	6138      	str	r0, [r7, #16]
 8001a82:	e008      	b.n	8001a96 <HAL_RCC_OscConfig+0x1f6>
 8001a84:	f7ff fa52 	bl	8000f2c <HAL_GetTick>
 8001a88:	4602      	mov	r2, r0
 8001a8a:	693b      	ldr	r3, [r7, #16]
 8001a8c:	1ad3      	subs	r3, r2, r3
 8001a8e:	2b02      	cmp	r3, #2
 8001a90:	d901      	bls.n	8001a96 <HAL_RCC_OscConfig+0x1f6>
 8001a92:	2303      	movs	r3, #3
 8001a94:	e17a      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001a96:	4b1d      	ldr	r3, [pc, #116]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	f003 0302 	and.w	r3, r3, #2
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	d1f0      	bne.n	8001a84 <HAL_RCC_OscConfig+0x1e4>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	f003 0308 	and.w	r3, r3, #8
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d03a      	beq.n	8001b24 <HAL_RCC_OscConfig+0x284>
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	699b      	ldr	r3, [r3, #24]
 8001ab2:	2b00      	cmp	r3, #0
 8001ab4:	d019      	beq.n	8001aea <HAL_RCC_OscConfig+0x24a>
 8001ab6:	4b17      	ldr	r3, [pc, #92]	; (8001b14 <HAL_RCC_OscConfig+0x274>)
 8001ab8:	2201      	movs	r2, #1
 8001aba:	601a      	str	r2, [r3, #0]
 8001abc:	f7ff fa36 	bl	8000f2c <HAL_GetTick>
 8001ac0:	6138      	str	r0, [r7, #16]
 8001ac2:	e008      	b.n	8001ad6 <HAL_RCC_OscConfig+0x236>
 8001ac4:	f7ff fa32 	bl	8000f2c <HAL_GetTick>
 8001ac8:	4602      	mov	r2, r0
 8001aca:	693b      	ldr	r3, [r7, #16]
 8001acc:	1ad3      	subs	r3, r2, r3
 8001ace:	2b02      	cmp	r3, #2
 8001ad0:	d901      	bls.n	8001ad6 <HAL_RCC_OscConfig+0x236>
 8001ad2:	2303      	movs	r3, #3
 8001ad4:	e15a      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001ad6:	4b0d      	ldr	r3, [pc, #52]	; (8001b0c <HAL_RCC_OscConfig+0x26c>)
 8001ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ada:	f003 0302 	and.w	r3, r3, #2
 8001ade:	2b00      	cmp	r3, #0
 8001ae0:	d0f0      	beq.n	8001ac4 <HAL_RCC_OscConfig+0x224>
 8001ae2:	2001      	movs	r0, #1
 8001ae4:	f000 fad8 	bl	8002098 <RCC_Delay>
 8001ae8:	e01c      	b.n	8001b24 <HAL_RCC_OscConfig+0x284>
 8001aea:	4b0a      	ldr	r3, [pc, #40]	; (8001b14 <HAL_RCC_OscConfig+0x274>)
 8001aec:	2200      	movs	r2, #0
 8001aee:	601a      	str	r2, [r3, #0]
 8001af0:	f7ff fa1c 	bl	8000f2c <HAL_GetTick>
 8001af4:	6138      	str	r0, [r7, #16]
 8001af6:	e00f      	b.n	8001b18 <HAL_RCC_OscConfig+0x278>
 8001af8:	f7ff fa18 	bl	8000f2c <HAL_GetTick>
 8001afc:	4602      	mov	r2, r0
 8001afe:	693b      	ldr	r3, [r7, #16]
 8001b00:	1ad3      	subs	r3, r2, r3
 8001b02:	2b02      	cmp	r3, #2
 8001b04:	d908      	bls.n	8001b18 <HAL_RCC_OscConfig+0x278>
 8001b06:	2303      	movs	r3, #3
 8001b08:	e140      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001b0a:	bf00      	nop
 8001b0c:	40021000 	.word	0x40021000
 8001b10:	42420000 	.word	0x42420000
 8001b14:	42420480 	.word	0x42420480
 8001b18:	4b9e      	ldr	r3, [pc, #632]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b1c:	f003 0302 	and.w	r3, r3, #2
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d1e9      	bne.n	8001af8 <HAL_RCC_OscConfig+0x258>
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	f003 0304 	and.w	r3, r3, #4
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	f000 80a6 	beq.w	8001c7e <HAL_RCC_OscConfig+0x3de>
 8001b32:	2300      	movs	r3, #0
 8001b34:	75fb      	strb	r3, [r7, #23]
 8001b36:	4b97      	ldr	r3, [pc, #604]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001b38:	69db      	ldr	r3, [r3, #28]
 8001b3a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d10d      	bne.n	8001b5e <HAL_RCC_OscConfig+0x2be>
 8001b42:	4b94      	ldr	r3, [pc, #592]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001b44:	69db      	ldr	r3, [r3, #28]
 8001b46:	4a93      	ldr	r2, [pc, #588]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001b48:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b4c:	61d3      	str	r3, [r2, #28]
 8001b4e:	4b91      	ldr	r3, [pc, #580]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001b50:	69db      	ldr	r3, [r3, #28]
 8001b52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b56:	60bb      	str	r3, [r7, #8]
 8001b58:	68bb      	ldr	r3, [r7, #8]
 8001b5a:	2301      	movs	r3, #1
 8001b5c:	75fb      	strb	r3, [r7, #23]
 8001b5e:	4b8e      	ldr	r3, [pc, #568]	; (8001d98 <HAL_RCC_OscConfig+0x4f8>)
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d118      	bne.n	8001b9c <HAL_RCC_OscConfig+0x2fc>
 8001b6a:	4b8b      	ldr	r3, [pc, #556]	; (8001d98 <HAL_RCC_OscConfig+0x4f8>)
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	4a8a      	ldr	r2, [pc, #552]	; (8001d98 <HAL_RCC_OscConfig+0x4f8>)
 8001b70:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b74:	6013      	str	r3, [r2, #0]
 8001b76:	f7ff f9d9 	bl	8000f2c <HAL_GetTick>
 8001b7a:	6138      	str	r0, [r7, #16]
 8001b7c:	e008      	b.n	8001b90 <HAL_RCC_OscConfig+0x2f0>
 8001b7e:	f7ff f9d5 	bl	8000f2c <HAL_GetTick>
 8001b82:	4602      	mov	r2, r0
 8001b84:	693b      	ldr	r3, [r7, #16]
 8001b86:	1ad3      	subs	r3, r2, r3
 8001b88:	2b64      	cmp	r3, #100	; 0x64
 8001b8a:	d901      	bls.n	8001b90 <HAL_RCC_OscConfig+0x2f0>
 8001b8c:	2303      	movs	r3, #3
 8001b8e:	e0fd      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001b90:	4b81      	ldr	r3, [pc, #516]	; (8001d98 <HAL_RCC_OscConfig+0x4f8>)
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d0f0      	beq.n	8001b7e <HAL_RCC_OscConfig+0x2de>
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	68db      	ldr	r3, [r3, #12]
 8001ba0:	2b01      	cmp	r3, #1
 8001ba2:	d106      	bne.n	8001bb2 <HAL_RCC_OscConfig+0x312>
 8001ba4:	4b7b      	ldr	r3, [pc, #492]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001ba6:	6a1b      	ldr	r3, [r3, #32]
 8001ba8:	4a7a      	ldr	r2, [pc, #488]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001baa:	f043 0301 	orr.w	r3, r3, #1
 8001bae:	6213      	str	r3, [r2, #32]
 8001bb0:	e02d      	b.n	8001c0e <HAL_RCC_OscConfig+0x36e>
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	68db      	ldr	r3, [r3, #12]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d10c      	bne.n	8001bd4 <HAL_RCC_OscConfig+0x334>
 8001bba:	4b76      	ldr	r3, [pc, #472]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bbc:	6a1b      	ldr	r3, [r3, #32]
 8001bbe:	4a75      	ldr	r2, [pc, #468]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bc0:	f023 0301 	bic.w	r3, r3, #1
 8001bc4:	6213      	str	r3, [r2, #32]
 8001bc6:	4b73      	ldr	r3, [pc, #460]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bc8:	6a1b      	ldr	r3, [r3, #32]
 8001bca:	4a72      	ldr	r2, [pc, #456]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bcc:	f023 0304 	bic.w	r3, r3, #4
 8001bd0:	6213      	str	r3, [r2, #32]
 8001bd2:	e01c      	b.n	8001c0e <HAL_RCC_OscConfig+0x36e>
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	68db      	ldr	r3, [r3, #12]
 8001bd8:	2b05      	cmp	r3, #5
 8001bda:	d10c      	bne.n	8001bf6 <HAL_RCC_OscConfig+0x356>
 8001bdc:	4b6d      	ldr	r3, [pc, #436]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bde:	6a1b      	ldr	r3, [r3, #32]
 8001be0:	4a6c      	ldr	r2, [pc, #432]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001be2:	f043 0304 	orr.w	r3, r3, #4
 8001be6:	6213      	str	r3, [r2, #32]
 8001be8:	4b6a      	ldr	r3, [pc, #424]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bea:	6a1b      	ldr	r3, [r3, #32]
 8001bec:	4a69      	ldr	r2, [pc, #420]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bee:	f043 0301 	orr.w	r3, r3, #1
 8001bf2:	6213      	str	r3, [r2, #32]
 8001bf4:	e00b      	b.n	8001c0e <HAL_RCC_OscConfig+0x36e>
 8001bf6:	4b67      	ldr	r3, [pc, #412]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bf8:	6a1b      	ldr	r3, [r3, #32]
 8001bfa:	4a66      	ldr	r2, [pc, #408]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001bfc:	f023 0301 	bic.w	r3, r3, #1
 8001c00:	6213      	str	r3, [r2, #32]
 8001c02:	4b64      	ldr	r3, [pc, #400]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c04:	6a1b      	ldr	r3, [r3, #32]
 8001c06:	4a63      	ldr	r2, [pc, #396]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c08:	f023 0304 	bic.w	r3, r3, #4
 8001c0c:	6213      	str	r3, [r2, #32]
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	68db      	ldr	r3, [r3, #12]
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d015      	beq.n	8001c42 <HAL_RCC_OscConfig+0x3a2>
 8001c16:	f7ff f989 	bl	8000f2c <HAL_GetTick>
 8001c1a:	6138      	str	r0, [r7, #16]
 8001c1c:	e00a      	b.n	8001c34 <HAL_RCC_OscConfig+0x394>
 8001c1e:	f7ff f985 	bl	8000f2c <HAL_GetTick>
 8001c22:	4602      	mov	r2, r0
 8001c24:	693b      	ldr	r3, [r7, #16]
 8001c26:	1ad3      	subs	r3, r2, r3
 8001c28:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c2c:	4293      	cmp	r3, r2
 8001c2e:	d901      	bls.n	8001c34 <HAL_RCC_OscConfig+0x394>
 8001c30:	2303      	movs	r3, #3
 8001c32:	e0ab      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001c34:	4b57      	ldr	r3, [pc, #348]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c36:	6a1b      	ldr	r3, [r3, #32]
 8001c38:	f003 0302 	and.w	r3, r3, #2
 8001c3c:	2b00      	cmp	r3, #0
 8001c3e:	d0ee      	beq.n	8001c1e <HAL_RCC_OscConfig+0x37e>
 8001c40:	e014      	b.n	8001c6c <HAL_RCC_OscConfig+0x3cc>
 8001c42:	f7ff f973 	bl	8000f2c <HAL_GetTick>
 8001c46:	6138      	str	r0, [r7, #16]
 8001c48:	e00a      	b.n	8001c60 <HAL_RCC_OscConfig+0x3c0>
 8001c4a:	f7ff f96f 	bl	8000f2c <HAL_GetTick>
 8001c4e:	4602      	mov	r2, r0
 8001c50:	693b      	ldr	r3, [r7, #16]
 8001c52:	1ad3      	subs	r3, r2, r3
 8001c54:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c58:	4293      	cmp	r3, r2
 8001c5a:	d901      	bls.n	8001c60 <HAL_RCC_OscConfig+0x3c0>
 8001c5c:	2303      	movs	r3, #3
 8001c5e:	e095      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001c60:	4b4c      	ldr	r3, [pc, #304]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c62:	6a1b      	ldr	r3, [r3, #32]
 8001c64:	f003 0302 	and.w	r3, r3, #2
 8001c68:	2b00      	cmp	r3, #0
 8001c6a:	d1ee      	bne.n	8001c4a <HAL_RCC_OscConfig+0x3aa>
 8001c6c:	7dfb      	ldrb	r3, [r7, #23]
 8001c6e:	2b01      	cmp	r3, #1
 8001c70:	d105      	bne.n	8001c7e <HAL_RCC_OscConfig+0x3de>
 8001c72:	4b48      	ldr	r3, [pc, #288]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c74:	69db      	ldr	r3, [r3, #28]
 8001c76:	4a47      	ldr	r2, [pc, #284]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c78:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c7c:	61d3      	str	r3, [r2, #28]
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	69db      	ldr	r3, [r3, #28]
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	f000 8081 	beq.w	8001d8a <HAL_RCC_OscConfig+0x4ea>
 8001c88:	4b42      	ldr	r3, [pc, #264]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001c8a:	685b      	ldr	r3, [r3, #4]
 8001c8c:	f003 030c 	and.w	r3, r3, #12
 8001c90:	2b08      	cmp	r3, #8
 8001c92:	d061      	beq.n	8001d58 <HAL_RCC_OscConfig+0x4b8>
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	69db      	ldr	r3, [r3, #28]
 8001c98:	2b02      	cmp	r3, #2
 8001c9a:	d146      	bne.n	8001d2a <HAL_RCC_OscConfig+0x48a>
 8001c9c:	4b3f      	ldr	r3, [pc, #252]	; (8001d9c <HAL_RCC_OscConfig+0x4fc>)
 8001c9e:	2200      	movs	r2, #0
 8001ca0:	601a      	str	r2, [r3, #0]
 8001ca2:	f7ff f943 	bl	8000f2c <HAL_GetTick>
 8001ca6:	6138      	str	r0, [r7, #16]
 8001ca8:	e008      	b.n	8001cbc <HAL_RCC_OscConfig+0x41c>
 8001caa:	f7ff f93f 	bl	8000f2c <HAL_GetTick>
 8001cae:	4602      	mov	r2, r0
 8001cb0:	693b      	ldr	r3, [r7, #16]
 8001cb2:	1ad3      	subs	r3, r2, r3
 8001cb4:	2b02      	cmp	r3, #2
 8001cb6:	d901      	bls.n	8001cbc <HAL_RCC_OscConfig+0x41c>
 8001cb8:	2303      	movs	r3, #3
 8001cba:	e067      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001cbc:	4b35      	ldr	r3, [pc, #212]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001cbe:	681b      	ldr	r3, [r3, #0]
 8001cc0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	d1f0      	bne.n	8001caa <HAL_RCC_OscConfig+0x40a>
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	6a1b      	ldr	r3, [r3, #32]
 8001ccc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001cd0:	d108      	bne.n	8001ce4 <HAL_RCC_OscConfig+0x444>
 8001cd2:	4b30      	ldr	r3, [pc, #192]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001cd4:	685b      	ldr	r3, [r3, #4]
 8001cd6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	689b      	ldr	r3, [r3, #8]
 8001cde:	492d      	ldr	r1, [pc, #180]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001ce0:	4313      	orrs	r3, r2
 8001ce2:	604b      	str	r3, [r1, #4]
 8001ce4:	4b2b      	ldr	r3, [pc, #172]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001ce6:	685b      	ldr	r3, [r3, #4]
 8001ce8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	6a19      	ldr	r1, [r3, #32]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cf4:	430b      	orrs	r3, r1
 8001cf6:	4927      	ldr	r1, [pc, #156]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001cf8:	4313      	orrs	r3, r2
 8001cfa:	604b      	str	r3, [r1, #4]
 8001cfc:	4b27      	ldr	r3, [pc, #156]	; (8001d9c <HAL_RCC_OscConfig+0x4fc>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	601a      	str	r2, [r3, #0]
 8001d02:	f7ff f913 	bl	8000f2c <HAL_GetTick>
 8001d06:	6138      	str	r0, [r7, #16]
 8001d08:	e008      	b.n	8001d1c <HAL_RCC_OscConfig+0x47c>
 8001d0a:	f7ff f90f 	bl	8000f2c <HAL_GetTick>
 8001d0e:	4602      	mov	r2, r0
 8001d10:	693b      	ldr	r3, [r7, #16]
 8001d12:	1ad3      	subs	r3, r2, r3
 8001d14:	2b02      	cmp	r3, #2
 8001d16:	d901      	bls.n	8001d1c <HAL_RCC_OscConfig+0x47c>
 8001d18:	2303      	movs	r3, #3
 8001d1a:	e037      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001d1c:	4b1d      	ldr	r3, [pc, #116]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	d0f0      	beq.n	8001d0a <HAL_RCC_OscConfig+0x46a>
 8001d28:	e02f      	b.n	8001d8a <HAL_RCC_OscConfig+0x4ea>
 8001d2a:	4b1c      	ldr	r3, [pc, #112]	; (8001d9c <HAL_RCC_OscConfig+0x4fc>)
 8001d2c:	2200      	movs	r2, #0
 8001d2e:	601a      	str	r2, [r3, #0]
 8001d30:	f7ff f8fc 	bl	8000f2c <HAL_GetTick>
 8001d34:	6138      	str	r0, [r7, #16]
 8001d36:	e008      	b.n	8001d4a <HAL_RCC_OscConfig+0x4aa>
 8001d38:	f7ff f8f8 	bl	8000f2c <HAL_GetTick>
 8001d3c:	4602      	mov	r2, r0
 8001d3e:	693b      	ldr	r3, [r7, #16]
 8001d40:	1ad3      	subs	r3, r2, r3
 8001d42:	2b02      	cmp	r3, #2
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_OscConfig+0x4aa>
 8001d46:	2303      	movs	r3, #3
 8001d48:	e020      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001d4a:	4b12      	ldr	r3, [pc, #72]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d1f0      	bne.n	8001d38 <HAL_RCC_OscConfig+0x498>
 8001d56:	e018      	b.n	8001d8a <HAL_RCC_OscConfig+0x4ea>
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	69db      	ldr	r3, [r3, #28]
 8001d5c:	2b01      	cmp	r3, #1
 8001d5e:	d101      	bne.n	8001d64 <HAL_RCC_OscConfig+0x4c4>
 8001d60:	2301      	movs	r3, #1
 8001d62:	e013      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001d64:	4b0b      	ldr	r3, [pc, #44]	; (8001d94 <HAL_RCC_OscConfig+0x4f4>)
 8001d66:	685b      	ldr	r3, [r3, #4]
 8001d68:	60fb      	str	r3, [r7, #12]
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	6a1b      	ldr	r3, [r3, #32]
 8001d74:	429a      	cmp	r2, r3
 8001d76:	d106      	bne.n	8001d86 <HAL_RCC_OscConfig+0x4e6>
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d82:	429a      	cmp	r2, r3
 8001d84:	d001      	beq.n	8001d8a <HAL_RCC_OscConfig+0x4ea>
 8001d86:	2301      	movs	r3, #1
 8001d88:	e000      	b.n	8001d8c <HAL_RCC_OscConfig+0x4ec>
 8001d8a:	2300      	movs	r3, #0
 8001d8c:	4618      	mov	r0, r3
 8001d8e:	3718      	adds	r7, #24
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bd80      	pop	{r7, pc}
 8001d94:	40021000 	.word	0x40021000
 8001d98:	40007000 	.word	0x40007000
 8001d9c:	42420060 	.word	0x42420060

08001da0 <HAL_RCC_ClockConfig>:
 8001da0:	b580      	push	{r7, lr}
 8001da2:	b084      	sub	sp, #16
 8001da4:	af00      	add	r7, sp, #0
 8001da6:	6078      	str	r0, [r7, #4]
 8001da8:	6039      	str	r1, [r7, #0]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d101      	bne.n	8001db4 <HAL_RCC_ClockConfig+0x14>
 8001db0:	2301      	movs	r3, #1
 8001db2:	e0d0      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001db4:	4b6a      	ldr	r3, [pc, #424]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f003 0307 	and.w	r3, r3, #7
 8001dbc:	683a      	ldr	r2, [r7, #0]
 8001dbe:	429a      	cmp	r2, r3
 8001dc0:	d910      	bls.n	8001de4 <HAL_RCC_ClockConfig+0x44>
 8001dc2:	4b67      	ldr	r3, [pc, #412]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f023 0207 	bic.w	r2, r3, #7
 8001dca:	4965      	ldr	r1, [pc, #404]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001dcc:	683b      	ldr	r3, [r7, #0]
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	600b      	str	r3, [r1, #0]
 8001dd2:	4b63      	ldr	r3, [pc, #396]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f003 0307 	and.w	r3, r3, #7
 8001dda:	683a      	ldr	r2, [r7, #0]
 8001ddc:	429a      	cmp	r2, r3
 8001dde:	d001      	beq.n	8001de4 <HAL_RCC_ClockConfig+0x44>
 8001de0:	2301      	movs	r3, #1
 8001de2:	e0b8      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	f003 0302 	and.w	r3, r3, #2
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d020      	beq.n	8001e32 <HAL_RCC_ClockConfig+0x92>
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	f003 0304 	and.w	r3, r3, #4
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	d005      	beq.n	8001e08 <HAL_RCC_ClockConfig+0x68>
 8001dfc:	4b59      	ldr	r3, [pc, #356]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001dfe:	685b      	ldr	r3, [r3, #4]
 8001e00:	4a58      	ldr	r2, [pc, #352]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e02:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001e06:	6053      	str	r3, [r2, #4]
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	f003 0308 	and.w	r3, r3, #8
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d005      	beq.n	8001e20 <HAL_RCC_ClockConfig+0x80>
 8001e14:	4b53      	ldr	r3, [pc, #332]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	4a52      	ldr	r2, [pc, #328]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e1a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001e1e:	6053      	str	r3, [r2, #4]
 8001e20:	4b50      	ldr	r3, [pc, #320]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e22:	685b      	ldr	r3, [r3, #4]
 8001e24:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	689b      	ldr	r3, [r3, #8]
 8001e2c:	494d      	ldr	r1, [pc, #308]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e2e:	4313      	orrs	r3, r2
 8001e30:	604b      	str	r3, [r1, #4]
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	f003 0301 	and.w	r3, r3, #1
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	d040      	beq.n	8001ec0 <HAL_RCC_ClockConfig+0x120>
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	685b      	ldr	r3, [r3, #4]
 8001e42:	2b01      	cmp	r3, #1
 8001e44:	d107      	bne.n	8001e56 <HAL_RCC_ClockConfig+0xb6>
 8001e46:	4b47      	ldr	r3, [pc, #284]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	d115      	bne.n	8001e7e <HAL_RCC_ClockConfig+0xde>
 8001e52:	2301      	movs	r3, #1
 8001e54:	e07f      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	685b      	ldr	r3, [r3, #4]
 8001e5a:	2b02      	cmp	r3, #2
 8001e5c:	d107      	bne.n	8001e6e <HAL_RCC_ClockConfig+0xce>
 8001e5e:	4b41      	ldr	r3, [pc, #260]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d109      	bne.n	8001e7e <HAL_RCC_ClockConfig+0xde>
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	e073      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001e6e:	4b3d      	ldr	r3, [pc, #244]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	f003 0302 	and.w	r3, r3, #2
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d101      	bne.n	8001e7e <HAL_RCC_ClockConfig+0xde>
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	e06b      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001e7e:	4b39      	ldr	r3, [pc, #228]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e80:	685b      	ldr	r3, [r3, #4]
 8001e82:	f023 0203 	bic.w	r2, r3, #3
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	685b      	ldr	r3, [r3, #4]
 8001e8a:	4936      	ldr	r1, [pc, #216]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001e8c:	4313      	orrs	r3, r2
 8001e8e:	604b      	str	r3, [r1, #4]
 8001e90:	f7ff f84c 	bl	8000f2c <HAL_GetTick>
 8001e94:	60f8      	str	r0, [r7, #12]
 8001e96:	e00a      	b.n	8001eae <HAL_RCC_ClockConfig+0x10e>
 8001e98:	f7ff f848 	bl	8000f2c <HAL_GetTick>
 8001e9c:	4602      	mov	r2, r0
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	1ad3      	subs	r3, r2, r3
 8001ea2:	f241 3288 	movw	r2, #5000	; 0x1388
 8001ea6:	4293      	cmp	r3, r2
 8001ea8:	d901      	bls.n	8001eae <HAL_RCC_ClockConfig+0x10e>
 8001eaa:	2303      	movs	r3, #3
 8001eac:	e053      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001eae:	4b2d      	ldr	r3, [pc, #180]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001eb0:	685b      	ldr	r3, [r3, #4]
 8001eb2:	f003 020c 	and.w	r2, r3, #12
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	685b      	ldr	r3, [r3, #4]
 8001eba:	009b      	lsls	r3, r3, #2
 8001ebc:	429a      	cmp	r2, r3
 8001ebe:	d1eb      	bne.n	8001e98 <HAL_RCC_ClockConfig+0xf8>
 8001ec0:	4b27      	ldr	r3, [pc, #156]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	f003 0307 	and.w	r3, r3, #7
 8001ec8:	683a      	ldr	r2, [r7, #0]
 8001eca:	429a      	cmp	r2, r3
 8001ecc:	d210      	bcs.n	8001ef0 <HAL_RCC_ClockConfig+0x150>
 8001ece:	4b24      	ldr	r3, [pc, #144]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	f023 0207 	bic.w	r2, r3, #7
 8001ed6:	4922      	ldr	r1, [pc, #136]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001ed8:	683b      	ldr	r3, [r7, #0]
 8001eda:	4313      	orrs	r3, r2
 8001edc:	600b      	str	r3, [r1, #0]
 8001ede:	4b20      	ldr	r3, [pc, #128]	; (8001f60 <HAL_RCC_ClockConfig+0x1c0>)
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	f003 0307 	and.w	r3, r3, #7
 8001ee6:	683a      	ldr	r2, [r7, #0]
 8001ee8:	429a      	cmp	r2, r3
 8001eea:	d001      	beq.n	8001ef0 <HAL_RCC_ClockConfig+0x150>
 8001eec:	2301      	movs	r3, #1
 8001eee:	e032      	b.n	8001f56 <HAL_RCC_ClockConfig+0x1b6>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	f003 0304 	and.w	r3, r3, #4
 8001ef8:	2b00      	cmp	r3, #0
 8001efa:	d008      	beq.n	8001f0e <HAL_RCC_ClockConfig+0x16e>
 8001efc:	4b19      	ldr	r3, [pc, #100]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001efe:	685b      	ldr	r3, [r3, #4]
 8001f00:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	68db      	ldr	r3, [r3, #12]
 8001f08:	4916      	ldr	r1, [pc, #88]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001f0a:	4313      	orrs	r3, r2
 8001f0c:	604b      	str	r3, [r1, #4]
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	f003 0308 	and.w	r3, r3, #8
 8001f16:	2b00      	cmp	r3, #0
 8001f18:	d009      	beq.n	8001f2e <HAL_RCC_ClockConfig+0x18e>
 8001f1a:	4b12      	ldr	r3, [pc, #72]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001f1c:	685b      	ldr	r3, [r3, #4]
 8001f1e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	691b      	ldr	r3, [r3, #16]
 8001f26:	00db      	lsls	r3, r3, #3
 8001f28:	490e      	ldr	r1, [pc, #56]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001f2a:	4313      	orrs	r3, r2
 8001f2c:	604b      	str	r3, [r1, #4]
 8001f2e:	f000 f821 	bl	8001f74 <HAL_RCC_GetSysClockFreq>
 8001f32:	4602      	mov	r2, r0
 8001f34:	4b0b      	ldr	r3, [pc, #44]	; (8001f64 <HAL_RCC_ClockConfig+0x1c4>)
 8001f36:	685b      	ldr	r3, [r3, #4]
 8001f38:	091b      	lsrs	r3, r3, #4
 8001f3a:	f003 030f 	and.w	r3, r3, #15
 8001f3e:	490a      	ldr	r1, [pc, #40]	; (8001f68 <HAL_RCC_ClockConfig+0x1c8>)
 8001f40:	5ccb      	ldrb	r3, [r1, r3]
 8001f42:	fa22 f303 	lsr.w	r3, r2, r3
 8001f46:	4a09      	ldr	r2, [pc, #36]	; (8001f6c <HAL_RCC_ClockConfig+0x1cc>)
 8001f48:	6013      	str	r3, [r2, #0]
 8001f4a:	4b09      	ldr	r3, [pc, #36]	; (8001f70 <HAL_RCC_ClockConfig+0x1d0>)
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	4618      	mov	r0, r3
 8001f50:	f7fe ffaa 	bl	8000ea8 <HAL_InitTick>
 8001f54:	2300      	movs	r3, #0
 8001f56:	4618      	mov	r0, r3
 8001f58:	3710      	adds	r7, #16
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	bd80      	pop	{r7, pc}
 8001f5e:	bf00      	nop
 8001f60:	40022000 	.word	0x40022000
 8001f64:	40021000 	.word	0x40021000
 8001f68:	08004ee0 	.word	0x08004ee0
 8001f6c:	20000000 	.word	0x20000000
 8001f70:	20000004 	.word	0x20000004

08001f74 <HAL_RCC_GetSysClockFreq>:
 8001f74:	b490      	push	{r4, r7}
 8001f76:	b08a      	sub	sp, #40	; 0x28
 8001f78:	af00      	add	r7, sp, #0
 8001f7a:	4b2a      	ldr	r3, [pc, #168]	; (8002024 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f7c:	1d3c      	adds	r4, r7, #4
 8001f7e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001f80:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001f84:	f240 2301 	movw	r3, #513	; 0x201
 8001f88:	803b      	strh	r3, [r7, #0]
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	61fb      	str	r3, [r7, #28]
 8001f8e:	2300      	movs	r3, #0
 8001f90:	61bb      	str	r3, [r7, #24]
 8001f92:	2300      	movs	r3, #0
 8001f94:	627b      	str	r3, [r7, #36]	; 0x24
 8001f96:	2300      	movs	r3, #0
 8001f98:	617b      	str	r3, [r7, #20]
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	623b      	str	r3, [r7, #32]
 8001f9e:	4b22      	ldr	r3, [pc, #136]	; (8002028 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001fa0:	685b      	ldr	r3, [r3, #4]
 8001fa2:	61fb      	str	r3, [r7, #28]
 8001fa4:	69fb      	ldr	r3, [r7, #28]
 8001fa6:	f003 030c 	and.w	r3, r3, #12
 8001faa:	2b04      	cmp	r3, #4
 8001fac:	d002      	beq.n	8001fb4 <HAL_RCC_GetSysClockFreq+0x40>
 8001fae:	2b08      	cmp	r3, #8
 8001fb0:	d003      	beq.n	8001fba <HAL_RCC_GetSysClockFreq+0x46>
 8001fb2:	e02d      	b.n	8002010 <HAL_RCC_GetSysClockFreq+0x9c>
 8001fb4:	4b1d      	ldr	r3, [pc, #116]	; (800202c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001fb6:	623b      	str	r3, [r7, #32]
 8001fb8:	e02d      	b.n	8002016 <HAL_RCC_GetSysClockFreq+0xa2>
 8001fba:	69fb      	ldr	r3, [r7, #28]
 8001fbc:	0c9b      	lsrs	r3, r3, #18
 8001fbe:	f003 030f 	and.w	r3, r3, #15
 8001fc2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001fc6:	4413      	add	r3, r2
 8001fc8:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001fcc:	617b      	str	r3, [r7, #20]
 8001fce:	69fb      	ldr	r3, [r7, #28]
 8001fd0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	d013      	beq.n	8002000 <HAL_RCC_GetSysClockFreq+0x8c>
 8001fd8:	4b13      	ldr	r3, [pc, #76]	; (8002028 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001fda:	685b      	ldr	r3, [r3, #4]
 8001fdc:	0c5b      	lsrs	r3, r3, #17
 8001fde:	f003 0301 	and.w	r3, r3, #1
 8001fe2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001fe6:	4413      	add	r3, r2
 8001fe8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001fec:	61bb      	str	r3, [r7, #24]
 8001fee:	697b      	ldr	r3, [r7, #20]
 8001ff0:	4a0e      	ldr	r2, [pc, #56]	; (800202c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ff2:	fb02 f203 	mul.w	r2, r2, r3
 8001ff6:	69bb      	ldr	r3, [r7, #24]
 8001ff8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ffc:	627b      	str	r3, [r7, #36]	; 0x24
 8001ffe:	e004      	b.n	800200a <HAL_RCC_GetSysClockFreq+0x96>
 8002000:	697b      	ldr	r3, [r7, #20]
 8002002:	4a0b      	ldr	r2, [pc, #44]	; (8002030 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002004:	fb02 f303 	mul.w	r3, r2, r3
 8002008:	627b      	str	r3, [r7, #36]	; 0x24
 800200a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800200c:	623b      	str	r3, [r7, #32]
 800200e:	e002      	b.n	8002016 <HAL_RCC_GetSysClockFreq+0xa2>
 8002010:	4b06      	ldr	r3, [pc, #24]	; (800202c <HAL_RCC_GetSysClockFreq+0xb8>)
 8002012:	623b      	str	r3, [r7, #32]
 8002014:	bf00      	nop
 8002016:	6a3b      	ldr	r3, [r7, #32]
 8002018:	4618      	mov	r0, r3
 800201a:	3728      	adds	r7, #40	; 0x28
 800201c:	46bd      	mov	sp, r7
 800201e:	bc90      	pop	{r4, r7}
 8002020:	4770      	bx	lr
 8002022:	bf00      	nop
 8002024:	08004ed0 	.word	0x08004ed0
 8002028:	40021000 	.word	0x40021000
 800202c:	007a1200 	.word	0x007a1200
 8002030:	003d0900 	.word	0x003d0900

08002034 <HAL_RCC_GetHCLKFreq>:
 8002034:	b480      	push	{r7}
 8002036:	af00      	add	r7, sp, #0
 8002038:	4b02      	ldr	r3, [pc, #8]	; (8002044 <HAL_RCC_GetHCLKFreq+0x10>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4618      	mov	r0, r3
 800203e:	46bd      	mov	sp, r7
 8002040:	bc80      	pop	{r7}
 8002042:	4770      	bx	lr
 8002044:	20000000 	.word	0x20000000

08002048 <HAL_RCC_GetPCLK1Freq>:
 8002048:	b580      	push	{r7, lr}
 800204a:	af00      	add	r7, sp, #0
 800204c:	f7ff fff2 	bl	8002034 <HAL_RCC_GetHCLKFreq>
 8002050:	4602      	mov	r2, r0
 8002052:	4b05      	ldr	r3, [pc, #20]	; (8002068 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002054:	685b      	ldr	r3, [r3, #4]
 8002056:	0a1b      	lsrs	r3, r3, #8
 8002058:	f003 0307 	and.w	r3, r3, #7
 800205c:	4903      	ldr	r1, [pc, #12]	; (800206c <HAL_RCC_GetPCLK1Freq+0x24>)
 800205e:	5ccb      	ldrb	r3, [r1, r3]
 8002060:	fa22 f303 	lsr.w	r3, r2, r3
 8002064:	4618      	mov	r0, r3
 8002066:	bd80      	pop	{r7, pc}
 8002068:	40021000 	.word	0x40021000
 800206c:	08004ef0 	.word	0x08004ef0

08002070 <HAL_RCC_GetPCLK2Freq>:
 8002070:	b580      	push	{r7, lr}
 8002072:	af00      	add	r7, sp, #0
 8002074:	f7ff ffde 	bl	8002034 <HAL_RCC_GetHCLKFreq>
 8002078:	4602      	mov	r2, r0
 800207a:	4b05      	ldr	r3, [pc, #20]	; (8002090 <HAL_RCC_GetPCLK2Freq+0x20>)
 800207c:	685b      	ldr	r3, [r3, #4]
 800207e:	0adb      	lsrs	r3, r3, #11
 8002080:	f003 0307 	and.w	r3, r3, #7
 8002084:	4903      	ldr	r1, [pc, #12]	; (8002094 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002086:	5ccb      	ldrb	r3, [r1, r3]
 8002088:	fa22 f303 	lsr.w	r3, r2, r3
 800208c:	4618      	mov	r0, r3
 800208e:	bd80      	pop	{r7, pc}
 8002090:	40021000 	.word	0x40021000
 8002094:	08004ef0 	.word	0x08004ef0

08002098 <RCC_Delay>:
 8002098:	b480      	push	{r7}
 800209a:	b085      	sub	sp, #20
 800209c:	af00      	add	r7, sp, #0
 800209e:	6078      	str	r0, [r7, #4]
 80020a0:	4b0a      	ldr	r3, [pc, #40]	; (80020cc <RCC_Delay+0x34>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	4a0a      	ldr	r2, [pc, #40]	; (80020d0 <RCC_Delay+0x38>)
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0a5b      	lsrs	r3, r3, #9
 80020ac:	687a      	ldr	r2, [r7, #4]
 80020ae:	fb02 f303 	mul.w	r3, r2, r3
 80020b2:	60fb      	str	r3, [r7, #12]
 80020b4:	bf00      	nop
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	1e5a      	subs	r2, r3, #1
 80020ba:	60fa      	str	r2, [r7, #12]
 80020bc:	2b00      	cmp	r3, #0
 80020be:	d1f9      	bne.n	80020b4 <RCC_Delay+0x1c>
 80020c0:	bf00      	nop
 80020c2:	bf00      	nop
 80020c4:	3714      	adds	r7, #20
 80020c6:	46bd      	mov	sp, r7
 80020c8:	bc80      	pop	{r7}
 80020ca:	4770      	bx	lr
 80020cc:	20000000 	.word	0x20000000
 80020d0:	10624dd3 	.word	0x10624dd3

080020d4 <HAL_TIM_Base_Init>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b082      	sub	sp, #8
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d101      	bne.n	80020e6 <HAL_TIM_Base_Init+0x12>
 80020e2:	2301      	movs	r3, #1
 80020e4:	e041      	b.n	800216a <HAL_TIM_Base_Init+0x96>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80020ec:	b2db      	uxtb	r3, r3
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d106      	bne.n	8002100 <HAL_TIM_Base_Init+0x2c>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	2200      	movs	r2, #0
 80020f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020fa:	6878      	ldr	r0, [r7, #4]
 80020fc:	f7fe fd98 	bl	8000c30 <HAL_TIM_Base_MspInit>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	2202      	movs	r2, #2
 8002104:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681a      	ldr	r2, [r3, #0]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	3304      	adds	r3, #4
 8002110:	4619      	mov	r1, r3
 8002112:	4610      	mov	r0, r2
 8002114:	f000 faa4 	bl	8002660 <TIM_Base_SetConfig>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	2201      	movs	r2, #1
 800211c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	2201      	movs	r2, #1
 8002124:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	2201      	movs	r2, #1
 800212c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	2201      	movs	r2, #1
 800213c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	2201      	movs	r2, #1
 8002144:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2201      	movs	r2, #1
 800214c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2201      	movs	r2, #1
 8002154:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	2201      	movs	r2, #1
 800215c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	2201      	movs	r2, #1
 8002164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002168:	2300      	movs	r3, #0
 800216a:	4618      	mov	r0, r3
 800216c:	3708      	adds	r7, #8
 800216e:	46bd      	mov	sp, r7
 8002170:	bd80      	pop	{r7, pc}

08002172 <HAL_TIM_PWM_Init>:
 8002172:	b580      	push	{r7, lr}
 8002174:	b082      	sub	sp, #8
 8002176:	af00      	add	r7, sp, #0
 8002178:	6078      	str	r0, [r7, #4]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d101      	bne.n	8002184 <HAL_TIM_PWM_Init+0x12>
 8002180:	2301      	movs	r3, #1
 8002182:	e041      	b.n	8002208 <HAL_TIM_PWM_Init+0x96>
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800218a:	b2db      	uxtb	r3, r3
 800218c:	2b00      	cmp	r3, #0
 800218e:	d106      	bne.n	800219e <HAL_TIM_PWM_Init+0x2c>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	2200      	movs	r2, #0
 8002194:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002198:	6878      	ldr	r0, [r7, #4]
 800219a:	f000 f839 	bl	8002210 <HAL_TIM_PWM_MspInit>
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	2202      	movs	r2, #2
 80021a2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	681a      	ldr	r2, [r3, #0]
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	3304      	adds	r3, #4
 80021ae:	4619      	mov	r1, r3
 80021b0:	4610      	mov	r0, r2
 80021b2:	f000 fa55 	bl	8002660 <TIM_Base_SetConfig>
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	2201      	movs	r2, #1
 80021ba:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	2201      	movs	r2, #1
 80021c2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	2201      	movs	r2, #1
 80021ca:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	2201      	movs	r2, #1
 80021d2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	2201      	movs	r2, #1
 80021da:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	2201      	movs	r2, #1
 80021e2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	2201      	movs	r2, #1
 80021ea:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	2201      	movs	r2, #1
 80021f2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	2201      	movs	r2, #1
 80021fa:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	2201      	movs	r2, #1
 8002202:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002206:	2300      	movs	r3, #0
 8002208:	4618      	mov	r0, r3
 800220a:	3708      	adds	r7, #8
 800220c:	46bd      	mov	sp, r7
 800220e:	bd80      	pop	{r7, pc}

08002210 <HAL_TIM_PWM_MspInit>:
 8002210:	b480      	push	{r7}
 8002212:	b083      	sub	sp, #12
 8002214:	af00      	add	r7, sp, #0
 8002216:	6078      	str	r0, [r7, #4]
 8002218:	bf00      	nop
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	bc80      	pop	{r7}
 8002220:	4770      	bx	lr
	...

08002224 <HAL_TIM_PWM_Start>:
 8002224:	b580      	push	{r7, lr}
 8002226:	b084      	sub	sp, #16
 8002228:	af00      	add	r7, sp, #0
 800222a:	6078      	str	r0, [r7, #4]
 800222c:	6039      	str	r1, [r7, #0]
 800222e:	683b      	ldr	r3, [r7, #0]
 8002230:	2b00      	cmp	r3, #0
 8002232:	d109      	bne.n	8002248 <HAL_TIM_PWM_Start+0x24>
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800223a:	b2db      	uxtb	r3, r3
 800223c:	2b01      	cmp	r3, #1
 800223e:	bf14      	ite	ne
 8002240:	2301      	movne	r3, #1
 8002242:	2300      	moveq	r3, #0
 8002244:	b2db      	uxtb	r3, r3
 8002246:	e022      	b.n	800228e <HAL_TIM_PWM_Start+0x6a>
 8002248:	683b      	ldr	r3, [r7, #0]
 800224a:	2b04      	cmp	r3, #4
 800224c:	d109      	bne.n	8002262 <HAL_TIM_PWM_Start+0x3e>
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002254:	b2db      	uxtb	r3, r3
 8002256:	2b01      	cmp	r3, #1
 8002258:	bf14      	ite	ne
 800225a:	2301      	movne	r3, #1
 800225c:	2300      	moveq	r3, #0
 800225e:	b2db      	uxtb	r3, r3
 8002260:	e015      	b.n	800228e <HAL_TIM_PWM_Start+0x6a>
 8002262:	683b      	ldr	r3, [r7, #0]
 8002264:	2b08      	cmp	r3, #8
 8002266:	d109      	bne.n	800227c <HAL_TIM_PWM_Start+0x58>
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800226e:	b2db      	uxtb	r3, r3
 8002270:	2b01      	cmp	r3, #1
 8002272:	bf14      	ite	ne
 8002274:	2301      	movne	r3, #1
 8002276:	2300      	moveq	r3, #0
 8002278:	b2db      	uxtb	r3, r3
 800227a:	e008      	b.n	800228e <HAL_TIM_PWM_Start+0x6a>
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002282:	b2db      	uxtb	r3, r3
 8002284:	2b01      	cmp	r3, #1
 8002286:	bf14      	ite	ne
 8002288:	2301      	movne	r3, #1
 800228a:	2300      	moveq	r3, #0
 800228c:	b2db      	uxtb	r3, r3
 800228e:	2b00      	cmp	r3, #0
 8002290:	d001      	beq.n	8002296 <HAL_TIM_PWM_Start+0x72>
 8002292:	2301      	movs	r3, #1
 8002294:	e059      	b.n	800234a <HAL_TIM_PWM_Start+0x126>
 8002296:	683b      	ldr	r3, [r7, #0]
 8002298:	2b00      	cmp	r3, #0
 800229a:	d104      	bne.n	80022a6 <HAL_TIM_PWM_Start+0x82>
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	2202      	movs	r2, #2
 80022a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80022a4:	e013      	b.n	80022ce <HAL_TIM_PWM_Start+0xaa>
 80022a6:	683b      	ldr	r3, [r7, #0]
 80022a8:	2b04      	cmp	r3, #4
 80022aa:	d104      	bne.n	80022b6 <HAL_TIM_PWM_Start+0x92>
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2202      	movs	r2, #2
 80022b0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80022b4:	e00b      	b.n	80022ce <HAL_TIM_PWM_Start+0xaa>
 80022b6:	683b      	ldr	r3, [r7, #0]
 80022b8:	2b08      	cmp	r3, #8
 80022ba:	d104      	bne.n	80022c6 <HAL_TIM_PWM_Start+0xa2>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	2202      	movs	r2, #2
 80022c0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80022c4:	e003      	b.n	80022ce <HAL_TIM_PWM_Start+0xaa>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	2202      	movs	r2, #2
 80022ca:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	2201      	movs	r2, #1
 80022d4:	6839      	ldr	r1, [r7, #0]
 80022d6:	4618      	mov	r0, r3
 80022d8:	f000 fc38 	bl	8002b4c <TIM_CCxChannelCmd>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	4a1c      	ldr	r2, [pc, #112]	; (8002354 <HAL_TIM_PWM_Start+0x130>)
 80022e2:	4293      	cmp	r3, r2
 80022e4:	d107      	bne.n	80022f6 <HAL_TIM_PWM_Start+0xd2>
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80022f4:	645a      	str	r2, [r3, #68]	; 0x44
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	4a16      	ldr	r2, [pc, #88]	; (8002354 <HAL_TIM_PWM_Start+0x130>)
 80022fc:	4293      	cmp	r3, r2
 80022fe:	d009      	beq.n	8002314 <HAL_TIM_PWM_Start+0xf0>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002308:	d004      	beq.n	8002314 <HAL_TIM_PWM_Start+0xf0>
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	4a12      	ldr	r2, [pc, #72]	; (8002358 <HAL_TIM_PWM_Start+0x134>)
 8002310:	4293      	cmp	r3, r2
 8002312:	d111      	bne.n	8002338 <HAL_TIM_PWM_Start+0x114>
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	689b      	ldr	r3, [r3, #8]
 800231a:	f003 0307 	and.w	r3, r3, #7
 800231e:	60fb      	str	r3, [r7, #12]
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	2b06      	cmp	r3, #6
 8002324:	d010      	beq.n	8002348 <HAL_TIM_PWM_Start+0x124>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	681a      	ldr	r2, [r3, #0]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	f042 0201 	orr.w	r2, r2, #1
 8002334:	601a      	str	r2, [r3, #0]
 8002336:	e007      	b.n	8002348 <HAL_TIM_PWM_Start+0x124>
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	681a      	ldr	r2, [r3, #0]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f042 0201 	orr.w	r2, r2, #1
 8002346:	601a      	str	r2, [r3, #0]
 8002348:	2300      	movs	r3, #0
 800234a:	4618      	mov	r0, r3
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}
 8002352:	bf00      	nop
 8002354:	40012c00 	.word	0x40012c00
 8002358:	40000400 	.word	0x40000400

0800235c <HAL_TIM_PWM_ConfigChannel>:
 800235c:	b580      	push	{r7, lr}
 800235e:	b084      	sub	sp, #16
 8002360:	af00      	add	r7, sp, #0
 8002362:	60f8      	str	r0, [r7, #12]
 8002364:	60b9      	str	r1, [r7, #8]
 8002366:	607a      	str	r2, [r7, #4]
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800236e:	2b01      	cmp	r3, #1
 8002370:	d101      	bne.n	8002376 <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002372:	2302      	movs	r3, #2
 8002374:	e0ac      	b.n	80024d0 <HAL_TIM_PWM_ConfigChannel+0x174>
 8002376:	68fb      	ldr	r3, [r7, #12]
 8002378:	2201      	movs	r2, #1
 800237a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	2b0c      	cmp	r3, #12
 8002382:	f200 809f 	bhi.w	80024c4 <HAL_TIM_PWM_ConfigChannel+0x168>
 8002386:	a201      	add	r2, pc, #4	; (adr r2, 800238c <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002388:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800238c:	080023c1 	.word	0x080023c1
 8002390:	080024c5 	.word	0x080024c5
 8002394:	080024c5 	.word	0x080024c5
 8002398:	080024c5 	.word	0x080024c5
 800239c:	08002401 	.word	0x08002401
 80023a0:	080024c5 	.word	0x080024c5
 80023a4:	080024c5 	.word	0x080024c5
 80023a8:	080024c5 	.word	0x080024c5
 80023ac:	08002443 	.word	0x08002443
 80023b0:	080024c5 	.word	0x080024c5
 80023b4:	080024c5 	.word	0x080024c5
 80023b8:	080024c5 	.word	0x080024c5
 80023bc:	08002483 	.word	0x08002483
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	68b9      	ldr	r1, [r7, #8]
 80023c6:	4618      	mov	r0, r3
 80023c8:	f000 f9a2 	bl	8002710 <TIM_OC1_SetConfig>
 80023cc:	68fb      	ldr	r3, [r7, #12]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	699a      	ldr	r2, [r3, #24]
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	f042 0208 	orr.w	r2, r2, #8
 80023da:	619a      	str	r2, [r3, #24]
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	699a      	ldr	r2, [r3, #24]
 80023e2:	68fb      	ldr	r3, [r7, #12]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	f022 0204 	bic.w	r2, r2, #4
 80023ea:	619a      	str	r2, [r3, #24]
 80023ec:	68fb      	ldr	r3, [r7, #12]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	6999      	ldr	r1, [r3, #24]
 80023f2:	68bb      	ldr	r3, [r7, #8]
 80023f4:	691a      	ldr	r2, [r3, #16]
 80023f6:	68fb      	ldr	r3, [r7, #12]
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	430a      	orrs	r2, r1
 80023fc:	619a      	str	r2, [r3, #24]
 80023fe:	e062      	b.n	80024c6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	68b9      	ldr	r1, [r7, #8]
 8002406:	4618      	mov	r0, r3
 8002408:	f000 f9e8 	bl	80027dc <TIM_OC2_SetConfig>
 800240c:	68fb      	ldr	r3, [r7, #12]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	699a      	ldr	r2, [r3, #24]
 8002412:	68fb      	ldr	r3, [r7, #12]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800241a:	619a      	str	r2, [r3, #24]
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	699a      	ldr	r2, [r3, #24]
 8002422:	68fb      	ldr	r3, [r7, #12]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800242a:	619a      	str	r2, [r3, #24]
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	6999      	ldr	r1, [r3, #24]
 8002432:	68bb      	ldr	r3, [r7, #8]
 8002434:	691b      	ldr	r3, [r3, #16]
 8002436:	021a      	lsls	r2, r3, #8
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	430a      	orrs	r2, r1
 800243e:	619a      	str	r2, [r3, #24]
 8002440:	e041      	b.n	80024c6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002442:	68fb      	ldr	r3, [r7, #12]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	68b9      	ldr	r1, [r7, #8]
 8002448:	4618      	mov	r0, r3
 800244a:	f000 fa31 	bl	80028b0 <TIM_OC3_SetConfig>
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	69da      	ldr	r2, [r3, #28]
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	f042 0208 	orr.w	r2, r2, #8
 800245c:	61da      	str	r2, [r3, #28]
 800245e:	68fb      	ldr	r3, [r7, #12]
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	69da      	ldr	r2, [r3, #28]
 8002464:	68fb      	ldr	r3, [r7, #12]
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	f022 0204 	bic.w	r2, r2, #4
 800246c:	61da      	str	r2, [r3, #28]
 800246e:	68fb      	ldr	r3, [r7, #12]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	69d9      	ldr	r1, [r3, #28]
 8002474:	68bb      	ldr	r3, [r7, #8]
 8002476:	691a      	ldr	r2, [r3, #16]
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	430a      	orrs	r2, r1
 800247e:	61da      	str	r2, [r3, #28]
 8002480:	e021      	b.n	80024c6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002482:	68fb      	ldr	r3, [r7, #12]
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	68b9      	ldr	r1, [r7, #8]
 8002488:	4618      	mov	r0, r3
 800248a:	f000 fa7b 	bl	8002984 <TIM_OC4_SetConfig>
 800248e:	68fb      	ldr	r3, [r7, #12]
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	69da      	ldr	r2, [r3, #28]
 8002494:	68fb      	ldr	r3, [r7, #12]
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800249c:	61da      	str	r2, [r3, #28]
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	69da      	ldr	r2, [r3, #28]
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80024ac:	61da      	str	r2, [r3, #28]
 80024ae:	68fb      	ldr	r3, [r7, #12]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	69d9      	ldr	r1, [r3, #28]
 80024b4:	68bb      	ldr	r3, [r7, #8]
 80024b6:	691b      	ldr	r3, [r3, #16]
 80024b8:	021a      	lsls	r2, r3, #8
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	430a      	orrs	r2, r1
 80024c0:	61da      	str	r2, [r3, #28]
 80024c2:	e000      	b.n	80024c6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80024c4:	bf00      	nop
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	2200      	movs	r2, #0
 80024ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024ce:	2300      	movs	r3, #0
 80024d0:	4618      	mov	r0, r3
 80024d2:	3710      	adds	r7, #16
 80024d4:	46bd      	mov	sp, r7
 80024d6:	bd80      	pop	{r7, pc}

080024d8 <HAL_TIM_ConfigClockSource>:
 80024d8:	b580      	push	{r7, lr}
 80024da:	b084      	sub	sp, #16
 80024dc:	af00      	add	r7, sp, #0
 80024de:	6078      	str	r0, [r7, #4]
 80024e0:	6039      	str	r1, [r7, #0]
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	d101      	bne.n	80024f0 <HAL_TIM_ConfigClockSource+0x18>
 80024ec:	2302      	movs	r3, #2
 80024ee:	e0b3      	b.n	8002658 <HAL_TIM_ConfigClockSource+0x180>
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	2201      	movs	r2, #1
 80024f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	2202      	movs	r2, #2
 80024fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	689b      	ldr	r3, [r3, #8]
 8002506:	60fb      	str	r3, [r7, #12]
 8002508:	68fb      	ldr	r3, [r7, #12]
 800250a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800250e:	60fb      	str	r3, [r7, #12]
 8002510:	68fb      	ldr	r3, [r7, #12]
 8002512:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002516:	60fb      	str	r3, [r7, #12]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	68fa      	ldr	r2, [r7, #12]
 800251e:	609a      	str	r2, [r3, #8]
 8002520:	683b      	ldr	r3, [r7, #0]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002528:	d03e      	beq.n	80025a8 <HAL_TIM_ConfigClockSource+0xd0>
 800252a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800252e:	f200 8087 	bhi.w	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002532:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002536:	f000 8085 	beq.w	8002644 <HAL_TIM_ConfigClockSource+0x16c>
 800253a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800253e:	d87f      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002540:	2b70      	cmp	r3, #112	; 0x70
 8002542:	d01a      	beq.n	800257a <HAL_TIM_ConfigClockSource+0xa2>
 8002544:	2b70      	cmp	r3, #112	; 0x70
 8002546:	d87b      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002548:	2b60      	cmp	r3, #96	; 0x60
 800254a:	d050      	beq.n	80025ee <HAL_TIM_ConfigClockSource+0x116>
 800254c:	2b60      	cmp	r3, #96	; 0x60
 800254e:	d877      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002550:	2b50      	cmp	r3, #80	; 0x50
 8002552:	d03c      	beq.n	80025ce <HAL_TIM_ConfigClockSource+0xf6>
 8002554:	2b50      	cmp	r3, #80	; 0x50
 8002556:	d873      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002558:	2b40      	cmp	r3, #64	; 0x40
 800255a:	d058      	beq.n	800260e <HAL_TIM_ConfigClockSource+0x136>
 800255c:	2b40      	cmp	r3, #64	; 0x40
 800255e:	d86f      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002560:	2b30      	cmp	r3, #48	; 0x30
 8002562:	d064      	beq.n	800262e <HAL_TIM_ConfigClockSource+0x156>
 8002564:	2b30      	cmp	r3, #48	; 0x30
 8002566:	d86b      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002568:	2b20      	cmp	r3, #32
 800256a:	d060      	beq.n	800262e <HAL_TIM_ConfigClockSource+0x156>
 800256c:	2b20      	cmp	r3, #32
 800256e:	d867      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 8002570:	2b00      	cmp	r3, #0
 8002572:	d05c      	beq.n	800262e <HAL_TIM_ConfigClockSource+0x156>
 8002574:	2b10      	cmp	r3, #16
 8002576:	d05a      	beq.n	800262e <HAL_TIM_ConfigClockSource+0x156>
 8002578:	e062      	b.n	8002640 <HAL_TIM_ConfigClockSource+0x168>
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	6818      	ldr	r0, [r3, #0]
 800257e:	683b      	ldr	r3, [r7, #0]
 8002580:	6899      	ldr	r1, [r3, #8]
 8002582:	683b      	ldr	r3, [r7, #0]
 8002584:	685a      	ldr	r2, [r3, #4]
 8002586:	683b      	ldr	r3, [r7, #0]
 8002588:	68db      	ldr	r3, [r3, #12]
 800258a:	f000 fac0 	bl	8002b0e <TIM_ETR_SetConfig>
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	689b      	ldr	r3, [r3, #8]
 8002594:	60fb      	str	r3, [r7, #12]
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800259c:	60fb      	str	r3, [r7, #12]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	68fa      	ldr	r2, [r7, #12]
 80025a4:	609a      	str	r2, [r3, #8]
 80025a6:	e04e      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	6818      	ldr	r0, [r3, #0]
 80025ac:	683b      	ldr	r3, [r7, #0]
 80025ae:	6899      	ldr	r1, [r3, #8]
 80025b0:	683b      	ldr	r3, [r7, #0]
 80025b2:	685a      	ldr	r2, [r3, #4]
 80025b4:	683b      	ldr	r3, [r7, #0]
 80025b6:	68db      	ldr	r3, [r3, #12]
 80025b8:	f000 faa9 	bl	8002b0e <TIM_ETR_SetConfig>
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	689a      	ldr	r2, [r3, #8]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80025ca:	609a      	str	r2, [r3, #8]
 80025cc:	e03b      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	6818      	ldr	r0, [r3, #0]
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	6859      	ldr	r1, [r3, #4]
 80025d6:	683b      	ldr	r3, [r7, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	461a      	mov	r2, r3
 80025dc:	f000 fa20 	bl	8002a20 <TIM_TI1_ConfigInputStage>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	2150      	movs	r1, #80	; 0x50
 80025e6:	4618      	mov	r0, r3
 80025e8:	f000 fa77 	bl	8002ada <TIM_ITRx_SetConfig>
 80025ec:	e02b      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	6818      	ldr	r0, [r3, #0]
 80025f2:	683b      	ldr	r3, [r7, #0]
 80025f4:	6859      	ldr	r1, [r3, #4]
 80025f6:	683b      	ldr	r3, [r7, #0]
 80025f8:	68db      	ldr	r3, [r3, #12]
 80025fa:	461a      	mov	r2, r3
 80025fc:	f000 fa3e 	bl	8002a7c <TIM_TI2_ConfigInputStage>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	2160      	movs	r1, #96	; 0x60
 8002606:	4618      	mov	r0, r3
 8002608:	f000 fa67 	bl	8002ada <TIM_ITRx_SetConfig>
 800260c:	e01b      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	6818      	ldr	r0, [r3, #0]
 8002612:	683b      	ldr	r3, [r7, #0]
 8002614:	6859      	ldr	r1, [r3, #4]
 8002616:	683b      	ldr	r3, [r7, #0]
 8002618:	68db      	ldr	r3, [r3, #12]
 800261a:	461a      	mov	r2, r3
 800261c:	f000 fa00 	bl	8002a20 <TIM_TI1_ConfigInputStage>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	2140      	movs	r1, #64	; 0x40
 8002626:	4618      	mov	r0, r3
 8002628:	f000 fa57 	bl	8002ada <TIM_ITRx_SetConfig>
 800262c:	e00b      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	681a      	ldr	r2, [r3, #0]
 8002632:	683b      	ldr	r3, [r7, #0]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	4619      	mov	r1, r3
 8002638:	4610      	mov	r0, r2
 800263a:	f000 fa4e 	bl	8002ada <TIM_ITRx_SetConfig>
 800263e:	e002      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 8002640:	bf00      	nop
 8002642:	e000      	b.n	8002646 <HAL_TIM_ConfigClockSource+0x16e>
 8002644:	bf00      	nop
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2201      	movs	r2, #1
 800264a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	2200      	movs	r2, #0
 8002652:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002656:	2300      	movs	r3, #0
 8002658:	4618      	mov	r0, r3
 800265a:	3710      	adds	r7, #16
 800265c:	46bd      	mov	sp, r7
 800265e:	bd80      	pop	{r7, pc}

08002660 <TIM_Base_SetConfig>:
 8002660:	b480      	push	{r7}
 8002662:	b085      	sub	sp, #20
 8002664:	af00      	add	r7, sp, #0
 8002666:	6078      	str	r0, [r7, #4]
 8002668:	6039      	str	r1, [r7, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	60fb      	str	r3, [r7, #12]
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	4a25      	ldr	r2, [pc, #148]	; (8002708 <TIM_Base_SetConfig+0xa8>)
 8002674:	4293      	cmp	r3, r2
 8002676:	d007      	beq.n	8002688 <TIM_Base_SetConfig+0x28>
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800267e:	d003      	beq.n	8002688 <TIM_Base_SetConfig+0x28>
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	4a22      	ldr	r2, [pc, #136]	; (800270c <TIM_Base_SetConfig+0xac>)
 8002684:	4293      	cmp	r3, r2
 8002686:	d108      	bne.n	800269a <TIM_Base_SetConfig+0x3a>
 8002688:	68fb      	ldr	r3, [r7, #12]
 800268a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800268e:	60fb      	str	r3, [r7, #12]
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	685b      	ldr	r3, [r3, #4]
 8002694:	68fa      	ldr	r2, [r7, #12]
 8002696:	4313      	orrs	r3, r2
 8002698:	60fb      	str	r3, [r7, #12]
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	4a1a      	ldr	r2, [pc, #104]	; (8002708 <TIM_Base_SetConfig+0xa8>)
 800269e:	4293      	cmp	r3, r2
 80026a0:	d007      	beq.n	80026b2 <TIM_Base_SetConfig+0x52>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80026a8:	d003      	beq.n	80026b2 <TIM_Base_SetConfig+0x52>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	4a17      	ldr	r2, [pc, #92]	; (800270c <TIM_Base_SetConfig+0xac>)
 80026ae:	4293      	cmp	r3, r2
 80026b0:	d108      	bne.n	80026c4 <TIM_Base_SetConfig+0x64>
 80026b2:	68fb      	ldr	r3, [r7, #12]
 80026b4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80026b8:	60fb      	str	r3, [r7, #12]
 80026ba:	683b      	ldr	r3, [r7, #0]
 80026bc:	68db      	ldr	r3, [r3, #12]
 80026be:	68fa      	ldr	r2, [r7, #12]
 80026c0:	4313      	orrs	r3, r2
 80026c2:	60fb      	str	r3, [r7, #12]
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80026ca:	683b      	ldr	r3, [r7, #0]
 80026cc:	695b      	ldr	r3, [r3, #20]
 80026ce:	4313      	orrs	r3, r2
 80026d0:	60fb      	str	r3, [r7, #12]
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	68fa      	ldr	r2, [r7, #12]
 80026d6:	601a      	str	r2, [r3, #0]
 80026d8:	683b      	ldr	r3, [r7, #0]
 80026da:	689a      	ldr	r2, [r3, #8]
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	62da      	str	r2, [r3, #44]	; 0x2c
 80026e0:	683b      	ldr	r3, [r7, #0]
 80026e2:	681a      	ldr	r2, [r3, #0]
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	629a      	str	r2, [r3, #40]	; 0x28
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	4a07      	ldr	r2, [pc, #28]	; (8002708 <TIM_Base_SetConfig+0xa8>)
 80026ec:	4293      	cmp	r3, r2
 80026ee:	d103      	bne.n	80026f8 <TIM_Base_SetConfig+0x98>
 80026f0:	683b      	ldr	r3, [r7, #0]
 80026f2:	691a      	ldr	r2, [r3, #16]
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	631a      	str	r2, [r3, #48]	; 0x30
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	2201      	movs	r2, #1
 80026fc:	615a      	str	r2, [r3, #20]
 80026fe:	bf00      	nop
 8002700:	3714      	adds	r7, #20
 8002702:	46bd      	mov	sp, r7
 8002704:	bc80      	pop	{r7}
 8002706:	4770      	bx	lr
 8002708:	40012c00 	.word	0x40012c00
 800270c:	40000400 	.word	0x40000400

08002710 <TIM_OC1_SetConfig>:
 8002710:	b480      	push	{r7}
 8002712:	b087      	sub	sp, #28
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	6039      	str	r1, [r7, #0]
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	6a1b      	ldr	r3, [r3, #32]
 800271e:	f023 0201 	bic.w	r2, r3, #1
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	621a      	str	r2, [r3, #32]
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	6a1b      	ldr	r3, [r3, #32]
 800272a:	617b      	str	r3, [r7, #20]
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	685b      	ldr	r3, [r3, #4]
 8002730:	613b      	str	r3, [r7, #16]
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	699b      	ldr	r3, [r3, #24]
 8002736:	60fb      	str	r3, [r7, #12]
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800273e:	60fb      	str	r3, [r7, #12]
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	f023 0303 	bic.w	r3, r3, #3
 8002746:	60fb      	str	r3, [r7, #12]
 8002748:	683b      	ldr	r3, [r7, #0]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	68fa      	ldr	r2, [r7, #12]
 800274e:	4313      	orrs	r3, r2
 8002750:	60fb      	str	r3, [r7, #12]
 8002752:	697b      	ldr	r3, [r7, #20]
 8002754:	f023 0302 	bic.w	r3, r3, #2
 8002758:	617b      	str	r3, [r7, #20]
 800275a:	683b      	ldr	r3, [r7, #0]
 800275c:	689b      	ldr	r3, [r3, #8]
 800275e:	697a      	ldr	r2, [r7, #20]
 8002760:	4313      	orrs	r3, r2
 8002762:	617b      	str	r3, [r7, #20]
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	4a1c      	ldr	r2, [pc, #112]	; (80027d8 <TIM_OC1_SetConfig+0xc8>)
 8002768:	4293      	cmp	r3, r2
 800276a:	d10c      	bne.n	8002786 <TIM_OC1_SetConfig+0x76>
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	f023 0308 	bic.w	r3, r3, #8
 8002772:	617b      	str	r3, [r7, #20]
 8002774:	683b      	ldr	r3, [r7, #0]
 8002776:	68db      	ldr	r3, [r3, #12]
 8002778:	697a      	ldr	r2, [r7, #20]
 800277a:	4313      	orrs	r3, r2
 800277c:	617b      	str	r3, [r7, #20]
 800277e:	697b      	ldr	r3, [r7, #20]
 8002780:	f023 0304 	bic.w	r3, r3, #4
 8002784:	617b      	str	r3, [r7, #20]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	4a13      	ldr	r2, [pc, #76]	; (80027d8 <TIM_OC1_SetConfig+0xc8>)
 800278a:	4293      	cmp	r3, r2
 800278c:	d111      	bne.n	80027b2 <TIM_OC1_SetConfig+0xa2>
 800278e:	693b      	ldr	r3, [r7, #16]
 8002790:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002794:	613b      	str	r3, [r7, #16]
 8002796:	693b      	ldr	r3, [r7, #16]
 8002798:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800279c:	613b      	str	r3, [r7, #16]
 800279e:	683b      	ldr	r3, [r7, #0]
 80027a0:	695b      	ldr	r3, [r3, #20]
 80027a2:	693a      	ldr	r2, [r7, #16]
 80027a4:	4313      	orrs	r3, r2
 80027a6:	613b      	str	r3, [r7, #16]
 80027a8:	683b      	ldr	r3, [r7, #0]
 80027aa:	699b      	ldr	r3, [r3, #24]
 80027ac:	693a      	ldr	r2, [r7, #16]
 80027ae:	4313      	orrs	r3, r2
 80027b0:	613b      	str	r3, [r7, #16]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	693a      	ldr	r2, [r7, #16]
 80027b6:	605a      	str	r2, [r3, #4]
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	68fa      	ldr	r2, [r7, #12]
 80027bc:	619a      	str	r2, [r3, #24]
 80027be:	683b      	ldr	r3, [r7, #0]
 80027c0:	685a      	ldr	r2, [r3, #4]
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	635a      	str	r2, [r3, #52]	; 0x34
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	697a      	ldr	r2, [r7, #20]
 80027ca:	621a      	str	r2, [r3, #32]
 80027cc:	bf00      	nop
 80027ce:	371c      	adds	r7, #28
 80027d0:	46bd      	mov	sp, r7
 80027d2:	bc80      	pop	{r7}
 80027d4:	4770      	bx	lr
 80027d6:	bf00      	nop
 80027d8:	40012c00 	.word	0x40012c00

080027dc <TIM_OC2_SetConfig>:
 80027dc:	b480      	push	{r7}
 80027de:	b087      	sub	sp, #28
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	6078      	str	r0, [r7, #4]
 80027e4:	6039      	str	r1, [r7, #0]
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	6a1b      	ldr	r3, [r3, #32]
 80027ea:	f023 0210 	bic.w	r2, r3, #16
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	621a      	str	r2, [r3, #32]
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	6a1b      	ldr	r3, [r3, #32]
 80027f6:	617b      	str	r3, [r7, #20]
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	685b      	ldr	r3, [r3, #4]
 80027fc:	613b      	str	r3, [r7, #16]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	699b      	ldr	r3, [r3, #24]
 8002802:	60fb      	str	r3, [r7, #12]
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800280a:	60fb      	str	r3, [r7, #12]
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002812:	60fb      	str	r3, [r7, #12]
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	021b      	lsls	r3, r3, #8
 800281a:	68fa      	ldr	r2, [r7, #12]
 800281c:	4313      	orrs	r3, r2
 800281e:	60fb      	str	r3, [r7, #12]
 8002820:	697b      	ldr	r3, [r7, #20]
 8002822:	f023 0320 	bic.w	r3, r3, #32
 8002826:	617b      	str	r3, [r7, #20]
 8002828:	683b      	ldr	r3, [r7, #0]
 800282a:	689b      	ldr	r3, [r3, #8]
 800282c:	011b      	lsls	r3, r3, #4
 800282e:	697a      	ldr	r2, [r7, #20]
 8002830:	4313      	orrs	r3, r2
 8002832:	617b      	str	r3, [r7, #20]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	4a1d      	ldr	r2, [pc, #116]	; (80028ac <TIM_OC2_SetConfig+0xd0>)
 8002838:	4293      	cmp	r3, r2
 800283a:	d10d      	bne.n	8002858 <TIM_OC2_SetConfig+0x7c>
 800283c:	697b      	ldr	r3, [r7, #20]
 800283e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002842:	617b      	str	r3, [r7, #20]
 8002844:	683b      	ldr	r3, [r7, #0]
 8002846:	68db      	ldr	r3, [r3, #12]
 8002848:	011b      	lsls	r3, r3, #4
 800284a:	697a      	ldr	r2, [r7, #20]
 800284c:	4313      	orrs	r3, r2
 800284e:	617b      	str	r3, [r7, #20]
 8002850:	697b      	ldr	r3, [r7, #20]
 8002852:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002856:	617b      	str	r3, [r7, #20]
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	4a14      	ldr	r2, [pc, #80]	; (80028ac <TIM_OC2_SetConfig+0xd0>)
 800285c:	4293      	cmp	r3, r2
 800285e:	d113      	bne.n	8002888 <TIM_OC2_SetConfig+0xac>
 8002860:	693b      	ldr	r3, [r7, #16]
 8002862:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002866:	613b      	str	r3, [r7, #16]
 8002868:	693b      	ldr	r3, [r7, #16]
 800286a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800286e:	613b      	str	r3, [r7, #16]
 8002870:	683b      	ldr	r3, [r7, #0]
 8002872:	695b      	ldr	r3, [r3, #20]
 8002874:	009b      	lsls	r3, r3, #2
 8002876:	693a      	ldr	r2, [r7, #16]
 8002878:	4313      	orrs	r3, r2
 800287a:	613b      	str	r3, [r7, #16]
 800287c:	683b      	ldr	r3, [r7, #0]
 800287e:	699b      	ldr	r3, [r3, #24]
 8002880:	009b      	lsls	r3, r3, #2
 8002882:	693a      	ldr	r2, [r7, #16]
 8002884:	4313      	orrs	r3, r2
 8002886:	613b      	str	r3, [r7, #16]
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	693a      	ldr	r2, [r7, #16]
 800288c:	605a      	str	r2, [r3, #4]
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	68fa      	ldr	r2, [r7, #12]
 8002892:	619a      	str	r2, [r3, #24]
 8002894:	683b      	ldr	r3, [r7, #0]
 8002896:	685a      	ldr	r2, [r3, #4]
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	639a      	str	r2, [r3, #56]	; 0x38
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	697a      	ldr	r2, [r7, #20]
 80028a0:	621a      	str	r2, [r3, #32]
 80028a2:	bf00      	nop
 80028a4:	371c      	adds	r7, #28
 80028a6:	46bd      	mov	sp, r7
 80028a8:	bc80      	pop	{r7}
 80028aa:	4770      	bx	lr
 80028ac:	40012c00 	.word	0x40012c00

080028b0 <TIM_OC3_SetConfig>:
 80028b0:	b480      	push	{r7}
 80028b2:	b087      	sub	sp, #28
 80028b4:	af00      	add	r7, sp, #0
 80028b6:	6078      	str	r0, [r7, #4]
 80028b8:	6039      	str	r1, [r7, #0]
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	6a1b      	ldr	r3, [r3, #32]
 80028be:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	621a      	str	r2, [r3, #32]
 80028c6:	687b      	ldr	r3, [r7, #4]
 80028c8:	6a1b      	ldr	r3, [r3, #32]
 80028ca:	617b      	str	r3, [r7, #20]
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	685b      	ldr	r3, [r3, #4]
 80028d0:	613b      	str	r3, [r7, #16]
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	69db      	ldr	r3, [r3, #28]
 80028d6:	60fb      	str	r3, [r7, #12]
 80028d8:	68fb      	ldr	r3, [r7, #12]
 80028da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80028de:	60fb      	str	r3, [r7, #12]
 80028e0:	68fb      	ldr	r3, [r7, #12]
 80028e2:	f023 0303 	bic.w	r3, r3, #3
 80028e6:	60fb      	str	r3, [r7, #12]
 80028e8:	683b      	ldr	r3, [r7, #0]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	68fa      	ldr	r2, [r7, #12]
 80028ee:	4313      	orrs	r3, r2
 80028f0:	60fb      	str	r3, [r7, #12]
 80028f2:	697b      	ldr	r3, [r7, #20]
 80028f4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80028f8:	617b      	str	r3, [r7, #20]
 80028fa:	683b      	ldr	r3, [r7, #0]
 80028fc:	689b      	ldr	r3, [r3, #8]
 80028fe:	021b      	lsls	r3, r3, #8
 8002900:	697a      	ldr	r2, [r7, #20]
 8002902:	4313      	orrs	r3, r2
 8002904:	617b      	str	r3, [r7, #20]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	4a1d      	ldr	r2, [pc, #116]	; (8002980 <TIM_OC3_SetConfig+0xd0>)
 800290a:	4293      	cmp	r3, r2
 800290c:	d10d      	bne.n	800292a <TIM_OC3_SetConfig+0x7a>
 800290e:	697b      	ldr	r3, [r7, #20]
 8002910:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002914:	617b      	str	r3, [r7, #20]
 8002916:	683b      	ldr	r3, [r7, #0]
 8002918:	68db      	ldr	r3, [r3, #12]
 800291a:	021b      	lsls	r3, r3, #8
 800291c:	697a      	ldr	r2, [r7, #20]
 800291e:	4313      	orrs	r3, r2
 8002920:	617b      	str	r3, [r7, #20]
 8002922:	697b      	ldr	r3, [r7, #20]
 8002924:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002928:	617b      	str	r3, [r7, #20]
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	4a14      	ldr	r2, [pc, #80]	; (8002980 <TIM_OC3_SetConfig+0xd0>)
 800292e:	4293      	cmp	r3, r2
 8002930:	d113      	bne.n	800295a <TIM_OC3_SetConfig+0xaa>
 8002932:	693b      	ldr	r3, [r7, #16]
 8002934:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002938:	613b      	str	r3, [r7, #16]
 800293a:	693b      	ldr	r3, [r7, #16]
 800293c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002940:	613b      	str	r3, [r7, #16]
 8002942:	683b      	ldr	r3, [r7, #0]
 8002944:	695b      	ldr	r3, [r3, #20]
 8002946:	011b      	lsls	r3, r3, #4
 8002948:	693a      	ldr	r2, [r7, #16]
 800294a:	4313      	orrs	r3, r2
 800294c:	613b      	str	r3, [r7, #16]
 800294e:	683b      	ldr	r3, [r7, #0]
 8002950:	699b      	ldr	r3, [r3, #24]
 8002952:	011b      	lsls	r3, r3, #4
 8002954:	693a      	ldr	r2, [r7, #16]
 8002956:	4313      	orrs	r3, r2
 8002958:	613b      	str	r3, [r7, #16]
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	693a      	ldr	r2, [r7, #16]
 800295e:	605a      	str	r2, [r3, #4]
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	68fa      	ldr	r2, [r7, #12]
 8002964:	61da      	str	r2, [r3, #28]
 8002966:	683b      	ldr	r3, [r7, #0]
 8002968:	685a      	ldr	r2, [r3, #4]
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	63da      	str	r2, [r3, #60]	; 0x3c
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	697a      	ldr	r2, [r7, #20]
 8002972:	621a      	str	r2, [r3, #32]
 8002974:	bf00      	nop
 8002976:	371c      	adds	r7, #28
 8002978:	46bd      	mov	sp, r7
 800297a:	bc80      	pop	{r7}
 800297c:	4770      	bx	lr
 800297e:	bf00      	nop
 8002980:	40012c00 	.word	0x40012c00

08002984 <TIM_OC4_SetConfig>:
 8002984:	b480      	push	{r7}
 8002986:	b087      	sub	sp, #28
 8002988:	af00      	add	r7, sp, #0
 800298a:	6078      	str	r0, [r7, #4]
 800298c:	6039      	str	r1, [r7, #0]
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	6a1b      	ldr	r3, [r3, #32]
 8002992:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	621a      	str	r2, [r3, #32]
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	6a1b      	ldr	r3, [r3, #32]
 800299e:	613b      	str	r3, [r7, #16]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	685b      	ldr	r3, [r3, #4]
 80029a4:	617b      	str	r3, [r7, #20]
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	69db      	ldr	r3, [r3, #28]
 80029aa:	60fb      	str	r3, [r7, #12]
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80029b2:	60fb      	str	r3, [r7, #12]
 80029b4:	68fb      	ldr	r3, [r7, #12]
 80029b6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80029ba:	60fb      	str	r3, [r7, #12]
 80029bc:	683b      	ldr	r3, [r7, #0]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	021b      	lsls	r3, r3, #8
 80029c2:	68fa      	ldr	r2, [r7, #12]
 80029c4:	4313      	orrs	r3, r2
 80029c6:	60fb      	str	r3, [r7, #12]
 80029c8:	693b      	ldr	r3, [r7, #16]
 80029ca:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80029ce:	613b      	str	r3, [r7, #16]
 80029d0:	683b      	ldr	r3, [r7, #0]
 80029d2:	689b      	ldr	r3, [r3, #8]
 80029d4:	031b      	lsls	r3, r3, #12
 80029d6:	693a      	ldr	r2, [r7, #16]
 80029d8:	4313      	orrs	r3, r2
 80029da:	613b      	str	r3, [r7, #16]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	4a0f      	ldr	r2, [pc, #60]	; (8002a1c <TIM_OC4_SetConfig+0x98>)
 80029e0:	4293      	cmp	r3, r2
 80029e2:	d109      	bne.n	80029f8 <TIM_OC4_SetConfig+0x74>
 80029e4:	697b      	ldr	r3, [r7, #20]
 80029e6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80029ea:	617b      	str	r3, [r7, #20]
 80029ec:	683b      	ldr	r3, [r7, #0]
 80029ee:	695b      	ldr	r3, [r3, #20]
 80029f0:	019b      	lsls	r3, r3, #6
 80029f2:	697a      	ldr	r2, [r7, #20]
 80029f4:	4313      	orrs	r3, r2
 80029f6:	617b      	str	r3, [r7, #20]
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	697a      	ldr	r2, [r7, #20]
 80029fc:	605a      	str	r2, [r3, #4]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	68fa      	ldr	r2, [r7, #12]
 8002a02:	61da      	str	r2, [r3, #28]
 8002a04:	683b      	ldr	r3, [r7, #0]
 8002a06:	685a      	ldr	r2, [r3, #4]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	641a      	str	r2, [r3, #64]	; 0x40
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	693a      	ldr	r2, [r7, #16]
 8002a10:	621a      	str	r2, [r3, #32]
 8002a12:	bf00      	nop
 8002a14:	371c      	adds	r7, #28
 8002a16:	46bd      	mov	sp, r7
 8002a18:	bc80      	pop	{r7}
 8002a1a:	4770      	bx	lr
 8002a1c:	40012c00 	.word	0x40012c00

08002a20 <TIM_TI1_ConfigInputStage>:
 8002a20:	b480      	push	{r7}
 8002a22:	b087      	sub	sp, #28
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	60f8      	str	r0, [r7, #12]
 8002a28:	60b9      	str	r1, [r7, #8]
 8002a2a:	607a      	str	r2, [r7, #4]
 8002a2c:	68fb      	ldr	r3, [r7, #12]
 8002a2e:	6a1b      	ldr	r3, [r3, #32]
 8002a30:	617b      	str	r3, [r7, #20]
 8002a32:	68fb      	ldr	r3, [r7, #12]
 8002a34:	6a1b      	ldr	r3, [r3, #32]
 8002a36:	f023 0201 	bic.w	r2, r3, #1
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	621a      	str	r2, [r3, #32]
 8002a3e:	68fb      	ldr	r3, [r7, #12]
 8002a40:	699b      	ldr	r3, [r3, #24]
 8002a42:	613b      	str	r3, [r7, #16]
 8002a44:	693b      	ldr	r3, [r7, #16]
 8002a46:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002a4a:	613b      	str	r3, [r7, #16]
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	011b      	lsls	r3, r3, #4
 8002a50:	693a      	ldr	r2, [r7, #16]
 8002a52:	4313      	orrs	r3, r2
 8002a54:	613b      	str	r3, [r7, #16]
 8002a56:	697b      	ldr	r3, [r7, #20]
 8002a58:	f023 030a 	bic.w	r3, r3, #10
 8002a5c:	617b      	str	r3, [r7, #20]
 8002a5e:	697a      	ldr	r2, [r7, #20]
 8002a60:	68bb      	ldr	r3, [r7, #8]
 8002a62:	4313      	orrs	r3, r2
 8002a64:	617b      	str	r3, [r7, #20]
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	693a      	ldr	r2, [r7, #16]
 8002a6a:	619a      	str	r2, [r3, #24]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	697a      	ldr	r2, [r7, #20]
 8002a70:	621a      	str	r2, [r3, #32]
 8002a72:	bf00      	nop
 8002a74:	371c      	adds	r7, #28
 8002a76:	46bd      	mov	sp, r7
 8002a78:	bc80      	pop	{r7}
 8002a7a:	4770      	bx	lr

08002a7c <TIM_TI2_ConfigInputStage>:
 8002a7c:	b480      	push	{r7}
 8002a7e:	b087      	sub	sp, #28
 8002a80:	af00      	add	r7, sp, #0
 8002a82:	60f8      	str	r0, [r7, #12]
 8002a84:	60b9      	str	r1, [r7, #8]
 8002a86:	607a      	str	r2, [r7, #4]
 8002a88:	68fb      	ldr	r3, [r7, #12]
 8002a8a:	6a1b      	ldr	r3, [r3, #32]
 8002a8c:	f023 0210 	bic.w	r2, r3, #16
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	621a      	str	r2, [r3, #32]
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	699b      	ldr	r3, [r3, #24]
 8002a98:	617b      	str	r3, [r7, #20]
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	6a1b      	ldr	r3, [r3, #32]
 8002a9e:	613b      	str	r3, [r7, #16]
 8002aa0:	697b      	ldr	r3, [r7, #20]
 8002aa2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002aa6:	617b      	str	r3, [r7, #20]
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	031b      	lsls	r3, r3, #12
 8002aac:	697a      	ldr	r2, [r7, #20]
 8002aae:	4313      	orrs	r3, r2
 8002ab0:	617b      	str	r3, [r7, #20]
 8002ab2:	693b      	ldr	r3, [r7, #16]
 8002ab4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002ab8:	613b      	str	r3, [r7, #16]
 8002aba:	68bb      	ldr	r3, [r7, #8]
 8002abc:	011b      	lsls	r3, r3, #4
 8002abe:	693a      	ldr	r2, [r7, #16]
 8002ac0:	4313      	orrs	r3, r2
 8002ac2:	613b      	str	r3, [r7, #16]
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	697a      	ldr	r2, [r7, #20]
 8002ac8:	619a      	str	r2, [r3, #24]
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	693a      	ldr	r2, [r7, #16]
 8002ace:	621a      	str	r2, [r3, #32]
 8002ad0:	bf00      	nop
 8002ad2:	371c      	adds	r7, #28
 8002ad4:	46bd      	mov	sp, r7
 8002ad6:	bc80      	pop	{r7}
 8002ad8:	4770      	bx	lr

08002ada <TIM_ITRx_SetConfig>:
 8002ada:	b480      	push	{r7}
 8002adc:	b085      	sub	sp, #20
 8002ade:	af00      	add	r7, sp, #0
 8002ae0:	6078      	str	r0, [r7, #4]
 8002ae2:	6039      	str	r1, [r7, #0]
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	689b      	ldr	r3, [r3, #8]
 8002ae8:	60fb      	str	r3, [r7, #12]
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002af0:	60fb      	str	r3, [r7, #12]
 8002af2:	683a      	ldr	r2, [r7, #0]
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	4313      	orrs	r3, r2
 8002af8:	f043 0307 	orr.w	r3, r3, #7
 8002afc:	60fb      	str	r3, [r7, #12]
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	68fa      	ldr	r2, [r7, #12]
 8002b02:	609a      	str	r2, [r3, #8]
 8002b04:	bf00      	nop
 8002b06:	3714      	adds	r7, #20
 8002b08:	46bd      	mov	sp, r7
 8002b0a:	bc80      	pop	{r7}
 8002b0c:	4770      	bx	lr

08002b0e <TIM_ETR_SetConfig>:
 8002b0e:	b480      	push	{r7}
 8002b10:	b087      	sub	sp, #28
 8002b12:	af00      	add	r7, sp, #0
 8002b14:	60f8      	str	r0, [r7, #12]
 8002b16:	60b9      	str	r1, [r7, #8]
 8002b18:	607a      	str	r2, [r7, #4]
 8002b1a:	603b      	str	r3, [r7, #0]
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	689b      	ldr	r3, [r3, #8]
 8002b20:	617b      	str	r3, [r7, #20]
 8002b22:	697b      	ldr	r3, [r7, #20]
 8002b24:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002b28:	617b      	str	r3, [r7, #20]
 8002b2a:	683b      	ldr	r3, [r7, #0]
 8002b2c:	021a      	lsls	r2, r3, #8
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	431a      	orrs	r2, r3
 8002b32:	68bb      	ldr	r3, [r7, #8]
 8002b34:	4313      	orrs	r3, r2
 8002b36:	697a      	ldr	r2, [r7, #20]
 8002b38:	4313      	orrs	r3, r2
 8002b3a:	617b      	str	r3, [r7, #20]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	697a      	ldr	r2, [r7, #20]
 8002b40:	609a      	str	r2, [r3, #8]
 8002b42:	bf00      	nop
 8002b44:	371c      	adds	r7, #28
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bc80      	pop	{r7}
 8002b4a:	4770      	bx	lr

08002b4c <TIM_CCxChannelCmd>:
 8002b4c:	b480      	push	{r7}
 8002b4e:	b087      	sub	sp, #28
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	60f8      	str	r0, [r7, #12]
 8002b54:	60b9      	str	r1, [r7, #8]
 8002b56:	607a      	str	r2, [r7, #4]
 8002b58:	68bb      	ldr	r3, [r7, #8]
 8002b5a:	f003 031f 	and.w	r3, r3, #31
 8002b5e:	2201      	movs	r2, #1
 8002b60:	fa02 f303 	lsl.w	r3, r2, r3
 8002b64:	617b      	str	r3, [r7, #20]
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	6a1a      	ldr	r2, [r3, #32]
 8002b6a:	697b      	ldr	r3, [r7, #20]
 8002b6c:	43db      	mvns	r3, r3
 8002b6e:	401a      	ands	r2, r3
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	621a      	str	r2, [r3, #32]
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	6a1a      	ldr	r2, [r3, #32]
 8002b78:	68bb      	ldr	r3, [r7, #8]
 8002b7a:	f003 031f 	and.w	r3, r3, #31
 8002b7e:	6879      	ldr	r1, [r7, #4]
 8002b80:	fa01 f303 	lsl.w	r3, r1, r3
 8002b84:	431a      	orrs	r2, r3
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	621a      	str	r2, [r3, #32]
 8002b8a:	bf00      	nop
 8002b8c:	371c      	adds	r7, #28
 8002b8e:	46bd      	mov	sp, r7
 8002b90:	bc80      	pop	{r7}
 8002b92:	4770      	bx	lr

08002b94 <HAL_TIMEx_MasterConfigSynchronization>:
 8002b94:	b480      	push	{r7}
 8002b96:	b085      	sub	sp, #20
 8002b98:	af00      	add	r7, sp, #0
 8002b9a:	6078      	str	r0, [r7, #4]
 8002b9c:	6039      	str	r1, [r7, #0]
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002ba4:	2b01      	cmp	r3, #1
 8002ba6:	d101      	bne.n	8002bac <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002ba8:	2302      	movs	r3, #2
 8002baa:	e041      	b.n	8002c30 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	2201      	movs	r2, #1
 8002bb0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	2202      	movs	r2, #2
 8002bb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	685b      	ldr	r3, [r3, #4]
 8002bc2:	60fb      	str	r3, [r7, #12]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	689b      	ldr	r3, [r3, #8]
 8002bca:	60bb      	str	r3, [r7, #8]
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002bd2:	60fb      	str	r3, [r7, #12]
 8002bd4:	683b      	ldr	r3, [r7, #0]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	68fa      	ldr	r2, [r7, #12]
 8002bda:	4313      	orrs	r3, r2
 8002bdc:	60fb      	str	r3, [r7, #12]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	68fa      	ldr	r2, [r7, #12]
 8002be4:	605a      	str	r2, [r3, #4]
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	4a14      	ldr	r2, [pc, #80]	; (8002c3c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002bec:	4293      	cmp	r3, r2
 8002bee:	d009      	beq.n	8002c04 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bf8:	d004      	beq.n	8002c04 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	4a10      	ldr	r2, [pc, #64]	; (8002c40 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8002c00:	4293      	cmp	r3, r2
 8002c02:	d10c      	bne.n	8002c1e <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002c04:	68bb      	ldr	r3, [r7, #8]
 8002c06:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002c0a:	60bb      	str	r3, [r7, #8]
 8002c0c:	683b      	ldr	r3, [r7, #0]
 8002c0e:	685b      	ldr	r3, [r3, #4]
 8002c10:	68ba      	ldr	r2, [r7, #8]
 8002c12:	4313      	orrs	r3, r2
 8002c14:	60bb      	str	r3, [r7, #8]
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	68ba      	ldr	r2, [r7, #8]
 8002c1c:	609a      	str	r2, [r3, #8]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	2201      	movs	r2, #1
 8002c22:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2200      	movs	r2, #0
 8002c2a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c2e:	2300      	movs	r3, #0
 8002c30:	4618      	mov	r0, r3
 8002c32:	3714      	adds	r7, #20
 8002c34:	46bd      	mov	sp, r7
 8002c36:	bc80      	pop	{r7}
 8002c38:	4770      	bx	lr
 8002c3a:	bf00      	nop
 8002c3c:	40012c00 	.word	0x40012c00
 8002c40:	40000400 	.word	0x40000400

08002c44 <HAL_TIMEx_ConfigBreakDeadTime>:
 8002c44:	b480      	push	{r7}
 8002c46:	b085      	sub	sp, #20
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]
 8002c4c:	6039      	str	r1, [r7, #0]
 8002c4e:	2300      	movs	r3, #0
 8002c50:	60fb      	str	r3, [r7, #12]
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c58:	2b01      	cmp	r3, #1
 8002c5a:	d101      	bne.n	8002c60 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8002c5c:	2302      	movs	r3, #2
 8002c5e:	e03d      	b.n	8002cdc <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	2201      	movs	r2, #1
 8002c64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8002c6e:	683b      	ldr	r3, [r7, #0]
 8002c70:	68db      	ldr	r3, [r3, #12]
 8002c72:	4313      	orrs	r3, r2
 8002c74:	60fb      	str	r3, [r7, #12]
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002c7c:	683b      	ldr	r3, [r7, #0]
 8002c7e:	689b      	ldr	r3, [r3, #8]
 8002c80:	4313      	orrs	r3, r2
 8002c82:	60fb      	str	r3, [r7, #12]
 8002c84:	68fb      	ldr	r3, [r7, #12]
 8002c86:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8002c8a:	683b      	ldr	r3, [r7, #0]
 8002c8c:	685b      	ldr	r3, [r3, #4]
 8002c8e:	4313      	orrs	r3, r2
 8002c90:	60fb      	str	r3, [r7, #12]
 8002c92:	68fb      	ldr	r3, [r7, #12]
 8002c94:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8002c98:	683b      	ldr	r3, [r7, #0]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4313      	orrs	r3, r2
 8002c9e:	60fb      	str	r3, [r7, #12]
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8002ca6:	683b      	ldr	r3, [r7, #0]
 8002ca8:	691b      	ldr	r3, [r3, #16]
 8002caa:	4313      	orrs	r3, r2
 8002cac:	60fb      	str	r3, [r7, #12]
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	695b      	ldr	r3, [r3, #20]
 8002cb8:	4313      	orrs	r3, r2
 8002cba:	60fb      	str	r3, [r7, #12]
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8002cc2:	683b      	ldr	r3, [r7, #0]
 8002cc4:	69db      	ldr	r3, [r3, #28]
 8002cc6:	4313      	orrs	r3, r2
 8002cc8:	60fb      	str	r3, [r7, #12]
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	68fa      	ldr	r2, [r7, #12]
 8002cd0:	645a      	str	r2, [r3, #68]	; 0x44
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	2200      	movs	r2, #0
 8002cd6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002cda:	2300      	movs	r3, #0
 8002cdc:	4618      	mov	r0, r3
 8002cde:	3714      	adds	r7, #20
 8002ce0:	46bd      	mov	sp, r7
 8002ce2:	bc80      	pop	{r7}
 8002ce4:	4770      	bx	lr

08002ce6 <HAL_UART_Init>:
 8002ce6:	b580      	push	{r7, lr}
 8002ce8:	b082      	sub	sp, #8
 8002cea:	af00      	add	r7, sp, #0
 8002cec:	6078      	str	r0, [r7, #4]
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d101      	bne.n	8002cf8 <HAL_UART_Init+0x12>
 8002cf4:	2301      	movs	r3, #1
 8002cf6:	e03f      	b.n	8002d78 <HAL_UART_Init+0x92>
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002cfe:	b2db      	uxtb	r3, r3
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d106      	bne.n	8002d12 <HAL_UART_Init+0x2c>
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	2200      	movs	r2, #0
 8002d08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d0c:	6878      	ldr	r0, [r7, #4]
 8002d0e:	f7fe f80b 	bl	8000d28 <HAL_UART_MspInit>
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	2224      	movs	r2, #36	; 0x24
 8002d16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	68da      	ldr	r2, [r3, #12]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002d28:	60da      	str	r2, [r3, #12]
 8002d2a:	6878      	ldr	r0, [r7, #4]
 8002d2c:	f000 fc84 	bl	8003638 <UART_SetConfig>
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	691a      	ldr	r2, [r3, #16]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002d3e:	611a      	str	r2, [r3, #16]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	695a      	ldr	r2, [r3, #20]
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002d4e:	615a      	str	r2, [r3, #20]
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	68da      	ldr	r2, [r3, #12]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002d5e:	60da      	str	r2, [r3, #12]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	2200      	movs	r2, #0
 8002d64:	641a      	str	r2, [r3, #64]	; 0x40
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	2220      	movs	r2, #32
 8002d6a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	2220      	movs	r2, #32
 8002d72:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d76:	2300      	movs	r3, #0
 8002d78:	4618      	mov	r0, r3
 8002d7a:	3708      	adds	r7, #8
 8002d7c:	46bd      	mov	sp, r7
 8002d7e:	bd80      	pop	{r7, pc}

08002d80 <HAL_UART_Transmit>:
 8002d80:	b580      	push	{r7, lr}
 8002d82:	b08a      	sub	sp, #40	; 0x28
 8002d84:	af02      	add	r7, sp, #8
 8002d86:	60f8      	str	r0, [r7, #12]
 8002d88:	60b9      	str	r1, [r7, #8]
 8002d8a:	603b      	str	r3, [r7, #0]
 8002d8c:	4613      	mov	r3, r2
 8002d8e:	80fb      	strh	r3, [r7, #6]
 8002d90:	2300      	movs	r3, #0
 8002d92:	617b      	str	r3, [r7, #20]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002d9a:	b2db      	uxtb	r3, r3
 8002d9c:	2b20      	cmp	r3, #32
 8002d9e:	d17c      	bne.n	8002e9a <HAL_UART_Transmit+0x11a>
 8002da0:	68bb      	ldr	r3, [r7, #8]
 8002da2:	2b00      	cmp	r3, #0
 8002da4:	d002      	beq.n	8002dac <HAL_UART_Transmit+0x2c>
 8002da6:	88fb      	ldrh	r3, [r7, #6]
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	d101      	bne.n	8002db0 <HAL_UART_Transmit+0x30>
 8002dac:	2301      	movs	r3, #1
 8002dae:	e075      	b.n	8002e9c <HAL_UART_Transmit+0x11c>
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002db6:	2b01      	cmp	r3, #1
 8002db8:	d101      	bne.n	8002dbe <HAL_UART_Transmit+0x3e>
 8002dba:	2302      	movs	r3, #2
 8002dbc:	e06e      	b.n	8002e9c <HAL_UART_Transmit+0x11c>
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	2201      	movs	r2, #1
 8002dc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	2200      	movs	r2, #0
 8002dca:	641a      	str	r2, [r3, #64]	; 0x40
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	2221      	movs	r2, #33	; 0x21
 8002dd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002dd4:	f7fe f8aa 	bl	8000f2c <HAL_GetTick>
 8002dd8:	6178      	str	r0, [r7, #20]
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	88fa      	ldrh	r2, [r7, #6]
 8002dde:	849a      	strh	r2, [r3, #36]	; 0x24
 8002de0:	68fb      	ldr	r3, [r7, #12]
 8002de2:	88fa      	ldrh	r2, [r7, #6]
 8002de4:	84da      	strh	r2, [r3, #38]	; 0x26
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002dee:	d108      	bne.n	8002e02 <HAL_UART_Transmit+0x82>
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	691b      	ldr	r3, [r3, #16]
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d104      	bne.n	8002e02 <HAL_UART_Transmit+0x82>
 8002df8:	2300      	movs	r3, #0
 8002dfa:	61fb      	str	r3, [r7, #28]
 8002dfc:	68bb      	ldr	r3, [r7, #8]
 8002dfe:	61bb      	str	r3, [r7, #24]
 8002e00:	e003      	b.n	8002e0a <HAL_UART_Transmit+0x8a>
 8002e02:	68bb      	ldr	r3, [r7, #8]
 8002e04:	61fb      	str	r3, [r7, #28]
 8002e06:	2300      	movs	r3, #0
 8002e08:	61bb      	str	r3, [r7, #24]
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	2200      	movs	r2, #0
 8002e0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e12:	e02a      	b.n	8002e6a <HAL_UART_Transmit+0xea>
 8002e14:	683b      	ldr	r3, [r7, #0]
 8002e16:	9300      	str	r3, [sp, #0]
 8002e18:	697b      	ldr	r3, [r7, #20]
 8002e1a:	2200      	movs	r2, #0
 8002e1c:	2180      	movs	r1, #128	; 0x80
 8002e1e:	68f8      	ldr	r0, [r7, #12]
 8002e20:	f000 fa37 	bl	8003292 <UART_WaitOnFlagUntilTimeout>
 8002e24:	4603      	mov	r3, r0
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d001      	beq.n	8002e2e <HAL_UART_Transmit+0xae>
 8002e2a:	2303      	movs	r3, #3
 8002e2c:	e036      	b.n	8002e9c <HAL_UART_Transmit+0x11c>
 8002e2e:	69fb      	ldr	r3, [r7, #28]
 8002e30:	2b00      	cmp	r3, #0
 8002e32:	d10b      	bne.n	8002e4c <HAL_UART_Transmit+0xcc>
 8002e34:	69bb      	ldr	r3, [r7, #24]
 8002e36:	881b      	ldrh	r3, [r3, #0]
 8002e38:	461a      	mov	r2, r3
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002e42:	605a      	str	r2, [r3, #4]
 8002e44:	69bb      	ldr	r3, [r7, #24]
 8002e46:	3302      	adds	r3, #2
 8002e48:	61bb      	str	r3, [r7, #24]
 8002e4a:	e007      	b.n	8002e5c <HAL_UART_Transmit+0xdc>
 8002e4c:	69fb      	ldr	r3, [r7, #28]
 8002e4e:	781a      	ldrb	r2, [r3, #0]
 8002e50:	68fb      	ldr	r3, [r7, #12]
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	605a      	str	r2, [r3, #4]
 8002e56:	69fb      	ldr	r3, [r7, #28]
 8002e58:	3301      	adds	r3, #1
 8002e5a:	61fb      	str	r3, [r7, #28]
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002e60:	b29b      	uxth	r3, r3
 8002e62:	3b01      	subs	r3, #1
 8002e64:	b29a      	uxth	r2, r3
 8002e66:	68fb      	ldr	r3, [r7, #12]
 8002e68:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002e6e:	b29b      	uxth	r3, r3
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d1cf      	bne.n	8002e14 <HAL_UART_Transmit+0x94>
 8002e74:	683b      	ldr	r3, [r7, #0]
 8002e76:	9300      	str	r3, [sp, #0]
 8002e78:	697b      	ldr	r3, [r7, #20]
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	2140      	movs	r1, #64	; 0x40
 8002e7e:	68f8      	ldr	r0, [r7, #12]
 8002e80:	f000 fa07 	bl	8003292 <UART_WaitOnFlagUntilTimeout>
 8002e84:	4603      	mov	r3, r0
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d001      	beq.n	8002e8e <HAL_UART_Transmit+0x10e>
 8002e8a:	2303      	movs	r3, #3
 8002e8c:	e006      	b.n	8002e9c <HAL_UART_Transmit+0x11c>
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	2220      	movs	r2, #32
 8002e92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e96:	2300      	movs	r3, #0
 8002e98:	e000      	b.n	8002e9c <HAL_UART_Transmit+0x11c>
 8002e9a:	2302      	movs	r3, #2
 8002e9c:	4618      	mov	r0, r3
 8002e9e:	3720      	adds	r7, #32
 8002ea0:	46bd      	mov	sp, r7
 8002ea2:	bd80      	pop	{r7, pc}

08002ea4 <HAL_UART_Receive_IT>:
 8002ea4:	b580      	push	{r7, lr}
 8002ea6:	b084      	sub	sp, #16
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	60f8      	str	r0, [r7, #12]
 8002eac:	60b9      	str	r1, [r7, #8]
 8002eae:	4613      	mov	r3, r2
 8002eb0:	80fb      	strh	r3, [r7, #6]
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002eb8:	b2db      	uxtb	r3, r3
 8002eba:	2b20      	cmp	r3, #32
 8002ebc:	d11d      	bne.n	8002efa <HAL_UART_Receive_IT+0x56>
 8002ebe:	68bb      	ldr	r3, [r7, #8]
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	d002      	beq.n	8002eca <HAL_UART_Receive_IT+0x26>
 8002ec4:	88fb      	ldrh	r3, [r7, #6]
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	d101      	bne.n	8002ece <HAL_UART_Receive_IT+0x2a>
 8002eca:	2301      	movs	r3, #1
 8002ecc:	e016      	b.n	8002efc <HAL_UART_Receive_IT+0x58>
 8002ece:	68fb      	ldr	r3, [r7, #12]
 8002ed0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002ed4:	2b01      	cmp	r3, #1
 8002ed6:	d101      	bne.n	8002edc <HAL_UART_Receive_IT+0x38>
 8002ed8:	2302      	movs	r3, #2
 8002eda:	e00f      	b.n	8002efc <HAL_UART_Receive_IT+0x58>
 8002edc:	68fb      	ldr	r3, [r7, #12]
 8002ede:	2201      	movs	r2, #1
 8002ee0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	2200      	movs	r2, #0
 8002ee8:	631a      	str	r2, [r3, #48]	; 0x30
 8002eea:	88fb      	ldrh	r3, [r7, #6]
 8002eec:	461a      	mov	r2, r3
 8002eee:	68b9      	ldr	r1, [r7, #8]
 8002ef0:	68f8      	ldr	r0, [r7, #12]
 8002ef2:	f000 fa18 	bl	8003326 <UART_Start_Receive_IT>
 8002ef6:	4603      	mov	r3, r0
 8002ef8:	e000      	b.n	8002efc <HAL_UART_Receive_IT+0x58>
 8002efa:	2302      	movs	r3, #2
 8002efc:	4618      	mov	r0, r3
 8002efe:	3710      	adds	r7, #16
 8002f00:	46bd      	mov	sp, r7
 8002f02:	bd80      	pop	{r7, pc}

08002f04 <HAL_UART_IRQHandler>:
 8002f04:	b580      	push	{r7, lr}
 8002f06:	b08a      	sub	sp, #40	; 0x28
 8002f08:	af00      	add	r7, sp, #0
 8002f0a:	6078      	str	r0, [r7, #4]
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	627b      	str	r3, [r7, #36]	; 0x24
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	68db      	ldr	r3, [r3, #12]
 8002f1a:	623b      	str	r3, [r7, #32]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	695b      	ldr	r3, [r3, #20]
 8002f22:	61fb      	str	r3, [r7, #28]
 8002f24:	2300      	movs	r3, #0
 8002f26:	61bb      	str	r3, [r7, #24]
 8002f28:	2300      	movs	r3, #0
 8002f2a:	617b      	str	r3, [r7, #20]
 8002f2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f2e:	f003 030f 	and.w	r3, r3, #15
 8002f32:	61bb      	str	r3, [r7, #24]
 8002f34:	69bb      	ldr	r3, [r7, #24]
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d10d      	bne.n	8002f56 <HAL_UART_IRQHandler+0x52>
 8002f3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f3c:	f003 0320 	and.w	r3, r3, #32
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	d008      	beq.n	8002f56 <HAL_UART_IRQHandler+0x52>
 8002f44:	6a3b      	ldr	r3, [r7, #32]
 8002f46:	f003 0320 	and.w	r3, r3, #32
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d003      	beq.n	8002f56 <HAL_UART_IRQHandler+0x52>
 8002f4e:	6878      	ldr	r0, [r7, #4]
 8002f50:	f000 fac9 	bl	80034e6 <UART_Receive_IT>
 8002f54:	e17b      	b.n	800324e <HAL_UART_IRQHandler+0x34a>
 8002f56:	69bb      	ldr	r3, [r7, #24]
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	f000 80b1 	beq.w	80030c0 <HAL_UART_IRQHandler+0x1bc>
 8002f5e:	69fb      	ldr	r3, [r7, #28]
 8002f60:	f003 0301 	and.w	r3, r3, #1
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d105      	bne.n	8002f74 <HAL_UART_IRQHandler+0x70>
 8002f68:	6a3b      	ldr	r3, [r7, #32]
 8002f6a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	f000 80a6 	beq.w	80030c0 <HAL_UART_IRQHandler+0x1bc>
 8002f74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f76:	f003 0301 	and.w	r3, r3, #1
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d00a      	beq.n	8002f94 <HAL_UART_IRQHandler+0x90>
 8002f7e:	6a3b      	ldr	r3, [r7, #32]
 8002f80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d005      	beq.n	8002f94 <HAL_UART_IRQHandler+0x90>
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f8c:	f043 0201 	orr.w	r2, r3, #1
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	641a      	str	r2, [r3, #64]	; 0x40
 8002f94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f96:	f003 0304 	and.w	r3, r3, #4
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d00a      	beq.n	8002fb4 <HAL_UART_IRQHandler+0xb0>
 8002f9e:	69fb      	ldr	r3, [r7, #28]
 8002fa0:	f003 0301 	and.w	r3, r3, #1
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d005      	beq.n	8002fb4 <HAL_UART_IRQHandler+0xb0>
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fac:	f043 0202 	orr.w	r2, r3, #2
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	641a      	str	r2, [r3, #64]	; 0x40
 8002fb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fb6:	f003 0302 	and.w	r3, r3, #2
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d00a      	beq.n	8002fd4 <HAL_UART_IRQHandler+0xd0>
 8002fbe:	69fb      	ldr	r3, [r7, #28]
 8002fc0:	f003 0301 	and.w	r3, r3, #1
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d005      	beq.n	8002fd4 <HAL_UART_IRQHandler+0xd0>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fcc:	f043 0204 	orr.w	r2, r3, #4
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	641a      	str	r2, [r3, #64]	; 0x40
 8002fd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fd6:	f003 0308 	and.w	r3, r3, #8
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d00f      	beq.n	8002ffe <HAL_UART_IRQHandler+0xfa>
 8002fde:	6a3b      	ldr	r3, [r7, #32]
 8002fe0:	f003 0320 	and.w	r3, r3, #32
 8002fe4:	2b00      	cmp	r3, #0
 8002fe6:	d104      	bne.n	8002ff2 <HAL_UART_IRQHandler+0xee>
 8002fe8:	69fb      	ldr	r3, [r7, #28]
 8002fea:	f003 0301 	and.w	r3, r3, #1
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d005      	beq.n	8002ffe <HAL_UART_IRQHandler+0xfa>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ff6:	f043 0208 	orr.w	r2, r3, #8
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	641a      	str	r2, [r3, #64]	; 0x40
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003002:	2b00      	cmp	r3, #0
 8003004:	f000 811e 	beq.w	8003244 <HAL_UART_IRQHandler+0x340>
 8003008:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800300a:	f003 0320 	and.w	r3, r3, #32
 800300e:	2b00      	cmp	r3, #0
 8003010:	d007      	beq.n	8003022 <HAL_UART_IRQHandler+0x11e>
 8003012:	6a3b      	ldr	r3, [r7, #32]
 8003014:	f003 0320 	and.w	r3, r3, #32
 8003018:	2b00      	cmp	r3, #0
 800301a:	d002      	beq.n	8003022 <HAL_UART_IRQHandler+0x11e>
 800301c:	6878      	ldr	r0, [r7, #4]
 800301e:	f000 fa62 	bl	80034e6 <UART_Receive_IT>
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	695b      	ldr	r3, [r3, #20]
 8003028:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800302c:	2b00      	cmp	r3, #0
 800302e:	bf14      	ite	ne
 8003030:	2301      	movne	r3, #1
 8003032:	2300      	moveq	r3, #0
 8003034:	b2db      	uxtb	r3, r3
 8003036:	617b      	str	r3, [r7, #20]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800303c:	f003 0308 	and.w	r3, r3, #8
 8003040:	2b00      	cmp	r3, #0
 8003042:	d102      	bne.n	800304a <HAL_UART_IRQHandler+0x146>
 8003044:	697b      	ldr	r3, [r7, #20]
 8003046:	2b00      	cmp	r3, #0
 8003048:	d031      	beq.n	80030ae <HAL_UART_IRQHandler+0x1aa>
 800304a:	6878      	ldr	r0, [r7, #4]
 800304c:	f000 f9a4 	bl	8003398 <UART_EndRxTransfer>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	695b      	ldr	r3, [r3, #20]
 8003056:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800305a:	2b00      	cmp	r3, #0
 800305c:	d023      	beq.n	80030a6 <HAL_UART_IRQHandler+0x1a2>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	695a      	ldr	r2, [r3, #20]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800306c:	615a      	str	r2, [r3, #20]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003072:	2b00      	cmp	r3, #0
 8003074:	d013      	beq.n	800309e <HAL_UART_IRQHandler+0x19a>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800307a:	4a76      	ldr	r2, [pc, #472]	; (8003254 <HAL_UART_IRQHandler+0x350>)
 800307c:	635a      	str	r2, [r3, #52]	; 0x34
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003082:	4618      	mov	r0, r3
 8003084:	f7fe f8fe 	bl	8001284 <HAL_DMA_Abort_IT>
 8003088:	4603      	mov	r3, r0
 800308a:	2b00      	cmp	r3, #0
 800308c:	d016      	beq.n	80030bc <HAL_UART_IRQHandler+0x1b8>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003092:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003094:	687a      	ldr	r2, [r7, #4]
 8003096:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003098:	4610      	mov	r0, r2
 800309a:	4798      	blx	r3
 800309c:	e00e      	b.n	80030bc <HAL_UART_IRQHandler+0x1b8>
 800309e:	6878      	ldr	r0, [r7, #4]
 80030a0:	f000 f8e3 	bl	800326a <HAL_UART_ErrorCallback>
 80030a4:	e00a      	b.n	80030bc <HAL_UART_IRQHandler+0x1b8>
 80030a6:	6878      	ldr	r0, [r7, #4]
 80030a8:	f000 f8df 	bl	800326a <HAL_UART_ErrorCallback>
 80030ac:	e006      	b.n	80030bc <HAL_UART_IRQHandler+0x1b8>
 80030ae:	6878      	ldr	r0, [r7, #4]
 80030b0:	f000 f8db 	bl	800326a <HAL_UART_ErrorCallback>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	2200      	movs	r2, #0
 80030b8:	641a      	str	r2, [r3, #64]	; 0x40
 80030ba:	e0c3      	b.n	8003244 <HAL_UART_IRQHandler+0x340>
 80030bc:	bf00      	nop
 80030be:	e0c1      	b.n	8003244 <HAL_UART_IRQHandler+0x340>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030c4:	2b01      	cmp	r3, #1
 80030c6:	f040 80a1 	bne.w	800320c <HAL_UART_IRQHandler+0x308>
 80030ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030cc:	f003 0310 	and.w	r3, r3, #16
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	f000 809b 	beq.w	800320c <HAL_UART_IRQHandler+0x308>
 80030d6:	6a3b      	ldr	r3, [r7, #32]
 80030d8:	f003 0310 	and.w	r3, r3, #16
 80030dc:	2b00      	cmp	r3, #0
 80030de:	f000 8095 	beq.w	800320c <HAL_UART_IRQHandler+0x308>
 80030e2:	2300      	movs	r3, #0
 80030e4:	60fb      	str	r3, [r7, #12]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	60fb      	str	r3, [r7, #12]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	685b      	ldr	r3, [r3, #4]
 80030f4:	60fb      	str	r3, [r7, #12]
 80030f6:	68fb      	ldr	r3, [r7, #12]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	695b      	ldr	r3, [r3, #20]
 80030fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003102:	2b00      	cmp	r3, #0
 8003104:	d04e      	beq.n	80031a4 <HAL_UART_IRQHandler+0x2a0>
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	685b      	ldr	r3, [r3, #4]
 800310e:	823b      	strh	r3, [r7, #16]
 8003110:	8a3b      	ldrh	r3, [r7, #16]
 8003112:	2b00      	cmp	r3, #0
 8003114:	f000 8098 	beq.w	8003248 <HAL_UART_IRQHandler+0x344>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800311c:	8a3a      	ldrh	r2, [r7, #16]
 800311e:	429a      	cmp	r2, r3
 8003120:	f080 8092 	bcs.w	8003248 <HAL_UART_IRQHandler+0x344>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	8a3a      	ldrh	r2, [r7, #16]
 8003128:	85da      	strh	r2, [r3, #46]	; 0x2e
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800312e:	699b      	ldr	r3, [r3, #24]
 8003130:	2b20      	cmp	r3, #32
 8003132:	d02b      	beq.n	800318c <HAL_UART_IRQHandler+0x288>
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	68da      	ldr	r2, [r3, #12]
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003142:	60da      	str	r2, [r3, #12]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	695a      	ldr	r2, [r3, #20]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	f022 0201 	bic.w	r2, r2, #1
 8003152:	615a      	str	r2, [r3, #20]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	695a      	ldr	r2, [r3, #20]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003162:	615a      	str	r2, [r3, #20]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	2220      	movs	r2, #32
 8003168:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	2200      	movs	r2, #0
 8003170:	631a      	str	r2, [r3, #48]	; 0x30
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	68da      	ldr	r2, [r3, #12]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	f022 0210 	bic.w	r2, r2, #16
 8003180:	60da      	str	r2, [r3, #12]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003186:	4618      	mov	r0, r3
 8003188:	f7fe f842 	bl	8001210 <HAL_DMA_Abort>
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003194:	b29b      	uxth	r3, r3
 8003196:	1ad3      	subs	r3, r2, r3
 8003198:	b29b      	uxth	r3, r3
 800319a:	4619      	mov	r1, r3
 800319c:	6878      	ldr	r0, [r7, #4]
 800319e:	f000 f86d 	bl	800327c <HAL_UARTEx_RxEventCallback>
 80031a2:	e051      	b.n	8003248 <HAL_UART_IRQHandler+0x344>
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80031ac:	b29b      	uxth	r3, r3
 80031ae:	1ad3      	subs	r3, r2, r3
 80031b0:	827b      	strh	r3, [r7, #18]
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80031b6:	b29b      	uxth	r3, r3
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d047      	beq.n	800324c <HAL_UART_IRQHandler+0x348>
 80031bc:	8a7b      	ldrh	r3, [r7, #18]
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d044      	beq.n	800324c <HAL_UART_IRQHandler+0x348>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	68da      	ldr	r2, [r3, #12]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80031d0:	60da      	str	r2, [r3, #12]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	695a      	ldr	r2, [r3, #20]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f022 0201 	bic.w	r2, r2, #1
 80031e0:	615a      	str	r2, [r3, #20]
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	2220      	movs	r2, #32
 80031e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	2200      	movs	r2, #0
 80031ee:	631a      	str	r2, [r3, #48]	; 0x30
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	68da      	ldr	r2, [r3, #12]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	f022 0210 	bic.w	r2, r2, #16
 80031fe:	60da      	str	r2, [r3, #12]
 8003200:	8a7b      	ldrh	r3, [r7, #18]
 8003202:	4619      	mov	r1, r3
 8003204:	6878      	ldr	r0, [r7, #4]
 8003206:	f000 f839 	bl	800327c <HAL_UARTEx_RxEventCallback>
 800320a:	e01f      	b.n	800324c <HAL_UART_IRQHandler+0x348>
 800320c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800320e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003212:	2b00      	cmp	r3, #0
 8003214:	d008      	beq.n	8003228 <HAL_UART_IRQHandler+0x324>
 8003216:	6a3b      	ldr	r3, [r7, #32]
 8003218:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800321c:	2b00      	cmp	r3, #0
 800321e:	d003      	beq.n	8003228 <HAL_UART_IRQHandler+0x324>
 8003220:	6878      	ldr	r0, [r7, #4]
 8003222:	f000 f8f9 	bl	8003418 <UART_Transmit_IT>
 8003226:	e012      	b.n	800324e <HAL_UART_IRQHandler+0x34a>
 8003228:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800322a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800322e:	2b00      	cmp	r3, #0
 8003230:	d00d      	beq.n	800324e <HAL_UART_IRQHandler+0x34a>
 8003232:	6a3b      	ldr	r3, [r7, #32]
 8003234:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003238:	2b00      	cmp	r3, #0
 800323a:	d008      	beq.n	800324e <HAL_UART_IRQHandler+0x34a>
 800323c:	6878      	ldr	r0, [r7, #4]
 800323e:	f000 f93a 	bl	80034b6 <UART_EndTransmit_IT>
 8003242:	e004      	b.n	800324e <HAL_UART_IRQHandler+0x34a>
 8003244:	bf00      	nop
 8003246:	e002      	b.n	800324e <HAL_UART_IRQHandler+0x34a>
 8003248:	bf00      	nop
 800324a:	e000      	b.n	800324e <HAL_UART_IRQHandler+0x34a>
 800324c:	bf00      	nop
 800324e:	3728      	adds	r7, #40	; 0x28
 8003250:	46bd      	mov	sp, r7
 8003252:	bd80      	pop	{r7, pc}
 8003254:	080033f1 	.word	0x080033f1

08003258 <HAL_UART_TxCpltCallback>:
 8003258:	b480      	push	{r7}
 800325a:	b083      	sub	sp, #12
 800325c:	af00      	add	r7, sp, #0
 800325e:	6078      	str	r0, [r7, #4]
 8003260:	bf00      	nop
 8003262:	370c      	adds	r7, #12
 8003264:	46bd      	mov	sp, r7
 8003266:	bc80      	pop	{r7}
 8003268:	4770      	bx	lr

0800326a <HAL_UART_ErrorCallback>:
 800326a:	b480      	push	{r7}
 800326c:	b083      	sub	sp, #12
 800326e:	af00      	add	r7, sp, #0
 8003270:	6078      	str	r0, [r7, #4]
 8003272:	bf00      	nop
 8003274:	370c      	adds	r7, #12
 8003276:	46bd      	mov	sp, r7
 8003278:	bc80      	pop	{r7}
 800327a:	4770      	bx	lr

0800327c <HAL_UARTEx_RxEventCallback>:
 800327c:	b480      	push	{r7}
 800327e:	b083      	sub	sp, #12
 8003280:	af00      	add	r7, sp, #0
 8003282:	6078      	str	r0, [r7, #4]
 8003284:	460b      	mov	r3, r1
 8003286:	807b      	strh	r3, [r7, #2]
 8003288:	bf00      	nop
 800328a:	370c      	adds	r7, #12
 800328c:	46bd      	mov	sp, r7
 800328e:	bc80      	pop	{r7}
 8003290:	4770      	bx	lr

08003292 <UART_WaitOnFlagUntilTimeout>:
 8003292:	b580      	push	{r7, lr}
 8003294:	b084      	sub	sp, #16
 8003296:	af00      	add	r7, sp, #0
 8003298:	60f8      	str	r0, [r7, #12]
 800329a:	60b9      	str	r1, [r7, #8]
 800329c:	603b      	str	r3, [r7, #0]
 800329e:	4613      	mov	r3, r2
 80032a0:	71fb      	strb	r3, [r7, #7]
 80032a2:	e02c      	b.n	80032fe <UART_WaitOnFlagUntilTimeout+0x6c>
 80032a4:	69bb      	ldr	r3, [r7, #24]
 80032a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80032aa:	d028      	beq.n	80032fe <UART_WaitOnFlagUntilTimeout+0x6c>
 80032ac:	69bb      	ldr	r3, [r7, #24]
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d007      	beq.n	80032c2 <UART_WaitOnFlagUntilTimeout+0x30>
 80032b2:	f7fd fe3b 	bl	8000f2c <HAL_GetTick>
 80032b6:	4602      	mov	r2, r0
 80032b8:	683b      	ldr	r3, [r7, #0]
 80032ba:	1ad3      	subs	r3, r2, r3
 80032bc:	69ba      	ldr	r2, [r7, #24]
 80032be:	429a      	cmp	r2, r3
 80032c0:	d21d      	bcs.n	80032fe <UART_WaitOnFlagUntilTimeout+0x6c>
 80032c2:	68fb      	ldr	r3, [r7, #12]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	68da      	ldr	r2, [r3, #12]
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80032d0:	60da      	str	r2, [r3, #12]
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	695a      	ldr	r2, [r3, #20]
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	f022 0201 	bic.w	r2, r2, #1
 80032e0:	615a      	str	r2, [r3, #20]
 80032e2:	68fb      	ldr	r3, [r7, #12]
 80032e4:	2220      	movs	r2, #32
 80032e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80032ea:	68fb      	ldr	r3, [r7, #12]
 80032ec:	2220      	movs	r2, #32
 80032ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	2200      	movs	r2, #0
 80032f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80032fa:	2303      	movs	r3, #3
 80032fc:	e00f      	b.n	800331e <UART_WaitOnFlagUntilTimeout+0x8c>
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	681a      	ldr	r2, [r3, #0]
 8003304:	68bb      	ldr	r3, [r7, #8]
 8003306:	4013      	ands	r3, r2
 8003308:	68ba      	ldr	r2, [r7, #8]
 800330a:	429a      	cmp	r2, r3
 800330c:	bf0c      	ite	eq
 800330e:	2301      	moveq	r3, #1
 8003310:	2300      	movne	r3, #0
 8003312:	b2db      	uxtb	r3, r3
 8003314:	461a      	mov	r2, r3
 8003316:	79fb      	ldrb	r3, [r7, #7]
 8003318:	429a      	cmp	r2, r3
 800331a:	d0c3      	beq.n	80032a4 <UART_WaitOnFlagUntilTimeout+0x12>
 800331c:	2300      	movs	r3, #0
 800331e:	4618      	mov	r0, r3
 8003320:	3710      	adds	r7, #16
 8003322:	46bd      	mov	sp, r7
 8003324:	bd80      	pop	{r7, pc}

08003326 <UART_Start_Receive_IT>:
 8003326:	b480      	push	{r7}
 8003328:	b085      	sub	sp, #20
 800332a:	af00      	add	r7, sp, #0
 800332c:	60f8      	str	r0, [r7, #12]
 800332e:	60b9      	str	r1, [r7, #8]
 8003330:	4613      	mov	r3, r2
 8003332:	80fb      	strh	r3, [r7, #6]
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	68ba      	ldr	r2, [r7, #8]
 8003338:	629a      	str	r2, [r3, #40]	; 0x28
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	88fa      	ldrh	r2, [r7, #6]
 800333e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	88fa      	ldrh	r2, [r7, #6]
 8003344:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003346:	68fb      	ldr	r3, [r7, #12]
 8003348:	2200      	movs	r2, #0
 800334a:	641a      	str	r2, [r3, #64]	; 0x40
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	2222      	movs	r2, #34	; 0x22
 8003350:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	2200      	movs	r2, #0
 8003358:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	68da      	ldr	r2, [r3, #12]
 8003362:	68fb      	ldr	r3, [r7, #12]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800336a:	60da      	str	r2, [r3, #12]
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	695a      	ldr	r2, [r3, #20]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	f042 0201 	orr.w	r2, r2, #1
 800337a:	615a      	str	r2, [r3, #20]
 800337c:	68fb      	ldr	r3, [r7, #12]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	68da      	ldr	r2, [r3, #12]
 8003382:	68fb      	ldr	r3, [r7, #12]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	f042 0220 	orr.w	r2, r2, #32
 800338a:	60da      	str	r2, [r3, #12]
 800338c:	2300      	movs	r3, #0
 800338e:	4618      	mov	r0, r3
 8003390:	3714      	adds	r7, #20
 8003392:	46bd      	mov	sp, r7
 8003394:	bc80      	pop	{r7}
 8003396:	4770      	bx	lr

08003398 <UART_EndRxTransfer>:
 8003398:	b480      	push	{r7}
 800339a:	b083      	sub	sp, #12
 800339c:	af00      	add	r7, sp, #0
 800339e:	6078      	str	r0, [r7, #4]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	68da      	ldr	r2, [r3, #12]
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80033ae:	60da      	str	r2, [r3, #12]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	695a      	ldr	r2, [r3, #20]
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	f022 0201 	bic.w	r2, r2, #1
 80033be:	615a      	str	r2, [r3, #20]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033c4:	2b01      	cmp	r3, #1
 80033c6:	d107      	bne.n	80033d8 <UART_EndRxTransfer+0x40>
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	68da      	ldr	r2, [r3, #12]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	f022 0210 	bic.w	r2, r2, #16
 80033d6:	60da      	str	r2, [r3, #12]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	2220      	movs	r2, #32
 80033dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	2200      	movs	r2, #0
 80033e4:	631a      	str	r2, [r3, #48]	; 0x30
 80033e6:	bf00      	nop
 80033e8:	370c      	adds	r7, #12
 80033ea:	46bd      	mov	sp, r7
 80033ec:	bc80      	pop	{r7}
 80033ee:	4770      	bx	lr

080033f0 <UART_DMAAbortOnError>:
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b084      	sub	sp, #16
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033fc:	60fb      	str	r3, [r7, #12]
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	2200      	movs	r2, #0
 8003402:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	2200      	movs	r2, #0
 8003408:	84da      	strh	r2, [r3, #38]	; 0x26
 800340a:	68f8      	ldr	r0, [r7, #12]
 800340c:	f7ff ff2d 	bl	800326a <HAL_UART_ErrorCallback>
 8003410:	bf00      	nop
 8003412:	3710      	adds	r7, #16
 8003414:	46bd      	mov	sp, r7
 8003416:	bd80      	pop	{r7, pc}

08003418 <UART_Transmit_IT>:
 8003418:	b480      	push	{r7}
 800341a:	b085      	sub	sp, #20
 800341c:	af00      	add	r7, sp, #0
 800341e:	6078      	str	r0, [r7, #4]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003426:	b2db      	uxtb	r3, r3
 8003428:	2b21      	cmp	r3, #33	; 0x21
 800342a:	d13e      	bne.n	80034aa <UART_Transmit_IT+0x92>
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	689b      	ldr	r3, [r3, #8]
 8003430:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003434:	d114      	bne.n	8003460 <UART_Transmit_IT+0x48>
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	691b      	ldr	r3, [r3, #16]
 800343a:	2b00      	cmp	r3, #0
 800343c:	d110      	bne.n	8003460 <UART_Transmit_IT+0x48>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	6a1b      	ldr	r3, [r3, #32]
 8003442:	60fb      	str	r3, [r7, #12]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	881b      	ldrh	r3, [r3, #0]
 8003448:	461a      	mov	r2, r3
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003452:	605a      	str	r2, [r3, #4]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	6a1b      	ldr	r3, [r3, #32]
 8003458:	1c9a      	adds	r2, r3, #2
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	621a      	str	r2, [r3, #32]
 800345e:	e008      	b.n	8003472 <UART_Transmit_IT+0x5a>
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	6a1b      	ldr	r3, [r3, #32]
 8003464:	1c59      	adds	r1, r3, #1
 8003466:	687a      	ldr	r2, [r7, #4]
 8003468:	6211      	str	r1, [r2, #32]
 800346a:	781a      	ldrb	r2, [r3, #0]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	605a      	str	r2, [r3, #4]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003476:	b29b      	uxth	r3, r3
 8003478:	3b01      	subs	r3, #1
 800347a:	b29b      	uxth	r3, r3
 800347c:	687a      	ldr	r2, [r7, #4]
 800347e:	4619      	mov	r1, r3
 8003480:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003482:	2b00      	cmp	r3, #0
 8003484:	d10f      	bne.n	80034a6 <UART_Transmit_IT+0x8e>
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	68da      	ldr	r2, [r3, #12]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003494:	60da      	str	r2, [r3, #12]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	68da      	ldr	r2, [r3, #12]
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80034a4:	60da      	str	r2, [r3, #12]
 80034a6:	2300      	movs	r3, #0
 80034a8:	e000      	b.n	80034ac <UART_Transmit_IT+0x94>
 80034aa:	2302      	movs	r3, #2
 80034ac:	4618      	mov	r0, r3
 80034ae:	3714      	adds	r7, #20
 80034b0:	46bd      	mov	sp, r7
 80034b2:	bc80      	pop	{r7}
 80034b4:	4770      	bx	lr

080034b6 <UART_EndTransmit_IT>:
 80034b6:	b580      	push	{r7, lr}
 80034b8:	b082      	sub	sp, #8
 80034ba:	af00      	add	r7, sp, #0
 80034bc:	6078      	str	r0, [r7, #4]
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	68da      	ldr	r2, [r3, #12]
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80034cc:	60da      	str	r2, [r3, #12]
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	2220      	movs	r2, #32
 80034d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034d6:	6878      	ldr	r0, [r7, #4]
 80034d8:	f7ff febe 	bl	8003258 <HAL_UART_TxCpltCallback>
 80034dc:	2300      	movs	r3, #0
 80034de:	4618      	mov	r0, r3
 80034e0:	3708      	adds	r7, #8
 80034e2:	46bd      	mov	sp, r7
 80034e4:	bd80      	pop	{r7, pc}

080034e6 <UART_Receive_IT>:
 80034e6:	b580      	push	{r7, lr}
 80034e8:	b086      	sub	sp, #24
 80034ea:	af00      	add	r7, sp, #0
 80034ec:	6078      	str	r0, [r7, #4]
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80034f4:	b2db      	uxtb	r3, r3
 80034f6:	2b22      	cmp	r3, #34	; 0x22
 80034f8:	f040 8099 	bne.w	800362e <UART_Receive_IT+0x148>
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	689b      	ldr	r3, [r3, #8]
 8003500:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003504:	d117      	bne.n	8003536 <UART_Receive_IT+0x50>
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	691b      	ldr	r3, [r3, #16]
 800350a:	2b00      	cmp	r3, #0
 800350c:	d113      	bne.n	8003536 <UART_Receive_IT+0x50>
 800350e:	2300      	movs	r3, #0
 8003510:	617b      	str	r3, [r7, #20]
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003516:	613b      	str	r3, [r7, #16]
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	685b      	ldr	r3, [r3, #4]
 800351e:	b29b      	uxth	r3, r3
 8003520:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003524:	b29a      	uxth	r2, r3
 8003526:	693b      	ldr	r3, [r7, #16]
 8003528:	801a      	strh	r2, [r3, #0]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800352e:	1c9a      	adds	r2, r3, #2
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	629a      	str	r2, [r3, #40]	; 0x28
 8003534:	e026      	b.n	8003584 <UART_Receive_IT+0x9e>
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800353a:	617b      	str	r3, [r7, #20]
 800353c:	2300      	movs	r3, #0
 800353e:	613b      	str	r3, [r7, #16]
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	689b      	ldr	r3, [r3, #8]
 8003544:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003548:	d007      	beq.n	800355a <UART_Receive_IT+0x74>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	689b      	ldr	r3, [r3, #8]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d10a      	bne.n	8003568 <UART_Receive_IT+0x82>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	691b      	ldr	r3, [r3, #16]
 8003556:	2b00      	cmp	r3, #0
 8003558:	d106      	bne.n	8003568 <UART_Receive_IT+0x82>
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	685b      	ldr	r3, [r3, #4]
 8003560:	b2da      	uxtb	r2, r3
 8003562:	697b      	ldr	r3, [r7, #20]
 8003564:	701a      	strb	r2, [r3, #0]
 8003566:	e008      	b.n	800357a <UART_Receive_IT+0x94>
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	685b      	ldr	r3, [r3, #4]
 800356e:	b2db      	uxtb	r3, r3
 8003570:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003574:	b2da      	uxtb	r2, r3
 8003576:	697b      	ldr	r3, [r7, #20]
 8003578:	701a      	strb	r2, [r3, #0]
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800357e:	1c5a      	adds	r2, r3, #1
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	629a      	str	r2, [r3, #40]	; 0x28
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003588:	b29b      	uxth	r3, r3
 800358a:	3b01      	subs	r3, #1
 800358c:	b29b      	uxth	r3, r3
 800358e:	687a      	ldr	r2, [r7, #4]
 8003590:	4619      	mov	r1, r3
 8003592:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003594:	2b00      	cmp	r3, #0
 8003596:	d148      	bne.n	800362a <UART_Receive_IT+0x144>
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	68da      	ldr	r2, [r3, #12]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	f022 0220 	bic.w	r2, r2, #32
 80035a6:	60da      	str	r2, [r3, #12]
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	68da      	ldr	r2, [r3, #12]
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80035b6:	60da      	str	r2, [r3, #12]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	695a      	ldr	r2, [r3, #20]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	f022 0201 	bic.w	r2, r2, #1
 80035c6:	615a      	str	r2, [r3, #20]
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	2220      	movs	r2, #32
 80035cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80035d4:	2b01      	cmp	r3, #1
 80035d6:	d123      	bne.n	8003620 <UART_Receive_IT+0x13a>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	2200      	movs	r2, #0
 80035dc:	631a      	str	r2, [r3, #48]	; 0x30
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	68da      	ldr	r2, [r3, #12]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f022 0210 	bic.w	r2, r2, #16
 80035ec:	60da      	str	r2, [r3, #12]
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	f003 0310 	and.w	r3, r3, #16
 80035f8:	2b10      	cmp	r3, #16
 80035fa:	d10a      	bne.n	8003612 <UART_Receive_IT+0x12c>
 80035fc:	2300      	movs	r3, #0
 80035fe:	60fb      	str	r3, [r7, #12]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	60fb      	str	r3, [r7, #12]
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	685b      	ldr	r3, [r3, #4]
 800360e:	60fb      	str	r3, [r7, #12]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003616:	4619      	mov	r1, r3
 8003618:	6878      	ldr	r0, [r7, #4]
 800361a:	f7ff fe2f 	bl	800327c <HAL_UARTEx_RxEventCallback>
 800361e:	e002      	b.n	8003626 <UART_Receive_IT+0x140>
 8003620:	6878      	ldr	r0, [r7, #4]
 8003622:	f7fc ff51 	bl	80004c8 <HAL_UART_RxCpltCallback>
 8003626:	2300      	movs	r3, #0
 8003628:	e002      	b.n	8003630 <UART_Receive_IT+0x14a>
 800362a:	2300      	movs	r3, #0
 800362c:	e000      	b.n	8003630 <UART_Receive_IT+0x14a>
 800362e:	2302      	movs	r3, #2
 8003630:	4618      	mov	r0, r3
 8003632:	3718      	adds	r7, #24
 8003634:	46bd      	mov	sp, r7
 8003636:	bd80      	pop	{r7, pc}

08003638 <UART_SetConfig>:
 8003638:	b580      	push	{r7, lr}
 800363a:	b084      	sub	sp, #16
 800363c:	af00      	add	r7, sp, #0
 800363e:	6078      	str	r0, [r7, #4]
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	691b      	ldr	r3, [r3, #16]
 8003646:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	68da      	ldr	r2, [r3, #12]
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	430a      	orrs	r2, r1
 8003654:	611a      	str	r2, [r3, #16]
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	689a      	ldr	r2, [r3, #8]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	691b      	ldr	r3, [r3, #16]
 800365e:	431a      	orrs	r2, r3
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	695b      	ldr	r3, [r3, #20]
 8003664:	4313      	orrs	r3, r2
 8003666:	60bb      	str	r3, [r7, #8]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	68db      	ldr	r3, [r3, #12]
 800366e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003672:	f023 030c 	bic.w	r3, r3, #12
 8003676:	687a      	ldr	r2, [r7, #4]
 8003678:	6812      	ldr	r2, [r2, #0]
 800367a:	68b9      	ldr	r1, [r7, #8]
 800367c:	430b      	orrs	r3, r1
 800367e:	60d3      	str	r3, [r2, #12]
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	695b      	ldr	r3, [r3, #20]
 8003686:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	699a      	ldr	r2, [r3, #24]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	430a      	orrs	r2, r1
 8003694:	615a      	str	r2, [r3, #20]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	4a2c      	ldr	r2, [pc, #176]	; (800374c <UART_SetConfig+0x114>)
 800369c:	4293      	cmp	r3, r2
 800369e:	d103      	bne.n	80036a8 <UART_SetConfig+0x70>
 80036a0:	f7fe fce6 	bl	8002070 <HAL_RCC_GetPCLK2Freq>
 80036a4:	60f8      	str	r0, [r7, #12]
 80036a6:	e002      	b.n	80036ae <UART_SetConfig+0x76>
 80036a8:	f7fe fcce 	bl	8002048 <HAL_RCC_GetPCLK1Freq>
 80036ac:	60f8      	str	r0, [r7, #12]
 80036ae:	68fa      	ldr	r2, [r7, #12]
 80036b0:	4613      	mov	r3, r2
 80036b2:	009b      	lsls	r3, r3, #2
 80036b4:	4413      	add	r3, r2
 80036b6:	009a      	lsls	r2, r3, #2
 80036b8:	441a      	add	r2, r3
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	685b      	ldr	r3, [r3, #4]
 80036be:	009b      	lsls	r3, r3, #2
 80036c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80036c4:	4a22      	ldr	r2, [pc, #136]	; (8003750 <UART_SetConfig+0x118>)
 80036c6:	fba2 2303 	umull	r2, r3, r2, r3
 80036ca:	095b      	lsrs	r3, r3, #5
 80036cc:	0119      	lsls	r1, r3, #4
 80036ce:	68fa      	ldr	r2, [r7, #12]
 80036d0:	4613      	mov	r3, r2
 80036d2:	009b      	lsls	r3, r3, #2
 80036d4:	4413      	add	r3, r2
 80036d6:	009a      	lsls	r2, r3, #2
 80036d8:	441a      	add	r2, r3
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	685b      	ldr	r3, [r3, #4]
 80036de:	009b      	lsls	r3, r3, #2
 80036e0:	fbb2 f2f3 	udiv	r2, r2, r3
 80036e4:	4b1a      	ldr	r3, [pc, #104]	; (8003750 <UART_SetConfig+0x118>)
 80036e6:	fba3 0302 	umull	r0, r3, r3, r2
 80036ea:	095b      	lsrs	r3, r3, #5
 80036ec:	2064      	movs	r0, #100	; 0x64
 80036ee:	fb00 f303 	mul.w	r3, r0, r3
 80036f2:	1ad3      	subs	r3, r2, r3
 80036f4:	011b      	lsls	r3, r3, #4
 80036f6:	3332      	adds	r3, #50	; 0x32
 80036f8:	4a15      	ldr	r2, [pc, #84]	; (8003750 <UART_SetConfig+0x118>)
 80036fa:	fba2 2303 	umull	r2, r3, r2, r3
 80036fe:	095b      	lsrs	r3, r3, #5
 8003700:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003704:	4419      	add	r1, r3
 8003706:	68fa      	ldr	r2, [r7, #12]
 8003708:	4613      	mov	r3, r2
 800370a:	009b      	lsls	r3, r3, #2
 800370c:	4413      	add	r3, r2
 800370e:	009a      	lsls	r2, r3, #2
 8003710:	441a      	add	r2, r3
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	685b      	ldr	r3, [r3, #4]
 8003716:	009b      	lsls	r3, r3, #2
 8003718:	fbb2 f2f3 	udiv	r2, r2, r3
 800371c:	4b0c      	ldr	r3, [pc, #48]	; (8003750 <UART_SetConfig+0x118>)
 800371e:	fba3 0302 	umull	r0, r3, r3, r2
 8003722:	095b      	lsrs	r3, r3, #5
 8003724:	2064      	movs	r0, #100	; 0x64
 8003726:	fb00 f303 	mul.w	r3, r0, r3
 800372a:	1ad3      	subs	r3, r2, r3
 800372c:	011b      	lsls	r3, r3, #4
 800372e:	3332      	adds	r3, #50	; 0x32
 8003730:	4a07      	ldr	r2, [pc, #28]	; (8003750 <UART_SetConfig+0x118>)
 8003732:	fba2 2303 	umull	r2, r3, r2, r3
 8003736:	095b      	lsrs	r3, r3, #5
 8003738:	f003 020f 	and.w	r2, r3, #15
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	440a      	add	r2, r1
 8003742:	609a      	str	r2, [r3, #8]
 8003744:	bf00      	nop
 8003746:	3710      	adds	r7, #16
 8003748:	46bd      	mov	sp, r7
 800374a:	bd80      	pop	{r7, pc}
 800374c:	40013800 	.word	0x40013800
 8003750:	51eb851f 	.word	0x51eb851f

08003754 <atoi>:
 8003754:	220a      	movs	r2, #10
 8003756:	2100      	movs	r1, #0
 8003758:	f000 b934 	b.w	80039c4 <strtol>

0800375c <__errno>:
 800375c:	4b01      	ldr	r3, [pc, #4]	; (8003764 <__errno+0x8>)
 800375e:	6818      	ldr	r0, [r3, #0]
 8003760:	4770      	bx	lr
 8003762:	bf00      	nop
 8003764:	2000000c 	.word	0x2000000c

08003768 <__libc_init_array>:
 8003768:	b570      	push	{r4, r5, r6, lr}
 800376a:	2600      	movs	r6, #0
 800376c:	4d0c      	ldr	r5, [pc, #48]	; (80037a0 <__libc_init_array+0x38>)
 800376e:	4c0d      	ldr	r4, [pc, #52]	; (80037a4 <__libc_init_array+0x3c>)
 8003770:	1b64      	subs	r4, r4, r5
 8003772:	10a4      	asrs	r4, r4, #2
 8003774:	42a6      	cmp	r6, r4
 8003776:	d109      	bne.n	800378c <__libc_init_array+0x24>
 8003778:	f001 faac 	bl	8004cd4 <_init>
 800377c:	2600      	movs	r6, #0
 800377e:	4d0a      	ldr	r5, [pc, #40]	; (80037a8 <__libc_init_array+0x40>)
 8003780:	4c0a      	ldr	r4, [pc, #40]	; (80037ac <__libc_init_array+0x44>)
 8003782:	1b64      	subs	r4, r4, r5
 8003784:	10a4      	asrs	r4, r4, #2
 8003786:	42a6      	cmp	r6, r4
 8003788:	d105      	bne.n	8003796 <__libc_init_array+0x2e>
 800378a:	bd70      	pop	{r4, r5, r6, pc}
 800378c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003790:	4798      	blx	r3
 8003792:	3601      	adds	r6, #1
 8003794:	e7ee      	b.n	8003774 <__libc_init_array+0xc>
 8003796:	f855 3b04 	ldr.w	r3, [r5], #4
 800379a:	4798      	blx	r3
 800379c:	3601      	adds	r6, #1
 800379e:	e7f2      	b.n	8003786 <__libc_init_array+0x1e>
 80037a0:	08005144 	.word	0x08005144
 80037a4:	08005144 	.word	0x08005144
 80037a8:	08005144 	.word	0x08005144
 80037ac:	08005148 	.word	0x08005148

080037b0 <memset>:
 80037b0:	4603      	mov	r3, r0
 80037b2:	4402      	add	r2, r0
 80037b4:	4293      	cmp	r3, r2
 80037b6:	d100      	bne.n	80037ba <memset+0xa>
 80037b8:	4770      	bx	lr
 80037ba:	f803 1b01 	strb.w	r1, [r3], #1
 80037be:	e7f9      	b.n	80037b4 <memset+0x4>

080037c0 <siprintf>:
 80037c0:	b40e      	push	{r1, r2, r3}
 80037c2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80037c6:	b500      	push	{lr}
 80037c8:	b09c      	sub	sp, #112	; 0x70
 80037ca:	ab1d      	add	r3, sp, #116	; 0x74
 80037cc:	9002      	str	r0, [sp, #8]
 80037ce:	9006      	str	r0, [sp, #24]
 80037d0:	9107      	str	r1, [sp, #28]
 80037d2:	9104      	str	r1, [sp, #16]
 80037d4:	4808      	ldr	r0, [pc, #32]	; (80037f8 <siprintf+0x38>)
 80037d6:	4909      	ldr	r1, [pc, #36]	; (80037fc <siprintf+0x3c>)
 80037d8:	f853 2b04 	ldr.w	r2, [r3], #4
 80037dc:	9105      	str	r1, [sp, #20]
 80037de:	6800      	ldr	r0, [r0, #0]
 80037e0:	a902      	add	r1, sp, #8
 80037e2:	9301      	str	r3, [sp, #4]
 80037e4:	f000 fa32 	bl	8003c4c <_svfiprintf_r>
 80037e8:	2200      	movs	r2, #0
 80037ea:	9b02      	ldr	r3, [sp, #8]
 80037ec:	701a      	strb	r2, [r3, #0]
 80037ee:	b01c      	add	sp, #112	; 0x70
 80037f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80037f4:	b003      	add	sp, #12
 80037f6:	4770      	bx	lr
 80037f8:	2000000c 	.word	0x2000000c
 80037fc:	ffff0208 	.word	0xffff0208

08003800 <strtok>:
 8003800:	4b16      	ldr	r3, [pc, #88]	; (800385c <strtok+0x5c>)
 8003802:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003806:	681f      	ldr	r7, [r3, #0]
 8003808:	4605      	mov	r5, r0
 800380a:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 800380c:	460e      	mov	r6, r1
 800380e:	b9ec      	cbnz	r4, 800384c <strtok+0x4c>
 8003810:	2050      	movs	r0, #80	; 0x50
 8003812:	f000 f911 	bl	8003a38 <malloc>
 8003816:	4602      	mov	r2, r0
 8003818:	65b8      	str	r0, [r7, #88]	; 0x58
 800381a:	b920      	cbnz	r0, 8003826 <strtok+0x26>
 800381c:	2157      	movs	r1, #87	; 0x57
 800381e:	4b10      	ldr	r3, [pc, #64]	; (8003860 <strtok+0x60>)
 8003820:	4810      	ldr	r0, [pc, #64]	; (8003864 <strtok+0x64>)
 8003822:	f000 f8d9 	bl	80039d8 <__assert_func>
 8003826:	e9c0 4400 	strd	r4, r4, [r0]
 800382a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800382e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8003832:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8003836:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 800383a:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 800383e:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8003842:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8003846:	6184      	str	r4, [r0, #24]
 8003848:	7704      	strb	r4, [r0, #28]
 800384a:	6244      	str	r4, [r0, #36]	; 0x24
 800384c:	4631      	mov	r1, r6
 800384e:	4628      	mov	r0, r5
 8003850:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8003852:	2301      	movs	r3, #1
 8003854:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003858:	f000 b806 	b.w	8003868 <__strtok_r>
 800385c:	2000000c 	.word	0x2000000c
 8003860:	08004efc 	.word	0x08004efc
 8003864:	08004f13 	.word	0x08004f13

08003868 <__strtok_r>:
 8003868:	b5f0      	push	{r4, r5, r6, r7, lr}
 800386a:	b908      	cbnz	r0, 8003870 <__strtok_r+0x8>
 800386c:	6810      	ldr	r0, [r2, #0]
 800386e:	b188      	cbz	r0, 8003894 <__strtok_r+0x2c>
 8003870:	4604      	mov	r4, r0
 8003872:	460f      	mov	r7, r1
 8003874:	4620      	mov	r0, r4
 8003876:	f814 5b01 	ldrb.w	r5, [r4], #1
 800387a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800387e:	b91e      	cbnz	r6, 8003888 <__strtok_r+0x20>
 8003880:	b965      	cbnz	r5, 800389c <__strtok_r+0x34>
 8003882:	4628      	mov	r0, r5
 8003884:	6015      	str	r5, [r2, #0]
 8003886:	e005      	b.n	8003894 <__strtok_r+0x2c>
 8003888:	42b5      	cmp	r5, r6
 800388a:	d1f6      	bne.n	800387a <__strtok_r+0x12>
 800388c:	2b00      	cmp	r3, #0
 800388e:	d1f0      	bne.n	8003872 <__strtok_r+0xa>
 8003890:	6014      	str	r4, [r2, #0]
 8003892:	7003      	strb	r3, [r0, #0]
 8003894:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003896:	461c      	mov	r4, r3
 8003898:	e00c      	b.n	80038b4 <__strtok_r+0x4c>
 800389a:	b915      	cbnz	r5, 80038a2 <__strtok_r+0x3a>
 800389c:	460e      	mov	r6, r1
 800389e:	f814 3b01 	ldrb.w	r3, [r4], #1
 80038a2:	f816 5b01 	ldrb.w	r5, [r6], #1
 80038a6:	42ab      	cmp	r3, r5
 80038a8:	d1f7      	bne.n	800389a <__strtok_r+0x32>
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d0f3      	beq.n	8003896 <__strtok_r+0x2e>
 80038ae:	2300      	movs	r3, #0
 80038b0:	f804 3c01 	strb.w	r3, [r4, #-1]
 80038b4:	6014      	str	r4, [r2, #0]
 80038b6:	e7ed      	b.n	8003894 <__strtok_r+0x2c>

080038b8 <_strtol_l.isra.0>:
 80038b8:	2b01      	cmp	r3, #1
 80038ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80038be:	4686      	mov	lr, r0
 80038c0:	d001      	beq.n	80038c6 <_strtol_l.isra.0+0xe>
 80038c2:	2b24      	cmp	r3, #36	; 0x24
 80038c4:	d906      	bls.n	80038d4 <_strtol_l.isra.0+0x1c>
 80038c6:	f7ff ff49 	bl	800375c <__errno>
 80038ca:	2316      	movs	r3, #22
 80038cc:	6003      	str	r3, [r0, #0]
 80038ce:	2000      	movs	r0, #0
 80038d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80038d4:	468c      	mov	ip, r1
 80038d6:	4e3a      	ldr	r6, [pc, #232]	; (80039c0 <_strtol_l.isra.0+0x108>)
 80038d8:	4660      	mov	r0, ip
 80038da:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80038de:	5da5      	ldrb	r5, [r4, r6]
 80038e0:	f015 0508 	ands.w	r5, r5, #8
 80038e4:	d1f8      	bne.n	80038d8 <_strtol_l.isra.0+0x20>
 80038e6:	2c2d      	cmp	r4, #45	; 0x2d
 80038e8:	d133      	bne.n	8003952 <_strtol_l.isra.0+0x9a>
 80038ea:	f04f 0801 	mov.w	r8, #1
 80038ee:	f89c 4000 	ldrb.w	r4, [ip]
 80038f2:	f100 0c02 	add.w	ip, r0, #2
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d05d      	beq.n	80039b6 <_strtol_l.isra.0+0xfe>
 80038fa:	2b10      	cmp	r3, #16
 80038fc:	d10c      	bne.n	8003918 <_strtol_l.isra.0+0x60>
 80038fe:	2c30      	cmp	r4, #48	; 0x30
 8003900:	d10a      	bne.n	8003918 <_strtol_l.isra.0+0x60>
 8003902:	f89c 0000 	ldrb.w	r0, [ip]
 8003906:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800390a:	2858      	cmp	r0, #88	; 0x58
 800390c:	d14e      	bne.n	80039ac <_strtol_l.isra.0+0xf4>
 800390e:	2310      	movs	r3, #16
 8003910:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8003914:	f10c 0c02 	add.w	ip, ip, #2
 8003918:	2500      	movs	r5, #0
 800391a:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 800391e:	3f01      	subs	r7, #1
 8003920:	fbb7 f9f3 	udiv	r9, r7, r3
 8003924:	4628      	mov	r0, r5
 8003926:	fb03 7a19 	mls	sl, r3, r9, r7
 800392a:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 800392e:	2e09      	cmp	r6, #9
 8003930:	d818      	bhi.n	8003964 <_strtol_l.isra.0+0xac>
 8003932:	4634      	mov	r4, r6
 8003934:	42a3      	cmp	r3, r4
 8003936:	dd24      	ble.n	8003982 <_strtol_l.isra.0+0xca>
 8003938:	2d00      	cmp	r5, #0
 800393a:	db1f      	blt.n	800397c <_strtol_l.isra.0+0xc4>
 800393c:	4581      	cmp	r9, r0
 800393e:	d31d      	bcc.n	800397c <_strtol_l.isra.0+0xc4>
 8003940:	d101      	bne.n	8003946 <_strtol_l.isra.0+0x8e>
 8003942:	45a2      	cmp	sl, r4
 8003944:	db1a      	blt.n	800397c <_strtol_l.isra.0+0xc4>
 8003946:	2501      	movs	r5, #1
 8003948:	fb00 4003 	mla	r0, r0, r3, r4
 800394c:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8003950:	e7eb      	b.n	800392a <_strtol_l.isra.0+0x72>
 8003952:	2c2b      	cmp	r4, #43	; 0x2b
 8003954:	bf08      	it	eq
 8003956:	f89c 4000 	ldrbeq.w	r4, [ip]
 800395a:	46a8      	mov	r8, r5
 800395c:	bf08      	it	eq
 800395e:	f100 0c02 	addeq.w	ip, r0, #2
 8003962:	e7c8      	b.n	80038f6 <_strtol_l.isra.0+0x3e>
 8003964:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8003968:	2e19      	cmp	r6, #25
 800396a:	d801      	bhi.n	8003970 <_strtol_l.isra.0+0xb8>
 800396c:	3c37      	subs	r4, #55	; 0x37
 800396e:	e7e1      	b.n	8003934 <_strtol_l.isra.0+0x7c>
 8003970:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8003974:	2e19      	cmp	r6, #25
 8003976:	d804      	bhi.n	8003982 <_strtol_l.isra.0+0xca>
 8003978:	3c57      	subs	r4, #87	; 0x57
 800397a:	e7db      	b.n	8003934 <_strtol_l.isra.0+0x7c>
 800397c:	f04f 35ff 	mov.w	r5, #4294967295
 8003980:	e7e4      	b.n	800394c <_strtol_l.isra.0+0x94>
 8003982:	2d00      	cmp	r5, #0
 8003984:	da08      	bge.n	8003998 <_strtol_l.isra.0+0xe0>
 8003986:	2322      	movs	r3, #34	; 0x22
 8003988:	4638      	mov	r0, r7
 800398a:	f8ce 3000 	str.w	r3, [lr]
 800398e:	2a00      	cmp	r2, #0
 8003990:	d09e      	beq.n	80038d0 <_strtol_l.isra.0+0x18>
 8003992:	f10c 31ff 	add.w	r1, ip, #4294967295
 8003996:	e007      	b.n	80039a8 <_strtol_l.isra.0+0xf0>
 8003998:	f1b8 0f00 	cmp.w	r8, #0
 800399c:	d000      	beq.n	80039a0 <_strtol_l.isra.0+0xe8>
 800399e:	4240      	negs	r0, r0
 80039a0:	2a00      	cmp	r2, #0
 80039a2:	d095      	beq.n	80038d0 <_strtol_l.isra.0+0x18>
 80039a4:	2d00      	cmp	r5, #0
 80039a6:	d1f4      	bne.n	8003992 <_strtol_l.isra.0+0xda>
 80039a8:	6011      	str	r1, [r2, #0]
 80039aa:	e791      	b.n	80038d0 <_strtol_l.isra.0+0x18>
 80039ac:	2430      	movs	r4, #48	; 0x30
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d1b2      	bne.n	8003918 <_strtol_l.isra.0+0x60>
 80039b2:	2308      	movs	r3, #8
 80039b4:	e7b0      	b.n	8003918 <_strtol_l.isra.0+0x60>
 80039b6:	2c30      	cmp	r4, #48	; 0x30
 80039b8:	d0a3      	beq.n	8003902 <_strtol_l.isra.0+0x4a>
 80039ba:	230a      	movs	r3, #10
 80039bc:	e7ac      	b.n	8003918 <_strtol_l.isra.0+0x60>
 80039be:	bf00      	nop
 80039c0:	08004fb1 	.word	0x08004fb1

080039c4 <strtol>:
 80039c4:	4613      	mov	r3, r2
 80039c6:	460a      	mov	r2, r1
 80039c8:	4601      	mov	r1, r0
 80039ca:	4802      	ldr	r0, [pc, #8]	; (80039d4 <strtol+0x10>)
 80039cc:	6800      	ldr	r0, [r0, #0]
 80039ce:	f7ff bf73 	b.w	80038b8 <_strtol_l.isra.0>
 80039d2:	bf00      	nop
 80039d4:	2000000c 	.word	0x2000000c

080039d8 <__assert_func>:
 80039d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80039da:	4614      	mov	r4, r2
 80039dc:	461a      	mov	r2, r3
 80039de:	4b09      	ldr	r3, [pc, #36]	; (8003a04 <__assert_func+0x2c>)
 80039e0:	4605      	mov	r5, r0
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	68d8      	ldr	r0, [r3, #12]
 80039e6:	b14c      	cbz	r4, 80039fc <__assert_func+0x24>
 80039e8:	4b07      	ldr	r3, [pc, #28]	; (8003a08 <__assert_func+0x30>)
 80039ea:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80039ee:	9100      	str	r1, [sp, #0]
 80039f0:	462b      	mov	r3, r5
 80039f2:	4906      	ldr	r1, [pc, #24]	; (8003a0c <__assert_func+0x34>)
 80039f4:	f000 f80e 	bl	8003a14 <fiprintf>
 80039f8:	f000 fde6 	bl	80045c8 <abort>
 80039fc:	4b04      	ldr	r3, [pc, #16]	; (8003a10 <__assert_func+0x38>)
 80039fe:	461c      	mov	r4, r3
 8003a00:	e7f3      	b.n	80039ea <__assert_func+0x12>
 8003a02:	bf00      	nop
 8003a04:	2000000c 	.word	0x2000000c
 8003a08:	08004f74 	.word	0x08004f74
 8003a0c:	08004f81 	.word	0x08004f81
 8003a10:	08004faf 	.word	0x08004faf

08003a14 <fiprintf>:
 8003a14:	b40e      	push	{r1, r2, r3}
 8003a16:	b503      	push	{r0, r1, lr}
 8003a18:	4601      	mov	r1, r0
 8003a1a:	ab03      	add	r3, sp, #12
 8003a1c:	4805      	ldr	r0, [pc, #20]	; (8003a34 <fiprintf+0x20>)
 8003a1e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a22:	6800      	ldr	r0, [r0, #0]
 8003a24:	9301      	str	r3, [sp, #4]
 8003a26:	f000 fa39 	bl	8003e9c <_vfiprintf_r>
 8003a2a:	b002      	add	sp, #8
 8003a2c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003a30:	b003      	add	sp, #12
 8003a32:	4770      	bx	lr
 8003a34:	2000000c 	.word	0x2000000c

08003a38 <malloc>:
 8003a38:	4b02      	ldr	r3, [pc, #8]	; (8003a44 <malloc+0xc>)
 8003a3a:	4601      	mov	r1, r0
 8003a3c:	6818      	ldr	r0, [r3, #0]
 8003a3e:	f000 b84f 	b.w	8003ae0 <_malloc_r>
 8003a42:	bf00      	nop
 8003a44:	2000000c 	.word	0x2000000c

08003a48 <_free_r>:
 8003a48:	b538      	push	{r3, r4, r5, lr}
 8003a4a:	4605      	mov	r5, r0
 8003a4c:	2900      	cmp	r1, #0
 8003a4e:	d043      	beq.n	8003ad8 <_free_r+0x90>
 8003a50:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003a54:	1f0c      	subs	r4, r1, #4
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	bfb8      	it	lt
 8003a5a:	18e4      	addlt	r4, r4, r3
 8003a5c:	f001 f810 	bl	8004a80 <__malloc_lock>
 8003a60:	4a1e      	ldr	r2, [pc, #120]	; (8003adc <_free_r+0x94>)
 8003a62:	6813      	ldr	r3, [r2, #0]
 8003a64:	4610      	mov	r0, r2
 8003a66:	b933      	cbnz	r3, 8003a76 <_free_r+0x2e>
 8003a68:	6063      	str	r3, [r4, #4]
 8003a6a:	6014      	str	r4, [r2, #0]
 8003a6c:	4628      	mov	r0, r5
 8003a6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003a72:	f001 b80b 	b.w	8004a8c <__malloc_unlock>
 8003a76:	42a3      	cmp	r3, r4
 8003a78:	d90a      	bls.n	8003a90 <_free_r+0x48>
 8003a7a:	6821      	ldr	r1, [r4, #0]
 8003a7c:	1862      	adds	r2, r4, r1
 8003a7e:	4293      	cmp	r3, r2
 8003a80:	bf01      	itttt	eq
 8003a82:	681a      	ldreq	r2, [r3, #0]
 8003a84:	685b      	ldreq	r3, [r3, #4]
 8003a86:	1852      	addeq	r2, r2, r1
 8003a88:	6022      	streq	r2, [r4, #0]
 8003a8a:	6063      	str	r3, [r4, #4]
 8003a8c:	6004      	str	r4, [r0, #0]
 8003a8e:	e7ed      	b.n	8003a6c <_free_r+0x24>
 8003a90:	461a      	mov	r2, r3
 8003a92:	685b      	ldr	r3, [r3, #4]
 8003a94:	b10b      	cbz	r3, 8003a9a <_free_r+0x52>
 8003a96:	42a3      	cmp	r3, r4
 8003a98:	d9fa      	bls.n	8003a90 <_free_r+0x48>
 8003a9a:	6811      	ldr	r1, [r2, #0]
 8003a9c:	1850      	adds	r0, r2, r1
 8003a9e:	42a0      	cmp	r0, r4
 8003aa0:	d10b      	bne.n	8003aba <_free_r+0x72>
 8003aa2:	6820      	ldr	r0, [r4, #0]
 8003aa4:	4401      	add	r1, r0
 8003aa6:	1850      	adds	r0, r2, r1
 8003aa8:	4283      	cmp	r3, r0
 8003aaa:	6011      	str	r1, [r2, #0]
 8003aac:	d1de      	bne.n	8003a6c <_free_r+0x24>
 8003aae:	6818      	ldr	r0, [r3, #0]
 8003ab0:	685b      	ldr	r3, [r3, #4]
 8003ab2:	4401      	add	r1, r0
 8003ab4:	6011      	str	r1, [r2, #0]
 8003ab6:	6053      	str	r3, [r2, #4]
 8003ab8:	e7d8      	b.n	8003a6c <_free_r+0x24>
 8003aba:	d902      	bls.n	8003ac2 <_free_r+0x7a>
 8003abc:	230c      	movs	r3, #12
 8003abe:	602b      	str	r3, [r5, #0]
 8003ac0:	e7d4      	b.n	8003a6c <_free_r+0x24>
 8003ac2:	6820      	ldr	r0, [r4, #0]
 8003ac4:	1821      	adds	r1, r4, r0
 8003ac6:	428b      	cmp	r3, r1
 8003ac8:	bf01      	itttt	eq
 8003aca:	6819      	ldreq	r1, [r3, #0]
 8003acc:	685b      	ldreq	r3, [r3, #4]
 8003ace:	1809      	addeq	r1, r1, r0
 8003ad0:	6021      	streq	r1, [r4, #0]
 8003ad2:	6063      	str	r3, [r4, #4]
 8003ad4:	6054      	str	r4, [r2, #4]
 8003ad6:	e7c9      	b.n	8003a6c <_free_r+0x24>
 8003ad8:	bd38      	pop	{r3, r4, r5, pc}
 8003ada:	bf00      	nop
 8003adc:	20000090 	.word	0x20000090

08003ae0 <_malloc_r>:
 8003ae0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ae2:	1ccd      	adds	r5, r1, #3
 8003ae4:	f025 0503 	bic.w	r5, r5, #3
 8003ae8:	3508      	adds	r5, #8
 8003aea:	2d0c      	cmp	r5, #12
 8003aec:	bf38      	it	cc
 8003aee:	250c      	movcc	r5, #12
 8003af0:	2d00      	cmp	r5, #0
 8003af2:	4606      	mov	r6, r0
 8003af4:	db01      	blt.n	8003afa <_malloc_r+0x1a>
 8003af6:	42a9      	cmp	r1, r5
 8003af8:	d903      	bls.n	8003b02 <_malloc_r+0x22>
 8003afa:	230c      	movs	r3, #12
 8003afc:	6033      	str	r3, [r6, #0]
 8003afe:	2000      	movs	r0, #0
 8003b00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b02:	f000 ffbd 	bl	8004a80 <__malloc_lock>
 8003b06:	4921      	ldr	r1, [pc, #132]	; (8003b8c <_malloc_r+0xac>)
 8003b08:	680a      	ldr	r2, [r1, #0]
 8003b0a:	4614      	mov	r4, r2
 8003b0c:	b99c      	cbnz	r4, 8003b36 <_malloc_r+0x56>
 8003b0e:	4f20      	ldr	r7, [pc, #128]	; (8003b90 <_malloc_r+0xb0>)
 8003b10:	683b      	ldr	r3, [r7, #0]
 8003b12:	b923      	cbnz	r3, 8003b1e <_malloc_r+0x3e>
 8003b14:	4621      	mov	r1, r4
 8003b16:	4630      	mov	r0, r6
 8003b18:	f000 fc86 	bl	8004428 <_sbrk_r>
 8003b1c:	6038      	str	r0, [r7, #0]
 8003b1e:	4629      	mov	r1, r5
 8003b20:	4630      	mov	r0, r6
 8003b22:	f000 fc81 	bl	8004428 <_sbrk_r>
 8003b26:	1c43      	adds	r3, r0, #1
 8003b28:	d123      	bne.n	8003b72 <_malloc_r+0x92>
 8003b2a:	230c      	movs	r3, #12
 8003b2c:	4630      	mov	r0, r6
 8003b2e:	6033      	str	r3, [r6, #0]
 8003b30:	f000 ffac 	bl	8004a8c <__malloc_unlock>
 8003b34:	e7e3      	b.n	8003afe <_malloc_r+0x1e>
 8003b36:	6823      	ldr	r3, [r4, #0]
 8003b38:	1b5b      	subs	r3, r3, r5
 8003b3a:	d417      	bmi.n	8003b6c <_malloc_r+0x8c>
 8003b3c:	2b0b      	cmp	r3, #11
 8003b3e:	d903      	bls.n	8003b48 <_malloc_r+0x68>
 8003b40:	6023      	str	r3, [r4, #0]
 8003b42:	441c      	add	r4, r3
 8003b44:	6025      	str	r5, [r4, #0]
 8003b46:	e004      	b.n	8003b52 <_malloc_r+0x72>
 8003b48:	6863      	ldr	r3, [r4, #4]
 8003b4a:	42a2      	cmp	r2, r4
 8003b4c:	bf0c      	ite	eq
 8003b4e:	600b      	streq	r3, [r1, #0]
 8003b50:	6053      	strne	r3, [r2, #4]
 8003b52:	4630      	mov	r0, r6
 8003b54:	f000 ff9a 	bl	8004a8c <__malloc_unlock>
 8003b58:	f104 000b 	add.w	r0, r4, #11
 8003b5c:	1d23      	adds	r3, r4, #4
 8003b5e:	f020 0007 	bic.w	r0, r0, #7
 8003b62:	1ac2      	subs	r2, r0, r3
 8003b64:	d0cc      	beq.n	8003b00 <_malloc_r+0x20>
 8003b66:	1a1b      	subs	r3, r3, r0
 8003b68:	50a3      	str	r3, [r4, r2]
 8003b6a:	e7c9      	b.n	8003b00 <_malloc_r+0x20>
 8003b6c:	4622      	mov	r2, r4
 8003b6e:	6864      	ldr	r4, [r4, #4]
 8003b70:	e7cc      	b.n	8003b0c <_malloc_r+0x2c>
 8003b72:	1cc4      	adds	r4, r0, #3
 8003b74:	f024 0403 	bic.w	r4, r4, #3
 8003b78:	42a0      	cmp	r0, r4
 8003b7a:	d0e3      	beq.n	8003b44 <_malloc_r+0x64>
 8003b7c:	1a21      	subs	r1, r4, r0
 8003b7e:	4630      	mov	r0, r6
 8003b80:	f000 fc52 	bl	8004428 <_sbrk_r>
 8003b84:	3001      	adds	r0, #1
 8003b86:	d1dd      	bne.n	8003b44 <_malloc_r+0x64>
 8003b88:	e7cf      	b.n	8003b2a <_malloc_r+0x4a>
 8003b8a:	bf00      	nop
 8003b8c:	20000090 	.word	0x20000090
 8003b90:	20000094 	.word	0x20000094

08003b94 <__ssputs_r>:
 8003b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b98:	688e      	ldr	r6, [r1, #8]
 8003b9a:	4682      	mov	sl, r0
 8003b9c:	429e      	cmp	r6, r3
 8003b9e:	460c      	mov	r4, r1
 8003ba0:	4690      	mov	r8, r2
 8003ba2:	461f      	mov	r7, r3
 8003ba4:	d838      	bhi.n	8003c18 <__ssputs_r+0x84>
 8003ba6:	898a      	ldrh	r2, [r1, #12]
 8003ba8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003bac:	d032      	beq.n	8003c14 <__ssputs_r+0x80>
 8003bae:	6825      	ldr	r5, [r4, #0]
 8003bb0:	6909      	ldr	r1, [r1, #16]
 8003bb2:	3301      	adds	r3, #1
 8003bb4:	eba5 0901 	sub.w	r9, r5, r1
 8003bb8:	6965      	ldr	r5, [r4, #20]
 8003bba:	444b      	add	r3, r9
 8003bbc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bc0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bc4:	106d      	asrs	r5, r5, #1
 8003bc6:	429d      	cmp	r5, r3
 8003bc8:	bf38      	it	cc
 8003bca:	461d      	movcc	r5, r3
 8003bcc:	0553      	lsls	r3, r2, #21
 8003bce:	d531      	bpl.n	8003c34 <__ssputs_r+0xa0>
 8003bd0:	4629      	mov	r1, r5
 8003bd2:	f7ff ff85 	bl	8003ae0 <_malloc_r>
 8003bd6:	4606      	mov	r6, r0
 8003bd8:	b950      	cbnz	r0, 8003bf0 <__ssputs_r+0x5c>
 8003bda:	230c      	movs	r3, #12
 8003bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8003be0:	f8ca 3000 	str.w	r3, [sl]
 8003be4:	89a3      	ldrh	r3, [r4, #12]
 8003be6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003bea:	81a3      	strh	r3, [r4, #12]
 8003bec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003bf0:	464a      	mov	r2, r9
 8003bf2:	6921      	ldr	r1, [r4, #16]
 8003bf4:	f000 ff1c 	bl	8004a30 <memcpy>
 8003bf8:	89a3      	ldrh	r3, [r4, #12]
 8003bfa:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003bfe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003c02:	81a3      	strh	r3, [r4, #12]
 8003c04:	6126      	str	r6, [r4, #16]
 8003c06:	444e      	add	r6, r9
 8003c08:	6026      	str	r6, [r4, #0]
 8003c0a:	463e      	mov	r6, r7
 8003c0c:	6165      	str	r5, [r4, #20]
 8003c0e:	eba5 0509 	sub.w	r5, r5, r9
 8003c12:	60a5      	str	r5, [r4, #8]
 8003c14:	42be      	cmp	r6, r7
 8003c16:	d900      	bls.n	8003c1a <__ssputs_r+0x86>
 8003c18:	463e      	mov	r6, r7
 8003c1a:	4632      	mov	r2, r6
 8003c1c:	4641      	mov	r1, r8
 8003c1e:	6820      	ldr	r0, [r4, #0]
 8003c20:	f000 ff14 	bl	8004a4c <memmove>
 8003c24:	68a3      	ldr	r3, [r4, #8]
 8003c26:	6822      	ldr	r2, [r4, #0]
 8003c28:	1b9b      	subs	r3, r3, r6
 8003c2a:	4432      	add	r2, r6
 8003c2c:	2000      	movs	r0, #0
 8003c2e:	60a3      	str	r3, [r4, #8]
 8003c30:	6022      	str	r2, [r4, #0]
 8003c32:	e7db      	b.n	8003bec <__ssputs_r+0x58>
 8003c34:	462a      	mov	r2, r5
 8003c36:	f000 ff2f 	bl	8004a98 <_realloc_r>
 8003c3a:	4606      	mov	r6, r0
 8003c3c:	2800      	cmp	r0, #0
 8003c3e:	d1e1      	bne.n	8003c04 <__ssputs_r+0x70>
 8003c40:	4650      	mov	r0, sl
 8003c42:	6921      	ldr	r1, [r4, #16]
 8003c44:	f7ff ff00 	bl	8003a48 <_free_r>
 8003c48:	e7c7      	b.n	8003bda <__ssputs_r+0x46>
	...

08003c4c <_svfiprintf_r>:
 8003c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c50:	4698      	mov	r8, r3
 8003c52:	898b      	ldrh	r3, [r1, #12]
 8003c54:	4607      	mov	r7, r0
 8003c56:	061b      	lsls	r3, r3, #24
 8003c58:	460d      	mov	r5, r1
 8003c5a:	4614      	mov	r4, r2
 8003c5c:	b09d      	sub	sp, #116	; 0x74
 8003c5e:	d50e      	bpl.n	8003c7e <_svfiprintf_r+0x32>
 8003c60:	690b      	ldr	r3, [r1, #16]
 8003c62:	b963      	cbnz	r3, 8003c7e <_svfiprintf_r+0x32>
 8003c64:	2140      	movs	r1, #64	; 0x40
 8003c66:	f7ff ff3b 	bl	8003ae0 <_malloc_r>
 8003c6a:	6028      	str	r0, [r5, #0]
 8003c6c:	6128      	str	r0, [r5, #16]
 8003c6e:	b920      	cbnz	r0, 8003c7a <_svfiprintf_r+0x2e>
 8003c70:	230c      	movs	r3, #12
 8003c72:	603b      	str	r3, [r7, #0]
 8003c74:	f04f 30ff 	mov.w	r0, #4294967295
 8003c78:	e0d1      	b.n	8003e1e <_svfiprintf_r+0x1d2>
 8003c7a:	2340      	movs	r3, #64	; 0x40
 8003c7c:	616b      	str	r3, [r5, #20]
 8003c7e:	2300      	movs	r3, #0
 8003c80:	9309      	str	r3, [sp, #36]	; 0x24
 8003c82:	2320      	movs	r3, #32
 8003c84:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c88:	2330      	movs	r3, #48	; 0x30
 8003c8a:	f04f 0901 	mov.w	r9, #1
 8003c8e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c92:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e38 <_svfiprintf_r+0x1ec>
 8003c96:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c9a:	4623      	mov	r3, r4
 8003c9c:	469a      	mov	sl, r3
 8003c9e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ca2:	b10a      	cbz	r2, 8003ca8 <_svfiprintf_r+0x5c>
 8003ca4:	2a25      	cmp	r2, #37	; 0x25
 8003ca6:	d1f9      	bne.n	8003c9c <_svfiprintf_r+0x50>
 8003ca8:	ebba 0b04 	subs.w	fp, sl, r4
 8003cac:	d00b      	beq.n	8003cc6 <_svfiprintf_r+0x7a>
 8003cae:	465b      	mov	r3, fp
 8003cb0:	4622      	mov	r2, r4
 8003cb2:	4629      	mov	r1, r5
 8003cb4:	4638      	mov	r0, r7
 8003cb6:	f7ff ff6d 	bl	8003b94 <__ssputs_r>
 8003cba:	3001      	adds	r0, #1
 8003cbc:	f000 80aa 	beq.w	8003e14 <_svfiprintf_r+0x1c8>
 8003cc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cc2:	445a      	add	r2, fp
 8003cc4:	9209      	str	r2, [sp, #36]	; 0x24
 8003cc6:	f89a 3000 	ldrb.w	r3, [sl]
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	f000 80a2 	beq.w	8003e14 <_svfiprintf_r+0x1c8>
 8003cd0:	2300      	movs	r3, #0
 8003cd2:	f04f 32ff 	mov.w	r2, #4294967295
 8003cd6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003cda:	f10a 0a01 	add.w	sl, sl, #1
 8003cde:	9304      	str	r3, [sp, #16]
 8003ce0:	9307      	str	r3, [sp, #28]
 8003ce2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003ce6:	931a      	str	r3, [sp, #104]	; 0x68
 8003ce8:	4654      	mov	r4, sl
 8003cea:	2205      	movs	r2, #5
 8003cec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003cf0:	4851      	ldr	r0, [pc, #324]	; (8003e38 <_svfiprintf_r+0x1ec>)
 8003cf2:	f000 fe8f 	bl	8004a14 <memchr>
 8003cf6:	9a04      	ldr	r2, [sp, #16]
 8003cf8:	b9d8      	cbnz	r0, 8003d32 <_svfiprintf_r+0xe6>
 8003cfa:	06d0      	lsls	r0, r2, #27
 8003cfc:	bf44      	itt	mi
 8003cfe:	2320      	movmi	r3, #32
 8003d00:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d04:	0711      	lsls	r1, r2, #28
 8003d06:	bf44      	itt	mi
 8003d08:	232b      	movmi	r3, #43	; 0x2b
 8003d0a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d0e:	f89a 3000 	ldrb.w	r3, [sl]
 8003d12:	2b2a      	cmp	r3, #42	; 0x2a
 8003d14:	d015      	beq.n	8003d42 <_svfiprintf_r+0xf6>
 8003d16:	4654      	mov	r4, sl
 8003d18:	2000      	movs	r0, #0
 8003d1a:	f04f 0c0a 	mov.w	ip, #10
 8003d1e:	9a07      	ldr	r2, [sp, #28]
 8003d20:	4621      	mov	r1, r4
 8003d22:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d26:	3b30      	subs	r3, #48	; 0x30
 8003d28:	2b09      	cmp	r3, #9
 8003d2a:	d94e      	bls.n	8003dca <_svfiprintf_r+0x17e>
 8003d2c:	b1b0      	cbz	r0, 8003d5c <_svfiprintf_r+0x110>
 8003d2e:	9207      	str	r2, [sp, #28]
 8003d30:	e014      	b.n	8003d5c <_svfiprintf_r+0x110>
 8003d32:	eba0 0308 	sub.w	r3, r0, r8
 8003d36:	fa09 f303 	lsl.w	r3, r9, r3
 8003d3a:	4313      	orrs	r3, r2
 8003d3c:	46a2      	mov	sl, r4
 8003d3e:	9304      	str	r3, [sp, #16]
 8003d40:	e7d2      	b.n	8003ce8 <_svfiprintf_r+0x9c>
 8003d42:	9b03      	ldr	r3, [sp, #12]
 8003d44:	1d19      	adds	r1, r3, #4
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	9103      	str	r1, [sp, #12]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	bfbb      	ittet	lt
 8003d4e:	425b      	neglt	r3, r3
 8003d50:	f042 0202 	orrlt.w	r2, r2, #2
 8003d54:	9307      	strge	r3, [sp, #28]
 8003d56:	9307      	strlt	r3, [sp, #28]
 8003d58:	bfb8      	it	lt
 8003d5a:	9204      	strlt	r2, [sp, #16]
 8003d5c:	7823      	ldrb	r3, [r4, #0]
 8003d5e:	2b2e      	cmp	r3, #46	; 0x2e
 8003d60:	d10c      	bne.n	8003d7c <_svfiprintf_r+0x130>
 8003d62:	7863      	ldrb	r3, [r4, #1]
 8003d64:	2b2a      	cmp	r3, #42	; 0x2a
 8003d66:	d135      	bne.n	8003dd4 <_svfiprintf_r+0x188>
 8003d68:	9b03      	ldr	r3, [sp, #12]
 8003d6a:	3402      	adds	r4, #2
 8003d6c:	1d1a      	adds	r2, r3, #4
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	9203      	str	r2, [sp, #12]
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	bfb8      	it	lt
 8003d76:	f04f 33ff 	movlt.w	r3, #4294967295
 8003d7a:	9305      	str	r3, [sp, #20]
 8003d7c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8003e48 <_svfiprintf_r+0x1fc>
 8003d80:	2203      	movs	r2, #3
 8003d82:	4650      	mov	r0, sl
 8003d84:	7821      	ldrb	r1, [r4, #0]
 8003d86:	f000 fe45 	bl	8004a14 <memchr>
 8003d8a:	b140      	cbz	r0, 8003d9e <_svfiprintf_r+0x152>
 8003d8c:	2340      	movs	r3, #64	; 0x40
 8003d8e:	eba0 000a 	sub.w	r0, r0, sl
 8003d92:	fa03 f000 	lsl.w	r0, r3, r0
 8003d96:	9b04      	ldr	r3, [sp, #16]
 8003d98:	3401      	adds	r4, #1
 8003d9a:	4303      	orrs	r3, r0
 8003d9c:	9304      	str	r3, [sp, #16]
 8003d9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003da2:	2206      	movs	r2, #6
 8003da4:	4825      	ldr	r0, [pc, #148]	; (8003e3c <_svfiprintf_r+0x1f0>)
 8003da6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003daa:	f000 fe33 	bl	8004a14 <memchr>
 8003dae:	2800      	cmp	r0, #0
 8003db0:	d038      	beq.n	8003e24 <_svfiprintf_r+0x1d8>
 8003db2:	4b23      	ldr	r3, [pc, #140]	; (8003e40 <_svfiprintf_r+0x1f4>)
 8003db4:	bb1b      	cbnz	r3, 8003dfe <_svfiprintf_r+0x1b2>
 8003db6:	9b03      	ldr	r3, [sp, #12]
 8003db8:	3307      	adds	r3, #7
 8003dba:	f023 0307 	bic.w	r3, r3, #7
 8003dbe:	3308      	adds	r3, #8
 8003dc0:	9303      	str	r3, [sp, #12]
 8003dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dc4:	4433      	add	r3, r6
 8003dc6:	9309      	str	r3, [sp, #36]	; 0x24
 8003dc8:	e767      	b.n	8003c9a <_svfiprintf_r+0x4e>
 8003dca:	460c      	mov	r4, r1
 8003dcc:	2001      	movs	r0, #1
 8003dce:	fb0c 3202 	mla	r2, ip, r2, r3
 8003dd2:	e7a5      	b.n	8003d20 <_svfiprintf_r+0xd4>
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	f04f 0c0a 	mov.w	ip, #10
 8003dda:	4619      	mov	r1, r3
 8003ddc:	3401      	adds	r4, #1
 8003dde:	9305      	str	r3, [sp, #20]
 8003de0:	4620      	mov	r0, r4
 8003de2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003de6:	3a30      	subs	r2, #48	; 0x30
 8003de8:	2a09      	cmp	r2, #9
 8003dea:	d903      	bls.n	8003df4 <_svfiprintf_r+0x1a8>
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	d0c5      	beq.n	8003d7c <_svfiprintf_r+0x130>
 8003df0:	9105      	str	r1, [sp, #20]
 8003df2:	e7c3      	b.n	8003d7c <_svfiprintf_r+0x130>
 8003df4:	4604      	mov	r4, r0
 8003df6:	2301      	movs	r3, #1
 8003df8:	fb0c 2101 	mla	r1, ip, r1, r2
 8003dfc:	e7f0      	b.n	8003de0 <_svfiprintf_r+0x194>
 8003dfe:	ab03      	add	r3, sp, #12
 8003e00:	9300      	str	r3, [sp, #0]
 8003e02:	462a      	mov	r2, r5
 8003e04:	4638      	mov	r0, r7
 8003e06:	4b0f      	ldr	r3, [pc, #60]	; (8003e44 <_svfiprintf_r+0x1f8>)
 8003e08:	a904      	add	r1, sp, #16
 8003e0a:	f3af 8000 	nop.w
 8003e0e:	1c42      	adds	r2, r0, #1
 8003e10:	4606      	mov	r6, r0
 8003e12:	d1d6      	bne.n	8003dc2 <_svfiprintf_r+0x176>
 8003e14:	89ab      	ldrh	r3, [r5, #12]
 8003e16:	065b      	lsls	r3, r3, #25
 8003e18:	f53f af2c 	bmi.w	8003c74 <_svfiprintf_r+0x28>
 8003e1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e1e:	b01d      	add	sp, #116	; 0x74
 8003e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e24:	ab03      	add	r3, sp, #12
 8003e26:	9300      	str	r3, [sp, #0]
 8003e28:	462a      	mov	r2, r5
 8003e2a:	4638      	mov	r0, r7
 8003e2c:	4b05      	ldr	r3, [pc, #20]	; (8003e44 <_svfiprintf_r+0x1f8>)
 8003e2e:	a904      	add	r1, sp, #16
 8003e30:	f000 f9d4 	bl	80041dc <_printf_i>
 8003e34:	e7eb      	b.n	8003e0e <_svfiprintf_r+0x1c2>
 8003e36:	bf00      	nop
 8003e38:	080050b1 	.word	0x080050b1
 8003e3c:	080050bb 	.word	0x080050bb
 8003e40:	00000000 	.word	0x00000000
 8003e44:	08003b95 	.word	0x08003b95
 8003e48:	080050b7 	.word	0x080050b7

08003e4c <__sfputc_r>:
 8003e4c:	6893      	ldr	r3, [r2, #8]
 8003e4e:	b410      	push	{r4}
 8003e50:	3b01      	subs	r3, #1
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	6093      	str	r3, [r2, #8]
 8003e56:	da07      	bge.n	8003e68 <__sfputc_r+0x1c>
 8003e58:	6994      	ldr	r4, [r2, #24]
 8003e5a:	42a3      	cmp	r3, r4
 8003e5c:	db01      	blt.n	8003e62 <__sfputc_r+0x16>
 8003e5e:	290a      	cmp	r1, #10
 8003e60:	d102      	bne.n	8003e68 <__sfputc_r+0x1c>
 8003e62:	bc10      	pop	{r4}
 8003e64:	f000 baf0 	b.w	8004448 <__swbuf_r>
 8003e68:	6813      	ldr	r3, [r2, #0]
 8003e6a:	1c58      	adds	r0, r3, #1
 8003e6c:	6010      	str	r0, [r2, #0]
 8003e6e:	7019      	strb	r1, [r3, #0]
 8003e70:	4608      	mov	r0, r1
 8003e72:	bc10      	pop	{r4}
 8003e74:	4770      	bx	lr

08003e76 <__sfputs_r>:
 8003e76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e78:	4606      	mov	r6, r0
 8003e7a:	460f      	mov	r7, r1
 8003e7c:	4614      	mov	r4, r2
 8003e7e:	18d5      	adds	r5, r2, r3
 8003e80:	42ac      	cmp	r4, r5
 8003e82:	d101      	bne.n	8003e88 <__sfputs_r+0x12>
 8003e84:	2000      	movs	r0, #0
 8003e86:	e007      	b.n	8003e98 <__sfputs_r+0x22>
 8003e88:	463a      	mov	r2, r7
 8003e8a:	4630      	mov	r0, r6
 8003e8c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e90:	f7ff ffdc 	bl	8003e4c <__sfputc_r>
 8003e94:	1c43      	adds	r3, r0, #1
 8003e96:	d1f3      	bne.n	8003e80 <__sfputs_r+0xa>
 8003e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003e9c <_vfiprintf_r>:
 8003e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ea0:	460d      	mov	r5, r1
 8003ea2:	4614      	mov	r4, r2
 8003ea4:	4698      	mov	r8, r3
 8003ea6:	4606      	mov	r6, r0
 8003ea8:	b09d      	sub	sp, #116	; 0x74
 8003eaa:	b118      	cbz	r0, 8003eb4 <_vfiprintf_r+0x18>
 8003eac:	6983      	ldr	r3, [r0, #24]
 8003eae:	b90b      	cbnz	r3, 8003eb4 <_vfiprintf_r+0x18>
 8003eb0:	f000 fcac 	bl	800480c <__sinit>
 8003eb4:	4b89      	ldr	r3, [pc, #548]	; (80040dc <_vfiprintf_r+0x240>)
 8003eb6:	429d      	cmp	r5, r3
 8003eb8:	d11b      	bne.n	8003ef2 <_vfiprintf_r+0x56>
 8003eba:	6875      	ldr	r5, [r6, #4]
 8003ebc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003ebe:	07d9      	lsls	r1, r3, #31
 8003ec0:	d405      	bmi.n	8003ece <_vfiprintf_r+0x32>
 8003ec2:	89ab      	ldrh	r3, [r5, #12]
 8003ec4:	059a      	lsls	r2, r3, #22
 8003ec6:	d402      	bmi.n	8003ece <_vfiprintf_r+0x32>
 8003ec8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003eca:	f000 fd3d 	bl	8004948 <__retarget_lock_acquire_recursive>
 8003ece:	89ab      	ldrh	r3, [r5, #12]
 8003ed0:	071b      	lsls	r3, r3, #28
 8003ed2:	d501      	bpl.n	8003ed8 <_vfiprintf_r+0x3c>
 8003ed4:	692b      	ldr	r3, [r5, #16]
 8003ed6:	b9eb      	cbnz	r3, 8003f14 <_vfiprintf_r+0x78>
 8003ed8:	4629      	mov	r1, r5
 8003eda:	4630      	mov	r0, r6
 8003edc:	f000 fb06 	bl	80044ec <__swsetup_r>
 8003ee0:	b1c0      	cbz	r0, 8003f14 <_vfiprintf_r+0x78>
 8003ee2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003ee4:	07dc      	lsls	r4, r3, #31
 8003ee6:	d50e      	bpl.n	8003f06 <_vfiprintf_r+0x6a>
 8003ee8:	f04f 30ff 	mov.w	r0, #4294967295
 8003eec:	b01d      	add	sp, #116	; 0x74
 8003eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ef2:	4b7b      	ldr	r3, [pc, #492]	; (80040e0 <_vfiprintf_r+0x244>)
 8003ef4:	429d      	cmp	r5, r3
 8003ef6:	d101      	bne.n	8003efc <_vfiprintf_r+0x60>
 8003ef8:	68b5      	ldr	r5, [r6, #8]
 8003efa:	e7df      	b.n	8003ebc <_vfiprintf_r+0x20>
 8003efc:	4b79      	ldr	r3, [pc, #484]	; (80040e4 <_vfiprintf_r+0x248>)
 8003efe:	429d      	cmp	r5, r3
 8003f00:	bf08      	it	eq
 8003f02:	68f5      	ldreq	r5, [r6, #12]
 8003f04:	e7da      	b.n	8003ebc <_vfiprintf_r+0x20>
 8003f06:	89ab      	ldrh	r3, [r5, #12]
 8003f08:	0598      	lsls	r0, r3, #22
 8003f0a:	d4ed      	bmi.n	8003ee8 <_vfiprintf_r+0x4c>
 8003f0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003f0e:	f000 fd1c 	bl	800494a <__retarget_lock_release_recursive>
 8003f12:	e7e9      	b.n	8003ee8 <_vfiprintf_r+0x4c>
 8003f14:	2300      	movs	r3, #0
 8003f16:	9309      	str	r3, [sp, #36]	; 0x24
 8003f18:	2320      	movs	r3, #32
 8003f1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003f1e:	2330      	movs	r3, #48	; 0x30
 8003f20:	f04f 0901 	mov.w	r9, #1
 8003f24:	f8cd 800c 	str.w	r8, [sp, #12]
 8003f28:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80040e8 <_vfiprintf_r+0x24c>
 8003f2c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003f30:	4623      	mov	r3, r4
 8003f32:	469a      	mov	sl, r3
 8003f34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003f38:	b10a      	cbz	r2, 8003f3e <_vfiprintf_r+0xa2>
 8003f3a:	2a25      	cmp	r2, #37	; 0x25
 8003f3c:	d1f9      	bne.n	8003f32 <_vfiprintf_r+0x96>
 8003f3e:	ebba 0b04 	subs.w	fp, sl, r4
 8003f42:	d00b      	beq.n	8003f5c <_vfiprintf_r+0xc0>
 8003f44:	465b      	mov	r3, fp
 8003f46:	4622      	mov	r2, r4
 8003f48:	4629      	mov	r1, r5
 8003f4a:	4630      	mov	r0, r6
 8003f4c:	f7ff ff93 	bl	8003e76 <__sfputs_r>
 8003f50:	3001      	adds	r0, #1
 8003f52:	f000 80aa 	beq.w	80040aa <_vfiprintf_r+0x20e>
 8003f56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003f58:	445a      	add	r2, fp
 8003f5a:	9209      	str	r2, [sp, #36]	; 0x24
 8003f5c:	f89a 3000 	ldrb.w	r3, [sl]
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	f000 80a2 	beq.w	80040aa <_vfiprintf_r+0x20e>
 8003f66:	2300      	movs	r3, #0
 8003f68:	f04f 32ff 	mov.w	r2, #4294967295
 8003f6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003f70:	f10a 0a01 	add.w	sl, sl, #1
 8003f74:	9304      	str	r3, [sp, #16]
 8003f76:	9307      	str	r3, [sp, #28]
 8003f78:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003f7c:	931a      	str	r3, [sp, #104]	; 0x68
 8003f7e:	4654      	mov	r4, sl
 8003f80:	2205      	movs	r2, #5
 8003f82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f86:	4858      	ldr	r0, [pc, #352]	; (80040e8 <_vfiprintf_r+0x24c>)
 8003f88:	f000 fd44 	bl	8004a14 <memchr>
 8003f8c:	9a04      	ldr	r2, [sp, #16]
 8003f8e:	b9d8      	cbnz	r0, 8003fc8 <_vfiprintf_r+0x12c>
 8003f90:	06d1      	lsls	r1, r2, #27
 8003f92:	bf44      	itt	mi
 8003f94:	2320      	movmi	r3, #32
 8003f96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f9a:	0713      	lsls	r3, r2, #28
 8003f9c:	bf44      	itt	mi
 8003f9e:	232b      	movmi	r3, #43	; 0x2b
 8003fa0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003fa4:	f89a 3000 	ldrb.w	r3, [sl]
 8003fa8:	2b2a      	cmp	r3, #42	; 0x2a
 8003faa:	d015      	beq.n	8003fd8 <_vfiprintf_r+0x13c>
 8003fac:	4654      	mov	r4, sl
 8003fae:	2000      	movs	r0, #0
 8003fb0:	f04f 0c0a 	mov.w	ip, #10
 8003fb4:	9a07      	ldr	r2, [sp, #28]
 8003fb6:	4621      	mov	r1, r4
 8003fb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003fbc:	3b30      	subs	r3, #48	; 0x30
 8003fbe:	2b09      	cmp	r3, #9
 8003fc0:	d94e      	bls.n	8004060 <_vfiprintf_r+0x1c4>
 8003fc2:	b1b0      	cbz	r0, 8003ff2 <_vfiprintf_r+0x156>
 8003fc4:	9207      	str	r2, [sp, #28]
 8003fc6:	e014      	b.n	8003ff2 <_vfiprintf_r+0x156>
 8003fc8:	eba0 0308 	sub.w	r3, r0, r8
 8003fcc:	fa09 f303 	lsl.w	r3, r9, r3
 8003fd0:	4313      	orrs	r3, r2
 8003fd2:	46a2      	mov	sl, r4
 8003fd4:	9304      	str	r3, [sp, #16]
 8003fd6:	e7d2      	b.n	8003f7e <_vfiprintf_r+0xe2>
 8003fd8:	9b03      	ldr	r3, [sp, #12]
 8003fda:	1d19      	adds	r1, r3, #4
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	9103      	str	r1, [sp, #12]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	bfbb      	ittet	lt
 8003fe4:	425b      	neglt	r3, r3
 8003fe6:	f042 0202 	orrlt.w	r2, r2, #2
 8003fea:	9307      	strge	r3, [sp, #28]
 8003fec:	9307      	strlt	r3, [sp, #28]
 8003fee:	bfb8      	it	lt
 8003ff0:	9204      	strlt	r2, [sp, #16]
 8003ff2:	7823      	ldrb	r3, [r4, #0]
 8003ff4:	2b2e      	cmp	r3, #46	; 0x2e
 8003ff6:	d10c      	bne.n	8004012 <_vfiprintf_r+0x176>
 8003ff8:	7863      	ldrb	r3, [r4, #1]
 8003ffa:	2b2a      	cmp	r3, #42	; 0x2a
 8003ffc:	d135      	bne.n	800406a <_vfiprintf_r+0x1ce>
 8003ffe:	9b03      	ldr	r3, [sp, #12]
 8004000:	3402      	adds	r4, #2
 8004002:	1d1a      	adds	r2, r3, #4
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	9203      	str	r2, [sp, #12]
 8004008:	2b00      	cmp	r3, #0
 800400a:	bfb8      	it	lt
 800400c:	f04f 33ff 	movlt.w	r3, #4294967295
 8004010:	9305      	str	r3, [sp, #20]
 8004012:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80040f8 <_vfiprintf_r+0x25c>
 8004016:	2203      	movs	r2, #3
 8004018:	4650      	mov	r0, sl
 800401a:	7821      	ldrb	r1, [r4, #0]
 800401c:	f000 fcfa 	bl	8004a14 <memchr>
 8004020:	b140      	cbz	r0, 8004034 <_vfiprintf_r+0x198>
 8004022:	2340      	movs	r3, #64	; 0x40
 8004024:	eba0 000a 	sub.w	r0, r0, sl
 8004028:	fa03 f000 	lsl.w	r0, r3, r0
 800402c:	9b04      	ldr	r3, [sp, #16]
 800402e:	3401      	adds	r4, #1
 8004030:	4303      	orrs	r3, r0
 8004032:	9304      	str	r3, [sp, #16]
 8004034:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004038:	2206      	movs	r2, #6
 800403a:	482c      	ldr	r0, [pc, #176]	; (80040ec <_vfiprintf_r+0x250>)
 800403c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004040:	f000 fce8 	bl	8004a14 <memchr>
 8004044:	2800      	cmp	r0, #0
 8004046:	d03f      	beq.n	80040c8 <_vfiprintf_r+0x22c>
 8004048:	4b29      	ldr	r3, [pc, #164]	; (80040f0 <_vfiprintf_r+0x254>)
 800404a:	bb1b      	cbnz	r3, 8004094 <_vfiprintf_r+0x1f8>
 800404c:	9b03      	ldr	r3, [sp, #12]
 800404e:	3307      	adds	r3, #7
 8004050:	f023 0307 	bic.w	r3, r3, #7
 8004054:	3308      	adds	r3, #8
 8004056:	9303      	str	r3, [sp, #12]
 8004058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800405a:	443b      	add	r3, r7
 800405c:	9309      	str	r3, [sp, #36]	; 0x24
 800405e:	e767      	b.n	8003f30 <_vfiprintf_r+0x94>
 8004060:	460c      	mov	r4, r1
 8004062:	2001      	movs	r0, #1
 8004064:	fb0c 3202 	mla	r2, ip, r2, r3
 8004068:	e7a5      	b.n	8003fb6 <_vfiprintf_r+0x11a>
 800406a:	2300      	movs	r3, #0
 800406c:	f04f 0c0a 	mov.w	ip, #10
 8004070:	4619      	mov	r1, r3
 8004072:	3401      	adds	r4, #1
 8004074:	9305      	str	r3, [sp, #20]
 8004076:	4620      	mov	r0, r4
 8004078:	f810 2b01 	ldrb.w	r2, [r0], #1
 800407c:	3a30      	subs	r2, #48	; 0x30
 800407e:	2a09      	cmp	r2, #9
 8004080:	d903      	bls.n	800408a <_vfiprintf_r+0x1ee>
 8004082:	2b00      	cmp	r3, #0
 8004084:	d0c5      	beq.n	8004012 <_vfiprintf_r+0x176>
 8004086:	9105      	str	r1, [sp, #20]
 8004088:	e7c3      	b.n	8004012 <_vfiprintf_r+0x176>
 800408a:	4604      	mov	r4, r0
 800408c:	2301      	movs	r3, #1
 800408e:	fb0c 2101 	mla	r1, ip, r1, r2
 8004092:	e7f0      	b.n	8004076 <_vfiprintf_r+0x1da>
 8004094:	ab03      	add	r3, sp, #12
 8004096:	9300      	str	r3, [sp, #0]
 8004098:	462a      	mov	r2, r5
 800409a:	4630      	mov	r0, r6
 800409c:	4b15      	ldr	r3, [pc, #84]	; (80040f4 <_vfiprintf_r+0x258>)
 800409e:	a904      	add	r1, sp, #16
 80040a0:	f3af 8000 	nop.w
 80040a4:	4607      	mov	r7, r0
 80040a6:	1c78      	adds	r0, r7, #1
 80040a8:	d1d6      	bne.n	8004058 <_vfiprintf_r+0x1bc>
 80040aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80040ac:	07d9      	lsls	r1, r3, #31
 80040ae:	d405      	bmi.n	80040bc <_vfiprintf_r+0x220>
 80040b0:	89ab      	ldrh	r3, [r5, #12]
 80040b2:	059a      	lsls	r2, r3, #22
 80040b4:	d402      	bmi.n	80040bc <_vfiprintf_r+0x220>
 80040b6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80040b8:	f000 fc47 	bl	800494a <__retarget_lock_release_recursive>
 80040bc:	89ab      	ldrh	r3, [r5, #12]
 80040be:	065b      	lsls	r3, r3, #25
 80040c0:	f53f af12 	bmi.w	8003ee8 <_vfiprintf_r+0x4c>
 80040c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80040c6:	e711      	b.n	8003eec <_vfiprintf_r+0x50>
 80040c8:	ab03      	add	r3, sp, #12
 80040ca:	9300      	str	r3, [sp, #0]
 80040cc:	462a      	mov	r2, r5
 80040ce:	4630      	mov	r0, r6
 80040d0:	4b08      	ldr	r3, [pc, #32]	; (80040f4 <_vfiprintf_r+0x258>)
 80040d2:	a904      	add	r1, sp, #16
 80040d4:	f000 f882 	bl	80041dc <_printf_i>
 80040d8:	e7e4      	b.n	80040a4 <_vfiprintf_r+0x208>
 80040da:	bf00      	nop
 80040dc:	08005104 	.word	0x08005104
 80040e0:	08005124 	.word	0x08005124
 80040e4:	080050e4 	.word	0x080050e4
 80040e8:	080050b1 	.word	0x080050b1
 80040ec:	080050bb 	.word	0x080050bb
 80040f0:	00000000 	.word	0x00000000
 80040f4:	08003e77 	.word	0x08003e77
 80040f8:	080050b7 	.word	0x080050b7

080040fc <_printf_common>:
 80040fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004100:	4616      	mov	r6, r2
 8004102:	4699      	mov	r9, r3
 8004104:	688a      	ldr	r2, [r1, #8]
 8004106:	690b      	ldr	r3, [r1, #16]
 8004108:	4607      	mov	r7, r0
 800410a:	4293      	cmp	r3, r2
 800410c:	bfb8      	it	lt
 800410e:	4613      	movlt	r3, r2
 8004110:	6033      	str	r3, [r6, #0]
 8004112:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004116:	460c      	mov	r4, r1
 8004118:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800411c:	b10a      	cbz	r2, 8004122 <_printf_common+0x26>
 800411e:	3301      	adds	r3, #1
 8004120:	6033      	str	r3, [r6, #0]
 8004122:	6823      	ldr	r3, [r4, #0]
 8004124:	0699      	lsls	r1, r3, #26
 8004126:	bf42      	ittt	mi
 8004128:	6833      	ldrmi	r3, [r6, #0]
 800412a:	3302      	addmi	r3, #2
 800412c:	6033      	strmi	r3, [r6, #0]
 800412e:	6825      	ldr	r5, [r4, #0]
 8004130:	f015 0506 	ands.w	r5, r5, #6
 8004134:	d106      	bne.n	8004144 <_printf_common+0x48>
 8004136:	f104 0a19 	add.w	sl, r4, #25
 800413a:	68e3      	ldr	r3, [r4, #12]
 800413c:	6832      	ldr	r2, [r6, #0]
 800413e:	1a9b      	subs	r3, r3, r2
 8004140:	42ab      	cmp	r3, r5
 8004142:	dc28      	bgt.n	8004196 <_printf_common+0x9a>
 8004144:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004148:	1e13      	subs	r3, r2, #0
 800414a:	6822      	ldr	r2, [r4, #0]
 800414c:	bf18      	it	ne
 800414e:	2301      	movne	r3, #1
 8004150:	0692      	lsls	r2, r2, #26
 8004152:	d42d      	bmi.n	80041b0 <_printf_common+0xb4>
 8004154:	4649      	mov	r1, r9
 8004156:	4638      	mov	r0, r7
 8004158:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800415c:	47c0      	blx	r8
 800415e:	3001      	adds	r0, #1
 8004160:	d020      	beq.n	80041a4 <_printf_common+0xa8>
 8004162:	6823      	ldr	r3, [r4, #0]
 8004164:	68e5      	ldr	r5, [r4, #12]
 8004166:	f003 0306 	and.w	r3, r3, #6
 800416a:	2b04      	cmp	r3, #4
 800416c:	bf18      	it	ne
 800416e:	2500      	movne	r5, #0
 8004170:	6832      	ldr	r2, [r6, #0]
 8004172:	f04f 0600 	mov.w	r6, #0
 8004176:	68a3      	ldr	r3, [r4, #8]
 8004178:	bf08      	it	eq
 800417a:	1aad      	subeq	r5, r5, r2
 800417c:	6922      	ldr	r2, [r4, #16]
 800417e:	bf08      	it	eq
 8004180:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004184:	4293      	cmp	r3, r2
 8004186:	bfc4      	itt	gt
 8004188:	1a9b      	subgt	r3, r3, r2
 800418a:	18ed      	addgt	r5, r5, r3
 800418c:	341a      	adds	r4, #26
 800418e:	42b5      	cmp	r5, r6
 8004190:	d11a      	bne.n	80041c8 <_printf_common+0xcc>
 8004192:	2000      	movs	r0, #0
 8004194:	e008      	b.n	80041a8 <_printf_common+0xac>
 8004196:	2301      	movs	r3, #1
 8004198:	4652      	mov	r2, sl
 800419a:	4649      	mov	r1, r9
 800419c:	4638      	mov	r0, r7
 800419e:	47c0      	blx	r8
 80041a0:	3001      	adds	r0, #1
 80041a2:	d103      	bne.n	80041ac <_printf_common+0xb0>
 80041a4:	f04f 30ff 	mov.w	r0, #4294967295
 80041a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80041ac:	3501      	adds	r5, #1
 80041ae:	e7c4      	b.n	800413a <_printf_common+0x3e>
 80041b0:	2030      	movs	r0, #48	; 0x30
 80041b2:	18e1      	adds	r1, r4, r3
 80041b4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80041b8:	1c5a      	adds	r2, r3, #1
 80041ba:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80041be:	4422      	add	r2, r4
 80041c0:	3302      	adds	r3, #2
 80041c2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80041c6:	e7c5      	b.n	8004154 <_printf_common+0x58>
 80041c8:	2301      	movs	r3, #1
 80041ca:	4622      	mov	r2, r4
 80041cc:	4649      	mov	r1, r9
 80041ce:	4638      	mov	r0, r7
 80041d0:	47c0      	blx	r8
 80041d2:	3001      	adds	r0, #1
 80041d4:	d0e6      	beq.n	80041a4 <_printf_common+0xa8>
 80041d6:	3601      	adds	r6, #1
 80041d8:	e7d9      	b.n	800418e <_printf_common+0x92>
	...

080041dc <_printf_i>:
 80041dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80041e0:	460c      	mov	r4, r1
 80041e2:	7e27      	ldrb	r7, [r4, #24]
 80041e4:	4691      	mov	r9, r2
 80041e6:	2f78      	cmp	r7, #120	; 0x78
 80041e8:	4680      	mov	r8, r0
 80041ea:	469a      	mov	sl, r3
 80041ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 80041ee:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80041f2:	d807      	bhi.n	8004204 <_printf_i+0x28>
 80041f4:	2f62      	cmp	r7, #98	; 0x62
 80041f6:	d80a      	bhi.n	800420e <_printf_i+0x32>
 80041f8:	2f00      	cmp	r7, #0
 80041fa:	f000 80d9 	beq.w	80043b0 <_printf_i+0x1d4>
 80041fe:	2f58      	cmp	r7, #88	; 0x58
 8004200:	f000 80a4 	beq.w	800434c <_printf_i+0x170>
 8004204:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004208:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800420c:	e03a      	b.n	8004284 <_printf_i+0xa8>
 800420e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004212:	2b15      	cmp	r3, #21
 8004214:	d8f6      	bhi.n	8004204 <_printf_i+0x28>
 8004216:	a001      	add	r0, pc, #4	; (adr r0, 800421c <_printf_i+0x40>)
 8004218:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800421c:	08004275 	.word	0x08004275
 8004220:	08004289 	.word	0x08004289
 8004224:	08004205 	.word	0x08004205
 8004228:	08004205 	.word	0x08004205
 800422c:	08004205 	.word	0x08004205
 8004230:	08004205 	.word	0x08004205
 8004234:	08004289 	.word	0x08004289
 8004238:	08004205 	.word	0x08004205
 800423c:	08004205 	.word	0x08004205
 8004240:	08004205 	.word	0x08004205
 8004244:	08004205 	.word	0x08004205
 8004248:	08004397 	.word	0x08004397
 800424c:	080042b9 	.word	0x080042b9
 8004250:	08004379 	.word	0x08004379
 8004254:	08004205 	.word	0x08004205
 8004258:	08004205 	.word	0x08004205
 800425c:	080043b9 	.word	0x080043b9
 8004260:	08004205 	.word	0x08004205
 8004264:	080042b9 	.word	0x080042b9
 8004268:	08004205 	.word	0x08004205
 800426c:	08004205 	.word	0x08004205
 8004270:	08004381 	.word	0x08004381
 8004274:	680b      	ldr	r3, [r1, #0]
 8004276:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800427a:	1d1a      	adds	r2, r3, #4
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	600a      	str	r2, [r1, #0]
 8004280:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004284:	2301      	movs	r3, #1
 8004286:	e0a4      	b.n	80043d2 <_printf_i+0x1f6>
 8004288:	6825      	ldr	r5, [r4, #0]
 800428a:	6808      	ldr	r0, [r1, #0]
 800428c:	062e      	lsls	r6, r5, #24
 800428e:	f100 0304 	add.w	r3, r0, #4
 8004292:	d50a      	bpl.n	80042aa <_printf_i+0xce>
 8004294:	6805      	ldr	r5, [r0, #0]
 8004296:	600b      	str	r3, [r1, #0]
 8004298:	2d00      	cmp	r5, #0
 800429a:	da03      	bge.n	80042a4 <_printf_i+0xc8>
 800429c:	232d      	movs	r3, #45	; 0x2d
 800429e:	426d      	negs	r5, r5
 80042a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80042a4:	230a      	movs	r3, #10
 80042a6:	485e      	ldr	r0, [pc, #376]	; (8004420 <_printf_i+0x244>)
 80042a8:	e019      	b.n	80042de <_printf_i+0x102>
 80042aa:	f015 0f40 	tst.w	r5, #64	; 0x40
 80042ae:	6805      	ldr	r5, [r0, #0]
 80042b0:	600b      	str	r3, [r1, #0]
 80042b2:	bf18      	it	ne
 80042b4:	b22d      	sxthne	r5, r5
 80042b6:	e7ef      	b.n	8004298 <_printf_i+0xbc>
 80042b8:	680b      	ldr	r3, [r1, #0]
 80042ba:	6825      	ldr	r5, [r4, #0]
 80042bc:	1d18      	adds	r0, r3, #4
 80042be:	6008      	str	r0, [r1, #0]
 80042c0:	0628      	lsls	r0, r5, #24
 80042c2:	d501      	bpl.n	80042c8 <_printf_i+0xec>
 80042c4:	681d      	ldr	r5, [r3, #0]
 80042c6:	e002      	b.n	80042ce <_printf_i+0xf2>
 80042c8:	0669      	lsls	r1, r5, #25
 80042ca:	d5fb      	bpl.n	80042c4 <_printf_i+0xe8>
 80042cc:	881d      	ldrh	r5, [r3, #0]
 80042ce:	2f6f      	cmp	r7, #111	; 0x6f
 80042d0:	bf0c      	ite	eq
 80042d2:	2308      	moveq	r3, #8
 80042d4:	230a      	movne	r3, #10
 80042d6:	4852      	ldr	r0, [pc, #328]	; (8004420 <_printf_i+0x244>)
 80042d8:	2100      	movs	r1, #0
 80042da:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80042de:	6866      	ldr	r6, [r4, #4]
 80042e0:	2e00      	cmp	r6, #0
 80042e2:	bfa8      	it	ge
 80042e4:	6821      	ldrge	r1, [r4, #0]
 80042e6:	60a6      	str	r6, [r4, #8]
 80042e8:	bfa4      	itt	ge
 80042ea:	f021 0104 	bicge.w	r1, r1, #4
 80042ee:	6021      	strge	r1, [r4, #0]
 80042f0:	b90d      	cbnz	r5, 80042f6 <_printf_i+0x11a>
 80042f2:	2e00      	cmp	r6, #0
 80042f4:	d04d      	beq.n	8004392 <_printf_i+0x1b6>
 80042f6:	4616      	mov	r6, r2
 80042f8:	fbb5 f1f3 	udiv	r1, r5, r3
 80042fc:	fb03 5711 	mls	r7, r3, r1, r5
 8004300:	5dc7      	ldrb	r7, [r0, r7]
 8004302:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004306:	462f      	mov	r7, r5
 8004308:	42bb      	cmp	r3, r7
 800430a:	460d      	mov	r5, r1
 800430c:	d9f4      	bls.n	80042f8 <_printf_i+0x11c>
 800430e:	2b08      	cmp	r3, #8
 8004310:	d10b      	bne.n	800432a <_printf_i+0x14e>
 8004312:	6823      	ldr	r3, [r4, #0]
 8004314:	07df      	lsls	r7, r3, #31
 8004316:	d508      	bpl.n	800432a <_printf_i+0x14e>
 8004318:	6923      	ldr	r3, [r4, #16]
 800431a:	6861      	ldr	r1, [r4, #4]
 800431c:	4299      	cmp	r1, r3
 800431e:	bfde      	ittt	le
 8004320:	2330      	movle	r3, #48	; 0x30
 8004322:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004326:	f106 36ff 	addle.w	r6, r6, #4294967295
 800432a:	1b92      	subs	r2, r2, r6
 800432c:	6122      	str	r2, [r4, #16]
 800432e:	464b      	mov	r3, r9
 8004330:	4621      	mov	r1, r4
 8004332:	4640      	mov	r0, r8
 8004334:	f8cd a000 	str.w	sl, [sp]
 8004338:	aa03      	add	r2, sp, #12
 800433a:	f7ff fedf 	bl	80040fc <_printf_common>
 800433e:	3001      	adds	r0, #1
 8004340:	d14c      	bne.n	80043dc <_printf_i+0x200>
 8004342:	f04f 30ff 	mov.w	r0, #4294967295
 8004346:	b004      	add	sp, #16
 8004348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800434c:	4834      	ldr	r0, [pc, #208]	; (8004420 <_printf_i+0x244>)
 800434e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004352:	680e      	ldr	r6, [r1, #0]
 8004354:	6823      	ldr	r3, [r4, #0]
 8004356:	f856 5b04 	ldr.w	r5, [r6], #4
 800435a:	061f      	lsls	r7, r3, #24
 800435c:	600e      	str	r6, [r1, #0]
 800435e:	d514      	bpl.n	800438a <_printf_i+0x1ae>
 8004360:	07d9      	lsls	r1, r3, #31
 8004362:	bf44      	itt	mi
 8004364:	f043 0320 	orrmi.w	r3, r3, #32
 8004368:	6023      	strmi	r3, [r4, #0]
 800436a:	b91d      	cbnz	r5, 8004374 <_printf_i+0x198>
 800436c:	6823      	ldr	r3, [r4, #0]
 800436e:	f023 0320 	bic.w	r3, r3, #32
 8004372:	6023      	str	r3, [r4, #0]
 8004374:	2310      	movs	r3, #16
 8004376:	e7af      	b.n	80042d8 <_printf_i+0xfc>
 8004378:	6823      	ldr	r3, [r4, #0]
 800437a:	f043 0320 	orr.w	r3, r3, #32
 800437e:	6023      	str	r3, [r4, #0]
 8004380:	2378      	movs	r3, #120	; 0x78
 8004382:	4828      	ldr	r0, [pc, #160]	; (8004424 <_printf_i+0x248>)
 8004384:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004388:	e7e3      	b.n	8004352 <_printf_i+0x176>
 800438a:	065e      	lsls	r6, r3, #25
 800438c:	bf48      	it	mi
 800438e:	b2ad      	uxthmi	r5, r5
 8004390:	e7e6      	b.n	8004360 <_printf_i+0x184>
 8004392:	4616      	mov	r6, r2
 8004394:	e7bb      	b.n	800430e <_printf_i+0x132>
 8004396:	680b      	ldr	r3, [r1, #0]
 8004398:	6826      	ldr	r6, [r4, #0]
 800439a:	1d1d      	adds	r5, r3, #4
 800439c:	6960      	ldr	r0, [r4, #20]
 800439e:	600d      	str	r5, [r1, #0]
 80043a0:	0635      	lsls	r5, r6, #24
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	d501      	bpl.n	80043aa <_printf_i+0x1ce>
 80043a6:	6018      	str	r0, [r3, #0]
 80043a8:	e002      	b.n	80043b0 <_printf_i+0x1d4>
 80043aa:	0671      	lsls	r1, r6, #25
 80043ac:	d5fb      	bpl.n	80043a6 <_printf_i+0x1ca>
 80043ae:	8018      	strh	r0, [r3, #0]
 80043b0:	2300      	movs	r3, #0
 80043b2:	4616      	mov	r6, r2
 80043b4:	6123      	str	r3, [r4, #16]
 80043b6:	e7ba      	b.n	800432e <_printf_i+0x152>
 80043b8:	680b      	ldr	r3, [r1, #0]
 80043ba:	1d1a      	adds	r2, r3, #4
 80043bc:	600a      	str	r2, [r1, #0]
 80043be:	681e      	ldr	r6, [r3, #0]
 80043c0:	2100      	movs	r1, #0
 80043c2:	4630      	mov	r0, r6
 80043c4:	6862      	ldr	r2, [r4, #4]
 80043c6:	f000 fb25 	bl	8004a14 <memchr>
 80043ca:	b108      	cbz	r0, 80043d0 <_printf_i+0x1f4>
 80043cc:	1b80      	subs	r0, r0, r6
 80043ce:	6060      	str	r0, [r4, #4]
 80043d0:	6863      	ldr	r3, [r4, #4]
 80043d2:	6123      	str	r3, [r4, #16]
 80043d4:	2300      	movs	r3, #0
 80043d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80043da:	e7a8      	b.n	800432e <_printf_i+0x152>
 80043dc:	4632      	mov	r2, r6
 80043de:	4649      	mov	r1, r9
 80043e0:	4640      	mov	r0, r8
 80043e2:	6923      	ldr	r3, [r4, #16]
 80043e4:	47d0      	blx	sl
 80043e6:	3001      	adds	r0, #1
 80043e8:	d0ab      	beq.n	8004342 <_printf_i+0x166>
 80043ea:	6823      	ldr	r3, [r4, #0]
 80043ec:	079b      	lsls	r3, r3, #30
 80043ee:	d413      	bmi.n	8004418 <_printf_i+0x23c>
 80043f0:	68e0      	ldr	r0, [r4, #12]
 80043f2:	9b03      	ldr	r3, [sp, #12]
 80043f4:	4298      	cmp	r0, r3
 80043f6:	bfb8      	it	lt
 80043f8:	4618      	movlt	r0, r3
 80043fa:	e7a4      	b.n	8004346 <_printf_i+0x16a>
 80043fc:	2301      	movs	r3, #1
 80043fe:	4632      	mov	r2, r6
 8004400:	4649      	mov	r1, r9
 8004402:	4640      	mov	r0, r8
 8004404:	47d0      	blx	sl
 8004406:	3001      	adds	r0, #1
 8004408:	d09b      	beq.n	8004342 <_printf_i+0x166>
 800440a:	3501      	adds	r5, #1
 800440c:	68e3      	ldr	r3, [r4, #12]
 800440e:	9903      	ldr	r1, [sp, #12]
 8004410:	1a5b      	subs	r3, r3, r1
 8004412:	42ab      	cmp	r3, r5
 8004414:	dcf2      	bgt.n	80043fc <_printf_i+0x220>
 8004416:	e7eb      	b.n	80043f0 <_printf_i+0x214>
 8004418:	2500      	movs	r5, #0
 800441a:	f104 0619 	add.w	r6, r4, #25
 800441e:	e7f5      	b.n	800440c <_printf_i+0x230>
 8004420:	080050c2 	.word	0x080050c2
 8004424:	080050d3 	.word	0x080050d3

08004428 <_sbrk_r>:
 8004428:	b538      	push	{r3, r4, r5, lr}
 800442a:	2300      	movs	r3, #0
 800442c:	4d05      	ldr	r5, [pc, #20]	; (8004444 <_sbrk_r+0x1c>)
 800442e:	4604      	mov	r4, r0
 8004430:	4608      	mov	r0, r1
 8004432:	602b      	str	r3, [r5, #0]
 8004434:	f7fc fb10 	bl	8000a58 <_sbrk>
 8004438:	1c43      	adds	r3, r0, #1
 800443a:	d102      	bne.n	8004442 <_sbrk_r+0x1a>
 800443c:	682b      	ldr	r3, [r5, #0]
 800443e:	b103      	cbz	r3, 8004442 <_sbrk_r+0x1a>
 8004440:	6023      	str	r3, [r4, #0]
 8004442:	bd38      	pop	{r3, r4, r5, pc}
 8004444:	20000288 	.word	0x20000288

08004448 <__swbuf_r>:
 8004448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800444a:	460e      	mov	r6, r1
 800444c:	4614      	mov	r4, r2
 800444e:	4605      	mov	r5, r0
 8004450:	b118      	cbz	r0, 800445a <__swbuf_r+0x12>
 8004452:	6983      	ldr	r3, [r0, #24]
 8004454:	b90b      	cbnz	r3, 800445a <__swbuf_r+0x12>
 8004456:	f000 f9d9 	bl	800480c <__sinit>
 800445a:	4b21      	ldr	r3, [pc, #132]	; (80044e0 <__swbuf_r+0x98>)
 800445c:	429c      	cmp	r4, r3
 800445e:	d12b      	bne.n	80044b8 <__swbuf_r+0x70>
 8004460:	686c      	ldr	r4, [r5, #4]
 8004462:	69a3      	ldr	r3, [r4, #24]
 8004464:	60a3      	str	r3, [r4, #8]
 8004466:	89a3      	ldrh	r3, [r4, #12]
 8004468:	071a      	lsls	r2, r3, #28
 800446a:	d52f      	bpl.n	80044cc <__swbuf_r+0x84>
 800446c:	6923      	ldr	r3, [r4, #16]
 800446e:	b36b      	cbz	r3, 80044cc <__swbuf_r+0x84>
 8004470:	6923      	ldr	r3, [r4, #16]
 8004472:	6820      	ldr	r0, [r4, #0]
 8004474:	b2f6      	uxtb	r6, r6
 8004476:	1ac0      	subs	r0, r0, r3
 8004478:	6963      	ldr	r3, [r4, #20]
 800447a:	4637      	mov	r7, r6
 800447c:	4283      	cmp	r3, r0
 800447e:	dc04      	bgt.n	800448a <__swbuf_r+0x42>
 8004480:	4621      	mov	r1, r4
 8004482:	4628      	mov	r0, r5
 8004484:	f000 f92e 	bl	80046e4 <_fflush_r>
 8004488:	bb30      	cbnz	r0, 80044d8 <__swbuf_r+0x90>
 800448a:	68a3      	ldr	r3, [r4, #8]
 800448c:	3001      	adds	r0, #1
 800448e:	3b01      	subs	r3, #1
 8004490:	60a3      	str	r3, [r4, #8]
 8004492:	6823      	ldr	r3, [r4, #0]
 8004494:	1c5a      	adds	r2, r3, #1
 8004496:	6022      	str	r2, [r4, #0]
 8004498:	701e      	strb	r6, [r3, #0]
 800449a:	6963      	ldr	r3, [r4, #20]
 800449c:	4283      	cmp	r3, r0
 800449e:	d004      	beq.n	80044aa <__swbuf_r+0x62>
 80044a0:	89a3      	ldrh	r3, [r4, #12]
 80044a2:	07db      	lsls	r3, r3, #31
 80044a4:	d506      	bpl.n	80044b4 <__swbuf_r+0x6c>
 80044a6:	2e0a      	cmp	r6, #10
 80044a8:	d104      	bne.n	80044b4 <__swbuf_r+0x6c>
 80044aa:	4621      	mov	r1, r4
 80044ac:	4628      	mov	r0, r5
 80044ae:	f000 f919 	bl	80046e4 <_fflush_r>
 80044b2:	b988      	cbnz	r0, 80044d8 <__swbuf_r+0x90>
 80044b4:	4638      	mov	r0, r7
 80044b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80044b8:	4b0a      	ldr	r3, [pc, #40]	; (80044e4 <__swbuf_r+0x9c>)
 80044ba:	429c      	cmp	r4, r3
 80044bc:	d101      	bne.n	80044c2 <__swbuf_r+0x7a>
 80044be:	68ac      	ldr	r4, [r5, #8]
 80044c0:	e7cf      	b.n	8004462 <__swbuf_r+0x1a>
 80044c2:	4b09      	ldr	r3, [pc, #36]	; (80044e8 <__swbuf_r+0xa0>)
 80044c4:	429c      	cmp	r4, r3
 80044c6:	bf08      	it	eq
 80044c8:	68ec      	ldreq	r4, [r5, #12]
 80044ca:	e7ca      	b.n	8004462 <__swbuf_r+0x1a>
 80044cc:	4621      	mov	r1, r4
 80044ce:	4628      	mov	r0, r5
 80044d0:	f000 f80c 	bl	80044ec <__swsetup_r>
 80044d4:	2800      	cmp	r0, #0
 80044d6:	d0cb      	beq.n	8004470 <__swbuf_r+0x28>
 80044d8:	f04f 37ff 	mov.w	r7, #4294967295
 80044dc:	e7ea      	b.n	80044b4 <__swbuf_r+0x6c>
 80044de:	bf00      	nop
 80044e0:	08005104 	.word	0x08005104
 80044e4:	08005124 	.word	0x08005124
 80044e8:	080050e4 	.word	0x080050e4

080044ec <__swsetup_r>:
 80044ec:	4b32      	ldr	r3, [pc, #200]	; (80045b8 <__swsetup_r+0xcc>)
 80044ee:	b570      	push	{r4, r5, r6, lr}
 80044f0:	681d      	ldr	r5, [r3, #0]
 80044f2:	4606      	mov	r6, r0
 80044f4:	460c      	mov	r4, r1
 80044f6:	b125      	cbz	r5, 8004502 <__swsetup_r+0x16>
 80044f8:	69ab      	ldr	r3, [r5, #24]
 80044fa:	b913      	cbnz	r3, 8004502 <__swsetup_r+0x16>
 80044fc:	4628      	mov	r0, r5
 80044fe:	f000 f985 	bl	800480c <__sinit>
 8004502:	4b2e      	ldr	r3, [pc, #184]	; (80045bc <__swsetup_r+0xd0>)
 8004504:	429c      	cmp	r4, r3
 8004506:	d10f      	bne.n	8004528 <__swsetup_r+0x3c>
 8004508:	686c      	ldr	r4, [r5, #4]
 800450a:	89a3      	ldrh	r3, [r4, #12]
 800450c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004510:	0719      	lsls	r1, r3, #28
 8004512:	d42c      	bmi.n	800456e <__swsetup_r+0x82>
 8004514:	06dd      	lsls	r5, r3, #27
 8004516:	d411      	bmi.n	800453c <__swsetup_r+0x50>
 8004518:	2309      	movs	r3, #9
 800451a:	6033      	str	r3, [r6, #0]
 800451c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004520:	f04f 30ff 	mov.w	r0, #4294967295
 8004524:	81a3      	strh	r3, [r4, #12]
 8004526:	e03e      	b.n	80045a6 <__swsetup_r+0xba>
 8004528:	4b25      	ldr	r3, [pc, #148]	; (80045c0 <__swsetup_r+0xd4>)
 800452a:	429c      	cmp	r4, r3
 800452c:	d101      	bne.n	8004532 <__swsetup_r+0x46>
 800452e:	68ac      	ldr	r4, [r5, #8]
 8004530:	e7eb      	b.n	800450a <__swsetup_r+0x1e>
 8004532:	4b24      	ldr	r3, [pc, #144]	; (80045c4 <__swsetup_r+0xd8>)
 8004534:	429c      	cmp	r4, r3
 8004536:	bf08      	it	eq
 8004538:	68ec      	ldreq	r4, [r5, #12]
 800453a:	e7e6      	b.n	800450a <__swsetup_r+0x1e>
 800453c:	0758      	lsls	r0, r3, #29
 800453e:	d512      	bpl.n	8004566 <__swsetup_r+0x7a>
 8004540:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004542:	b141      	cbz	r1, 8004556 <__swsetup_r+0x6a>
 8004544:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004548:	4299      	cmp	r1, r3
 800454a:	d002      	beq.n	8004552 <__swsetup_r+0x66>
 800454c:	4630      	mov	r0, r6
 800454e:	f7ff fa7b 	bl	8003a48 <_free_r>
 8004552:	2300      	movs	r3, #0
 8004554:	6363      	str	r3, [r4, #52]	; 0x34
 8004556:	89a3      	ldrh	r3, [r4, #12]
 8004558:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800455c:	81a3      	strh	r3, [r4, #12]
 800455e:	2300      	movs	r3, #0
 8004560:	6063      	str	r3, [r4, #4]
 8004562:	6923      	ldr	r3, [r4, #16]
 8004564:	6023      	str	r3, [r4, #0]
 8004566:	89a3      	ldrh	r3, [r4, #12]
 8004568:	f043 0308 	orr.w	r3, r3, #8
 800456c:	81a3      	strh	r3, [r4, #12]
 800456e:	6923      	ldr	r3, [r4, #16]
 8004570:	b94b      	cbnz	r3, 8004586 <__swsetup_r+0x9a>
 8004572:	89a3      	ldrh	r3, [r4, #12]
 8004574:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004578:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800457c:	d003      	beq.n	8004586 <__swsetup_r+0x9a>
 800457e:	4621      	mov	r1, r4
 8004580:	4630      	mov	r0, r6
 8004582:	f000 fa07 	bl	8004994 <__smakebuf_r>
 8004586:	89a0      	ldrh	r0, [r4, #12]
 8004588:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800458c:	f010 0301 	ands.w	r3, r0, #1
 8004590:	d00a      	beq.n	80045a8 <__swsetup_r+0xbc>
 8004592:	2300      	movs	r3, #0
 8004594:	60a3      	str	r3, [r4, #8]
 8004596:	6963      	ldr	r3, [r4, #20]
 8004598:	425b      	negs	r3, r3
 800459a:	61a3      	str	r3, [r4, #24]
 800459c:	6923      	ldr	r3, [r4, #16]
 800459e:	b943      	cbnz	r3, 80045b2 <__swsetup_r+0xc6>
 80045a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80045a4:	d1ba      	bne.n	800451c <__swsetup_r+0x30>
 80045a6:	bd70      	pop	{r4, r5, r6, pc}
 80045a8:	0781      	lsls	r1, r0, #30
 80045aa:	bf58      	it	pl
 80045ac:	6963      	ldrpl	r3, [r4, #20]
 80045ae:	60a3      	str	r3, [r4, #8]
 80045b0:	e7f4      	b.n	800459c <__swsetup_r+0xb0>
 80045b2:	2000      	movs	r0, #0
 80045b4:	e7f7      	b.n	80045a6 <__swsetup_r+0xba>
 80045b6:	bf00      	nop
 80045b8:	2000000c 	.word	0x2000000c
 80045bc:	08005104 	.word	0x08005104
 80045c0:	08005124 	.word	0x08005124
 80045c4:	080050e4 	.word	0x080050e4

080045c8 <abort>:
 80045c8:	2006      	movs	r0, #6
 80045ca:	b508      	push	{r3, lr}
 80045cc:	f000 fab2 	bl	8004b34 <raise>
 80045d0:	2001      	movs	r0, #1
 80045d2:	f7fc f9ce 	bl	8000972 <_exit>
	...

080045d8 <__sflush_r>:
 80045d8:	898a      	ldrh	r2, [r1, #12]
 80045da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045de:	4605      	mov	r5, r0
 80045e0:	0710      	lsls	r0, r2, #28
 80045e2:	460c      	mov	r4, r1
 80045e4:	d458      	bmi.n	8004698 <__sflush_r+0xc0>
 80045e6:	684b      	ldr	r3, [r1, #4]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	dc05      	bgt.n	80045f8 <__sflush_r+0x20>
 80045ec:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	dc02      	bgt.n	80045f8 <__sflush_r+0x20>
 80045f2:	2000      	movs	r0, #0
 80045f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80045fa:	2e00      	cmp	r6, #0
 80045fc:	d0f9      	beq.n	80045f2 <__sflush_r+0x1a>
 80045fe:	2300      	movs	r3, #0
 8004600:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004604:	682f      	ldr	r7, [r5, #0]
 8004606:	602b      	str	r3, [r5, #0]
 8004608:	d032      	beq.n	8004670 <__sflush_r+0x98>
 800460a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800460c:	89a3      	ldrh	r3, [r4, #12]
 800460e:	075a      	lsls	r2, r3, #29
 8004610:	d505      	bpl.n	800461e <__sflush_r+0x46>
 8004612:	6863      	ldr	r3, [r4, #4]
 8004614:	1ac0      	subs	r0, r0, r3
 8004616:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004618:	b10b      	cbz	r3, 800461e <__sflush_r+0x46>
 800461a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800461c:	1ac0      	subs	r0, r0, r3
 800461e:	2300      	movs	r3, #0
 8004620:	4602      	mov	r2, r0
 8004622:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004624:	4628      	mov	r0, r5
 8004626:	6a21      	ldr	r1, [r4, #32]
 8004628:	47b0      	blx	r6
 800462a:	1c43      	adds	r3, r0, #1
 800462c:	89a3      	ldrh	r3, [r4, #12]
 800462e:	d106      	bne.n	800463e <__sflush_r+0x66>
 8004630:	6829      	ldr	r1, [r5, #0]
 8004632:	291d      	cmp	r1, #29
 8004634:	d82c      	bhi.n	8004690 <__sflush_r+0xb8>
 8004636:	4a2a      	ldr	r2, [pc, #168]	; (80046e0 <__sflush_r+0x108>)
 8004638:	40ca      	lsrs	r2, r1
 800463a:	07d6      	lsls	r6, r2, #31
 800463c:	d528      	bpl.n	8004690 <__sflush_r+0xb8>
 800463e:	2200      	movs	r2, #0
 8004640:	6062      	str	r2, [r4, #4]
 8004642:	6922      	ldr	r2, [r4, #16]
 8004644:	04d9      	lsls	r1, r3, #19
 8004646:	6022      	str	r2, [r4, #0]
 8004648:	d504      	bpl.n	8004654 <__sflush_r+0x7c>
 800464a:	1c42      	adds	r2, r0, #1
 800464c:	d101      	bne.n	8004652 <__sflush_r+0x7a>
 800464e:	682b      	ldr	r3, [r5, #0]
 8004650:	b903      	cbnz	r3, 8004654 <__sflush_r+0x7c>
 8004652:	6560      	str	r0, [r4, #84]	; 0x54
 8004654:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004656:	602f      	str	r7, [r5, #0]
 8004658:	2900      	cmp	r1, #0
 800465a:	d0ca      	beq.n	80045f2 <__sflush_r+0x1a>
 800465c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004660:	4299      	cmp	r1, r3
 8004662:	d002      	beq.n	800466a <__sflush_r+0x92>
 8004664:	4628      	mov	r0, r5
 8004666:	f7ff f9ef 	bl	8003a48 <_free_r>
 800466a:	2000      	movs	r0, #0
 800466c:	6360      	str	r0, [r4, #52]	; 0x34
 800466e:	e7c1      	b.n	80045f4 <__sflush_r+0x1c>
 8004670:	6a21      	ldr	r1, [r4, #32]
 8004672:	2301      	movs	r3, #1
 8004674:	4628      	mov	r0, r5
 8004676:	47b0      	blx	r6
 8004678:	1c41      	adds	r1, r0, #1
 800467a:	d1c7      	bne.n	800460c <__sflush_r+0x34>
 800467c:	682b      	ldr	r3, [r5, #0]
 800467e:	2b00      	cmp	r3, #0
 8004680:	d0c4      	beq.n	800460c <__sflush_r+0x34>
 8004682:	2b1d      	cmp	r3, #29
 8004684:	d001      	beq.n	800468a <__sflush_r+0xb2>
 8004686:	2b16      	cmp	r3, #22
 8004688:	d101      	bne.n	800468e <__sflush_r+0xb6>
 800468a:	602f      	str	r7, [r5, #0]
 800468c:	e7b1      	b.n	80045f2 <__sflush_r+0x1a>
 800468e:	89a3      	ldrh	r3, [r4, #12]
 8004690:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004694:	81a3      	strh	r3, [r4, #12]
 8004696:	e7ad      	b.n	80045f4 <__sflush_r+0x1c>
 8004698:	690f      	ldr	r7, [r1, #16]
 800469a:	2f00      	cmp	r7, #0
 800469c:	d0a9      	beq.n	80045f2 <__sflush_r+0x1a>
 800469e:	0793      	lsls	r3, r2, #30
 80046a0:	bf18      	it	ne
 80046a2:	2300      	movne	r3, #0
 80046a4:	680e      	ldr	r6, [r1, #0]
 80046a6:	bf08      	it	eq
 80046a8:	694b      	ldreq	r3, [r1, #20]
 80046aa:	eba6 0807 	sub.w	r8, r6, r7
 80046ae:	600f      	str	r7, [r1, #0]
 80046b0:	608b      	str	r3, [r1, #8]
 80046b2:	f1b8 0f00 	cmp.w	r8, #0
 80046b6:	dd9c      	ble.n	80045f2 <__sflush_r+0x1a>
 80046b8:	4643      	mov	r3, r8
 80046ba:	463a      	mov	r2, r7
 80046bc:	4628      	mov	r0, r5
 80046be:	6a21      	ldr	r1, [r4, #32]
 80046c0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80046c2:	47b0      	blx	r6
 80046c4:	2800      	cmp	r0, #0
 80046c6:	dc06      	bgt.n	80046d6 <__sflush_r+0xfe>
 80046c8:	89a3      	ldrh	r3, [r4, #12]
 80046ca:	f04f 30ff 	mov.w	r0, #4294967295
 80046ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80046d2:	81a3      	strh	r3, [r4, #12]
 80046d4:	e78e      	b.n	80045f4 <__sflush_r+0x1c>
 80046d6:	4407      	add	r7, r0
 80046d8:	eba8 0800 	sub.w	r8, r8, r0
 80046dc:	e7e9      	b.n	80046b2 <__sflush_r+0xda>
 80046de:	bf00      	nop
 80046e0:	20400001 	.word	0x20400001

080046e4 <_fflush_r>:
 80046e4:	b538      	push	{r3, r4, r5, lr}
 80046e6:	690b      	ldr	r3, [r1, #16]
 80046e8:	4605      	mov	r5, r0
 80046ea:	460c      	mov	r4, r1
 80046ec:	b913      	cbnz	r3, 80046f4 <_fflush_r+0x10>
 80046ee:	2500      	movs	r5, #0
 80046f0:	4628      	mov	r0, r5
 80046f2:	bd38      	pop	{r3, r4, r5, pc}
 80046f4:	b118      	cbz	r0, 80046fe <_fflush_r+0x1a>
 80046f6:	6983      	ldr	r3, [r0, #24]
 80046f8:	b90b      	cbnz	r3, 80046fe <_fflush_r+0x1a>
 80046fa:	f000 f887 	bl	800480c <__sinit>
 80046fe:	4b14      	ldr	r3, [pc, #80]	; (8004750 <_fflush_r+0x6c>)
 8004700:	429c      	cmp	r4, r3
 8004702:	d11b      	bne.n	800473c <_fflush_r+0x58>
 8004704:	686c      	ldr	r4, [r5, #4]
 8004706:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800470a:	2b00      	cmp	r3, #0
 800470c:	d0ef      	beq.n	80046ee <_fflush_r+0xa>
 800470e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004710:	07d0      	lsls	r0, r2, #31
 8004712:	d404      	bmi.n	800471e <_fflush_r+0x3a>
 8004714:	0599      	lsls	r1, r3, #22
 8004716:	d402      	bmi.n	800471e <_fflush_r+0x3a>
 8004718:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800471a:	f000 f915 	bl	8004948 <__retarget_lock_acquire_recursive>
 800471e:	4628      	mov	r0, r5
 8004720:	4621      	mov	r1, r4
 8004722:	f7ff ff59 	bl	80045d8 <__sflush_r>
 8004726:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004728:	4605      	mov	r5, r0
 800472a:	07da      	lsls	r2, r3, #31
 800472c:	d4e0      	bmi.n	80046f0 <_fflush_r+0xc>
 800472e:	89a3      	ldrh	r3, [r4, #12]
 8004730:	059b      	lsls	r3, r3, #22
 8004732:	d4dd      	bmi.n	80046f0 <_fflush_r+0xc>
 8004734:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004736:	f000 f908 	bl	800494a <__retarget_lock_release_recursive>
 800473a:	e7d9      	b.n	80046f0 <_fflush_r+0xc>
 800473c:	4b05      	ldr	r3, [pc, #20]	; (8004754 <_fflush_r+0x70>)
 800473e:	429c      	cmp	r4, r3
 8004740:	d101      	bne.n	8004746 <_fflush_r+0x62>
 8004742:	68ac      	ldr	r4, [r5, #8]
 8004744:	e7df      	b.n	8004706 <_fflush_r+0x22>
 8004746:	4b04      	ldr	r3, [pc, #16]	; (8004758 <_fflush_r+0x74>)
 8004748:	429c      	cmp	r4, r3
 800474a:	bf08      	it	eq
 800474c:	68ec      	ldreq	r4, [r5, #12]
 800474e:	e7da      	b.n	8004706 <_fflush_r+0x22>
 8004750:	08005104 	.word	0x08005104
 8004754:	08005124 	.word	0x08005124
 8004758:	080050e4 	.word	0x080050e4

0800475c <std>:
 800475c:	2300      	movs	r3, #0
 800475e:	b510      	push	{r4, lr}
 8004760:	4604      	mov	r4, r0
 8004762:	e9c0 3300 	strd	r3, r3, [r0]
 8004766:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800476a:	6083      	str	r3, [r0, #8]
 800476c:	8181      	strh	r1, [r0, #12]
 800476e:	6643      	str	r3, [r0, #100]	; 0x64
 8004770:	81c2      	strh	r2, [r0, #14]
 8004772:	6183      	str	r3, [r0, #24]
 8004774:	4619      	mov	r1, r3
 8004776:	2208      	movs	r2, #8
 8004778:	305c      	adds	r0, #92	; 0x5c
 800477a:	f7ff f819 	bl	80037b0 <memset>
 800477e:	4b05      	ldr	r3, [pc, #20]	; (8004794 <std+0x38>)
 8004780:	6224      	str	r4, [r4, #32]
 8004782:	6263      	str	r3, [r4, #36]	; 0x24
 8004784:	4b04      	ldr	r3, [pc, #16]	; (8004798 <std+0x3c>)
 8004786:	62a3      	str	r3, [r4, #40]	; 0x28
 8004788:	4b04      	ldr	r3, [pc, #16]	; (800479c <std+0x40>)
 800478a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800478c:	4b04      	ldr	r3, [pc, #16]	; (80047a0 <std+0x44>)
 800478e:	6323      	str	r3, [r4, #48]	; 0x30
 8004790:	bd10      	pop	{r4, pc}
 8004792:	bf00      	nop
 8004794:	08004b6d 	.word	0x08004b6d
 8004798:	08004b8f 	.word	0x08004b8f
 800479c:	08004bc7 	.word	0x08004bc7
 80047a0:	08004beb 	.word	0x08004beb

080047a4 <_cleanup_r>:
 80047a4:	4901      	ldr	r1, [pc, #4]	; (80047ac <_cleanup_r+0x8>)
 80047a6:	f000 b8af 	b.w	8004908 <_fwalk_reent>
 80047aa:	bf00      	nop
 80047ac:	080046e5 	.word	0x080046e5

080047b0 <__sfmoreglue>:
 80047b0:	b570      	push	{r4, r5, r6, lr}
 80047b2:	2568      	movs	r5, #104	; 0x68
 80047b4:	1e4a      	subs	r2, r1, #1
 80047b6:	4355      	muls	r5, r2
 80047b8:	460e      	mov	r6, r1
 80047ba:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80047be:	f7ff f98f 	bl	8003ae0 <_malloc_r>
 80047c2:	4604      	mov	r4, r0
 80047c4:	b140      	cbz	r0, 80047d8 <__sfmoreglue+0x28>
 80047c6:	2100      	movs	r1, #0
 80047c8:	e9c0 1600 	strd	r1, r6, [r0]
 80047cc:	300c      	adds	r0, #12
 80047ce:	60a0      	str	r0, [r4, #8]
 80047d0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80047d4:	f7fe ffec 	bl	80037b0 <memset>
 80047d8:	4620      	mov	r0, r4
 80047da:	bd70      	pop	{r4, r5, r6, pc}

080047dc <__sfp_lock_acquire>:
 80047dc:	4801      	ldr	r0, [pc, #4]	; (80047e4 <__sfp_lock_acquire+0x8>)
 80047de:	f000 b8b3 	b.w	8004948 <__retarget_lock_acquire_recursive>
 80047e2:	bf00      	nop
 80047e4:	20000284 	.word	0x20000284

080047e8 <__sfp_lock_release>:
 80047e8:	4801      	ldr	r0, [pc, #4]	; (80047f0 <__sfp_lock_release+0x8>)
 80047ea:	f000 b8ae 	b.w	800494a <__retarget_lock_release_recursive>
 80047ee:	bf00      	nop
 80047f0:	20000284 	.word	0x20000284

080047f4 <__sinit_lock_acquire>:
 80047f4:	4801      	ldr	r0, [pc, #4]	; (80047fc <__sinit_lock_acquire+0x8>)
 80047f6:	f000 b8a7 	b.w	8004948 <__retarget_lock_acquire_recursive>
 80047fa:	bf00      	nop
 80047fc:	2000027f 	.word	0x2000027f

08004800 <__sinit_lock_release>:
 8004800:	4801      	ldr	r0, [pc, #4]	; (8004808 <__sinit_lock_release+0x8>)
 8004802:	f000 b8a2 	b.w	800494a <__retarget_lock_release_recursive>
 8004806:	bf00      	nop
 8004808:	2000027f 	.word	0x2000027f

0800480c <__sinit>:
 800480c:	b510      	push	{r4, lr}
 800480e:	4604      	mov	r4, r0
 8004810:	f7ff fff0 	bl	80047f4 <__sinit_lock_acquire>
 8004814:	69a3      	ldr	r3, [r4, #24]
 8004816:	b11b      	cbz	r3, 8004820 <__sinit+0x14>
 8004818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800481c:	f7ff bff0 	b.w	8004800 <__sinit_lock_release>
 8004820:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004824:	6523      	str	r3, [r4, #80]	; 0x50
 8004826:	4b13      	ldr	r3, [pc, #76]	; (8004874 <__sinit+0x68>)
 8004828:	4a13      	ldr	r2, [pc, #76]	; (8004878 <__sinit+0x6c>)
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	62a2      	str	r2, [r4, #40]	; 0x28
 800482e:	42a3      	cmp	r3, r4
 8004830:	bf08      	it	eq
 8004832:	2301      	moveq	r3, #1
 8004834:	4620      	mov	r0, r4
 8004836:	bf08      	it	eq
 8004838:	61a3      	streq	r3, [r4, #24]
 800483a:	f000 f81f 	bl	800487c <__sfp>
 800483e:	6060      	str	r0, [r4, #4]
 8004840:	4620      	mov	r0, r4
 8004842:	f000 f81b 	bl	800487c <__sfp>
 8004846:	60a0      	str	r0, [r4, #8]
 8004848:	4620      	mov	r0, r4
 800484a:	f000 f817 	bl	800487c <__sfp>
 800484e:	2200      	movs	r2, #0
 8004850:	2104      	movs	r1, #4
 8004852:	60e0      	str	r0, [r4, #12]
 8004854:	6860      	ldr	r0, [r4, #4]
 8004856:	f7ff ff81 	bl	800475c <std>
 800485a:	2201      	movs	r2, #1
 800485c:	2109      	movs	r1, #9
 800485e:	68a0      	ldr	r0, [r4, #8]
 8004860:	f7ff ff7c 	bl	800475c <std>
 8004864:	2202      	movs	r2, #2
 8004866:	2112      	movs	r1, #18
 8004868:	68e0      	ldr	r0, [r4, #12]
 800486a:	f7ff ff77 	bl	800475c <std>
 800486e:	2301      	movs	r3, #1
 8004870:	61a3      	str	r3, [r4, #24]
 8004872:	e7d1      	b.n	8004818 <__sinit+0xc>
 8004874:	08004ef8 	.word	0x08004ef8
 8004878:	080047a5 	.word	0x080047a5

0800487c <__sfp>:
 800487c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800487e:	4607      	mov	r7, r0
 8004880:	f7ff ffac 	bl	80047dc <__sfp_lock_acquire>
 8004884:	4b1e      	ldr	r3, [pc, #120]	; (8004900 <__sfp+0x84>)
 8004886:	681e      	ldr	r6, [r3, #0]
 8004888:	69b3      	ldr	r3, [r6, #24]
 800488a:	b913      	cbnz	r3, 8004892 <__sfp+0x16>
 800488c:	4630      	mov	r0, r6
 800488e:	f7ff ffbd 	bl	800480c <__sinit>
 8004892:	3648      	adds	r6, #72	; 0x48
 8004894:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004898:	3b01      	subs	r3, #1
 800489a:	d503      	bpl.n	80048a4 <__sfp+0x28>
 800489c:	6833      	ldr	r3, [r6, #0]
 800489e:	b30b      	cbz	r3, 80048e4 <__sfp+0x68>
 80048a0:	6836      	ldr	r6, [r6, #0]
 80048a2:	e7f7      	b.n	8004894 <__sfp+0x18>
 80048a4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80048a8:	b9d5      	cbnz	r5, 80048e0 <__sfp+0x64>
 80048aa:	4b16      	ldr	r3, [pc, #88]	; (8004904 <__sfp+0x88>)
 80048ac:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80048b0:	60e3      	str	r3, [r4, #12]
 80048b2:	6665      	str	r5, [r4, #100]	; 0x64
 80048b4:	f000 f847 	bl	8004946 <__retarget_lock_init_recursive>
 80048b8:	f7ff ff96 	bl	80047e8 <__sfp_lock_release>
 80048bc:	2208      	movs	r2, #8
 80048be:	4629      	mov	r1, r5
 80048c0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80048c4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80048c8:	6025      	str	r5, [r4, #0]
 80048ca:	61a5      	str	r5, [r4, #24]
 80048cc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80048d0:	f7fe ff6e 	bl	80037b0 <memset>
 80048d4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80048d8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80048dc:	4620      	mov	r0, r4
 80048de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048e0:	3468      	adds	r4, #104	; 0x68
 80048e2:	e7d9      	b.n	8004898 <__sfp+0x1c>
 80048e4:	2104      	movs	r1, #4
 80048e6:	4638      	mov	r0, r7
 80048e8:	f7ff ff62 	bl	80047b0 <__sfmoreglue>
 80048ec:	4604      	mov	r4, r0
 80048ee:	6030      	str	r0, [r6, #0]
 80048f0:	2800      	cmp	r0, #0
 80048f2:	d1d5      	bne.n	80048a0 <__sfp+0x24>
 80048f4:	f7ff ff78 	bl	80047e8 <__sfp_lock_release>
 80048f8:	230c      	movs	r3, #12
 80048fa:	603b      	str	r3, [r7, #0]
 80048fc:	e7ee      	b.n	80048dc <__sfp+0x60>
 80048fe:	bf00      	nop
 8004900:	08004ef8 	.word	0x08004ef8
 8004904:	ffff0001 	.word	0xffff0001

08004908 <_fwalk_reent>:
 8004908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800490c:	4606      	mov	r6, r0
 800490e:	4688      	mov	r8, r1
 8004910:	2700      	movs	r7, #0
 8004912:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004916:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800491a:	f1b9 0901 	subs.w	r9, r9, #1
 800491e:	d505      	bpl.n	800492c <_fwalk_reent+0x24>
 8004920:	6824      	ldr	r4, [r4, #0]
 8004922:	2c00      	cmp	r4, #0
 8004924:	d1f7      	bne.n	8004916 <_fwalk_reent+0xe>
 8004926:	4638      	mov	r0, r7
 8004928:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800492c:	89ab      	ldrh	r3, [r5, #12]
 800492e:	2b01      	cmp	r3, #1
 8004930:	d907      	bls.n	8004942 <_fwalk_reent+0x3a>
 8004932:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004936:	3301      	adds	r3, #1
 8004938:	d003      	beq.n	8004942 <_fwalk_reent+0x3a>
 800493a:	4629      	mov	r1, r5
 800493c:	4630      	mov	r0, r6
 800493e:	47c0      	blx	r8
 8004940:	4307      	orrs	r7, r0
 8004942:	3568      	adds	r5, #104	; 0x68
 8004944:	e7e9      	b.n	800491a <_fwalk_reent+0x12>

08004946 <__retarget_lock_init_recursive>:
 8004946:	4770      	bx	lr

08004948 <__retarget_lock_acquire_recursive>:
 8004948:	4770      	bx	lr

0800494a <__retarget_lock_release_recursive>:
 800494a:	4770      	bx	lr

0800494c <__swhatbuf_r>:
 800494c:	b570      	push	{r4, r5, r6, lr}
 800494e:	460e      	mov	r6, r1
 8004950:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004954:	4614      	mov	r4, r2
 8004956:	2900      	cmp	r1, #0
 8004958:	461d      	mov	r5, r3
 800495a:	b096      	sub	sp, #88	; 0x58
 800495c:	da07      	bge.n	800496e <__swhatbuf_r+0x22>
 800495e:	2300      	movs	r3, #0
 8004960:	602b      	str	r3, [r5, #0]
 8004962:	89b3      	ldrh	r3, [r6, #12]
 8004964:	061a      	lsls	r2, r3, #24
 8004966:	d410      	bmi.n	800498a <__swhatbuf_r+0x3e>
 8004968:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800496c:	e00e      	b.n	800498c <__swhatbuf_r+0x40>
 800496e:	466a      	mov	r2, sp
 8004970:	f000 f962 	bl	8004c38 <_fstat_r>
 8004974:	2800      	cmp	r0, #0
 8004976:	dbf2      	blt.n	800495e <__swhatbuf_r+0x12>
 8004978:	9a01      	ldr	r2, [sp, #4]
 800497a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800497e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004982:	425a      	negs	r2, r3
 8004984:	415a      	adcs	r2, r3
 8004986:	602a      	str	r2, [r5, #0]
 8004988:	e7ee      	b.n	8004968 <__swhatbuf_r+0x1c>
 800498a:	2340      	movs	r3, #64	; 0x40
 800498c:	2000      	movs	r0, #0
 800498e:	6023      	str	r3, [r4, #0]
 8004990:	b016      	add	sp, #88	; 0x58
 8004992:	bd70      	pop	{r4, r5, r6, pc}

08004994 <__smakebuf_r>:
 8004994:	898b      	ldrh	r3, [r1, #12]
 8004996:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004998:	079d      	lsls	r5, r3, #30
 800499a:	4606      	mov	r6, r0
 800499c:	460c      	mov	r4, r1
 800499e:	d507      	bpl.n	80049b0 <__smakebuf_r+0x1c>
 80049a0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80049a4:	6023      	str	r3, [r4, #0]
 80049a6:	6123      	str	r3, [r4, #16]
 80049a8:	2301      	movs	r3, #1
 80049aa:	6163      	str	r3, [r4, #20]
 80049ac:	b002      	add	sp, #8
 80049ae:	bd70      	pop	{r4, r5, r6, pc}
 80049b0:	466a      	mov	r2, sp
 80049b2:	ab01      	add	r3, sp, #4
 80049b4:	f7ff ffca 	bl	800494c <__swhatbuf_r>
 80049b8:	9900      	ldr	r1, [sp, #0]
 80049ba:	4605      	mov	r5, r0
 80049bc:	4630      	mov	r0, r6
 80049be:	f7ff f88f 	bl	8003ae0 <_malloc_r>
 80049c2:	b948      	cbnz	r0, 80049d8 <__smakebuf_r+0x44>
 80049c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80049c8:	059a      	lsls	r2, r3, #22
 80049ca:	d4ef      	bmi.n	80049ac <__smakebuf_r+0x18>
 80049cc:	f023 0303 	bic.w	r3, r3, #3
 80049d0:	f043 0302 	orr.w	r3, r3, #2
 80049d4:	81a3      	strh	r3, [r4, #12]
 80049d6:	e7e3      	b.n	80049a0 <__smakebuf_r+0xc>
 80049d8:	4b0d      	ldr	r3, [pc, #52]	; (8004a10 <__smakebuf_r+0x7c>)
 80049da:	62b3      	str	r3, [r6, #40]	; 0x28
 80049dc:	89a3      	ldrh	r3, [r4, #12]
 80049de:	6020      	str	r0, [r4, #0]
 80049e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80049e4:	81a3      	strh	r3, [r4, #12]
 80049e6:	9b00      	ldr	r3, [sp, #0]
 80049e8:	6120      	str	r0, [r4, #16]
 80049ea:	6163      	str	r3, [r4, #20]
 80049ec:	9b01      	ldr	r3, [sp, #4]
 80049ee:	b15b      	cbz	r3, 8004a08 <__smakebuf_r+0x74>
 80049f0:	4630      	mov	r0, r6
 80049f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80049f6:	f000 f931 	bl	8004c5c <_isatty_r>
 80049fa:	b128      	cbz	r0, 8004a08 <__smakebuf_r+0x74>
 80049fc:	89a3      	ldrh	r3, [r4, #12]
 80049fe:	f023 0303 	bic.w	r3, r3, #3
 8004a02:	f043 0301 	orr.w	r3, r3, #1
 8004a06:	81a3      	strh	r3, [r4, #12]
 8004a08:	89a0      	ldrh	r0, [r4, #12]
 8004a0a:	4305      	orrs	r5, r0
 8004a0c:	81a5      	strh	r5, [r4, #12]
 8004a0e:	e7cd      	b.n	80049ac <__smakebuf_r+0x18>
 8004a10:	080047a5 	.word	0x080047a5

08004a14 <memchr>:
 8004a14:	4603      	mov	r3, r0
 8004a16:	b510      	push	{r4, lr}
 8004a18:	b2c9      	uxtb	r1, r1
 8004a1a:	4402      	add	r2, r0
 8004a1c:	4293      	cmp	r3, r2
 8004a1e:	4618      	mov	r0, r3
 8004a20:	d101      	bne.n	8004a26 <memchr+0x12>
 8004a22:	2000      	movs	r0, #0
 8004a24:	e003      	b.n	8004a2e <memchr+0x1a>
 8004a26:	7804      	ldrb	r4, [r0, #0]
 8004a28:	3301      	adds	r3, #1
 8004a2a:	428c      	cmp	r4, r1
 8004a2c:	d1f6      	bne.n	8004a1c <memchr+0x8>
 8004a2e:	bd10      	pop	{r4, pc}

08004a30 <memcpy>:
 8004a30:	440a      	add	r2, r1
 8004a32:	4291      	cmp	r1, r2
 8004a34:	f100 33ff 	add.w	r3, r0, #4294967295
 8004a38:	d100      	bne.n	8004a3c <memcpy+0xc>
 8004a3a:	4770      	bx	lr
 8004a3c:	b510      	push	{r4, lr}
 8004a3e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004a42:	4291      	cmp	r1, r2
 8004a44:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004a48:	d1f9      	bne.n	8004a3e <memcpy+0xe>
 8004a4a:	bd10      	pop	{r4, pc}

08004a4c <memmove>:
 8004a4c:	4288      	cmp	r0, r1
 8004a4e:	b510      	push	{r4, lr}
 8004a50:	eb01 0402 	add.w	r4, r1, r2
 8004a54:	d902      	bls.n	8004a5c <memmove+0x10>
 8004a56:	4284      	cmp	r4, r0
 8004a58:	4623      	mov	r3, r4
 8004a5a:	d807      	bhi.n	8004a6c <memmove+0x20>
 8004a5c:	1e43      	subs	r3, r0, #1
 8004a5e:	42a1      	cmp	r1, r4
 8004a60:	d008      	beq.n	8004a74 <memmove+0x28>
 8004a62:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004a66:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004a6a:	e7f8      	b.n	8004a5e <memmove+0x12>
 8004a6c:	4601      	mov	r1, r0
 8004a6e:	4402      	add	r2, r0
 8004a70:	428a      	cmp	r2, r1
 8004a72:	d100      	bne.n	8004a76 <memmove+0x2a>
 8004a74:	bd10      	pop	{r4, pc}
 8004a76:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004a7a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004a7e:	e7f7      	b.n	8004a70 <memmove+0x24>

08004a80 <__malloc_lock>:
 8004a80:	4801      	ldr	r0, [pc, #4]	; (8004a88 <__malloc_lock+0x8>)
 8004a82:	f7ff bf61 	b.w	8004948 <__retarget_lock_acquire_recursive>
 8004a86:	bf00      	nop
 8004a88:	20000280 	.word	0x20000280

08004a8c <__malloc_unlock>:
 8004a8c:	4801      	ldr	r0, [pc, #4]	; (8004a94 <__malloc_unlock+0x8>)
 8004a8e:	f7ff bf5c 	b.w	800494a <__retarget_lock_release_recursive>
 8004a92:	bf00      	nop
 8004a94:	20000280 	.word	0x20000280

08004a98 <_realloc_r>:
 8004a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a9a:	4607      	mov	r7, r0
 8004a9c:	4614      	mov	r4, r2
 8004a9e:	460e      	mov	r6, r1
 8004aa0:	b921      	cbnz	r1, 8004aac <_realloc_r+0x14>
 8004aa2:	4611      	mov	r1, r2
 8004aa4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004aa8:	f7ff b81a 	b.w	8003ae0 <_malloc_r>
 8004aac:	b922      	cbnz	r2, 8004ab8 <_realloc_r+0x20>
 8004aae:	f7fe ffcb 	bl	8003a48 <_free_r>
 8004ab2:	4625      	mov	r5, r4
 8004ab4:	4628      	mov	r0, r5
 8004ab6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ab8:	f000 f8f2 	bl	8004ca0 <_malloc_usable_size_r>
 8004abc:	42a0      	cmp	r0, r4
 8004abe:	d20f      	bcs.n	8004ae0 <_realloc_r+0x48>
 8004ac0:	4621      	mov	r1, r4
 8004ac2:	4638      	mov	r0, r7
 8004ac4:	f7ff f80c 	bl	8003ae0 <_malloc_r>
 8004ac8:	4605      	mov	r5, r0
 8004aca:	2800      	cmp	r0, #0
 8004acc:	d0f2      	beq.n	8004ab4 <_realloc_r+0x1c>
 8004ace:	4631      	mov	r1, r6
 8004ad0:	4622      	mov	r2, r4
 8004ad2:	f7ff ffad 	bl	8004a30 <memcpy>
 8004ad6:	4631      	mov	r1, r6
 8004ad8:	4638      	mov	r0, r7
 8004ada:	f7fe ffb5 	bl	8003a48 <_free_r>
 8004ade:	e7e9      	b.n	8004ab4 <_realloc_r+0x1c>
 8004ae0:	4635      	mov	r5, r6
 8004ae2:	e7e7      	b.n	8004ab4 <_realloc_r+0x1c>

08004ae4 <_raise_r>:
 8004ae4:	291f      	cmp	r1, #31
 8004ae6:	b538      	push	{r3, r4, r5, lr}
 8004ae8:	4604      	mov	r4, r0
 8004aea:	460d      	mov	r5, r1
 8004aec:	d904      	bls.n	8004af8 <_raise_r+0x14>
 8004aee:	2316      	movs	r3, #22
 8004af0:	6003      	str	r3, [r0, #0]
 8004af2:	f04f 30ff 	mov.w	r0, #4294967295
 8004af6:	bd38      	pop	{r3, r4, r5, pc}
 8004af8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004afa:	b112      	cbz	r2, 8004b02 <_raise_r+0x1e>
 8004afc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004b00:	b94b      	cbnz	r3, 8004b16 <_raise_r+0x32>
 8004b02:	4620      	mov	r0, r4
 8004b04:	f000 f830 	bl	8004b68 <_getpid_r>
 8004b08:	462a      	mov	r2, r5
 8004b0a:	4601      	mov	r1, r0
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004b12:	f000 b817 	b.w	8004b44 <_kill_r>
 8004b16:	2b01      	cmp	r3, #1
 8004b18:	d00a      	beq.n	8004b30 <_raise_r+0x4c>
 8004b1a:	1c59      	adds	r1, r3, #1
 8004b1c:	d103      	bne.n	8004b26 <_raise_r+0x42>
 8004b1e:	2316      	movs	r3, #22
 8004b20:	6003      	str	r3, [r0, #0]
 8004b22:	2001      	movs	r0, #1
 8004b24:	e7e7      	b.n	8004af6 <_raise_r+0x12>
 8004b26:	2400      	movs	r4, #0
 8004b28:	4628      	mov	r0, r5
 8004b2a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004b2e:	4798      	blx	r3
 8004b30:	2000      	movs	r0, #0
 8004b32:	e7e0      	b.n	8004af6 <_raise_r+0x12>

08004b34 <raise>:
 8004b34:	4b02      	ldr	r3, [pc, #8]	; (8004b40 <raise+0xc>)
 8004b36:	4601      	mov	r1, r0
 8004b38:	6818      	ldr	r0, [r3, #0]
 8004b3a:	f7ff bfd3 	b.w	8004ae4 <_raise_r>
 8004b3e:	bf00      	nop
 8004b40:	2000000c 	.word	0x2000000c

08004b44 <_kill_r>:
 8004b44:	b538      	push	{r3, r4, r5, lr}
 8004b46:	2300      	movs	r3, #0
 8004b48:	4d06      	ldr	r5, [pc, #24]	; (8004b64 <_kill_r+0x20>)
 8004b4a:	4604      	mov	r4, r0
 8004b4c:	4608      	mov	r0, r1
 8004b4e:	4611      	mov	r1, r2
 8004b50:	602b      	str	r3, [r5, #0]
 8004b52:	f7fb fefe 	bl	8000952 <_kill>
 8004b56:	1c43      	adds	r3, r0, #1
 8004b58:	d102      	bne.n	8004b60 <_kill_r+0x1c>
 8004b5a:	682b      	ldr	r3, [r5, #0]
 8004b5c:	b103      	cbz	r3, 8004b60 <_kill_r+0x1c>
 8004b5e:	6023      	str	r3, [r4, #0]
 8004b60:	bd38      	pop	{r3, r4, r5, pc}
 8004b62:	bf00      	nop
 8004b64:	20000288 	.word	0x20000288

08004b68 <_getpid_r>:
 8004b68:	f7fb beec 	b.w	8000944 <_getpid>

08004b6c <__sread>:
 8004b6c:	b510      	push	{r4, lr}
 8004b6e:	460c      	mov	r4, r1
 8004b70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004b74:	f000 f89c 	bl	8004cb0 <_read_r>
 8004b78:	2800      	cmp	r0, #0
 8004b7a:	bfab      	itete	ge
 8004b7c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004b7e:	89a3      	ldrhlt	r3, [r4, #12]
 8004b80:	181b      	addge	r3, r3, r0
 8004b82:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004b86:	bfac      	ite	ge
 8004b88:	6563      	strge	r3, [r4, #84]	; 0x54
 8004b8a:	81a3      	strhlt	r3, [r4, #12]
 8004b8c:	bd10      	pop	{r4, pc}

08004b8e <__swrite>:
 8004b8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b92:	461f      	mov	r7, r3
 8004b94:	898b      	ldrh	r3, [r1, #12]
 8004b96:	4605      	mov	r5, r0
 8004b98:	05db      	lsls	r3, r3, #23
 8004b9a:	460c      	mov	r4, r1
 8004b9c:	4616      	mov	r6, r2
 8004b9e:	d505      	bpl.n	8004bac <__swrite+0x1e>
 8004ba0:	2302      	movs	r3, #2
 8004ba2:	2200      	movs	r2, #0
 8004ba4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004ba8:	f000 f868 	bl	8004c7c <_lseek_r>
 8004bac:	89a3      	ldrh	r3, [r4, #12]
 8004bae:	4632      	mov	r2, r6
 8004bb0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004bb4:	81a3      	strh	r3, [r4, #12]
 8004bb6:	4628      	mov	r0, r5
 8004bb8:	463b      	mov	r3, r7
 8004bba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004bbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004bc2:	f000 b817 	b.w	8004bf4 <_write_r>

08004bc6 <__sseek>:
 8004bc6:	b510      	push	{r4, lr}
 8004bc8:	460c      	mov	r4, r1
 8004bca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004bce:	f000 f855 	bl	8004c7c <_lseek_r>
 8004bd2:	1c43      	adds	r3, r0, #1
 8004bd4:	89a3      	ldrh	r3, [r4, #12]
 8004bd6:	bf15      	itete	ne
 8004bd8:	6560      	strne	r0, [r4, #84]	; 0x54
 8004bda:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004bde:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004be2:	81a3      	strheq	r3, [r4, #12]
 8004be4:	bf18      	it	ne
 8004be6:	81a3      	strhne	r3, [r4, #12]
 8004be8:	bd10      	pop	{r4, pc}

08004bea <__sclose>:
 8004bea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004bee:	f000 b813 	b.w	8004c18 <_close_r>
	...

08004bf4 <_write_r>:
 8004bf4:	b538      	push	{r3, r4, r5, lr}
 8004bf6:	4604      	mov	r4, r0
 8004bf8:	4608      	mov	r0, r1
 8004bfa:	4611      	mov	r1, r2
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	4d05      	ldr	r5, [pc, #20]	; (8004c14 <_write_r+0x20>)
 8004c00:	602a      	str	r2, [r5, #0]
 8004c02:	461a      	mov	r2, r3
 8004c04:	f7fb fedc 	bl	80009c0 <_write>
 8004c08:	1c43      	adds	r3, r0, #1
 8004c0a:	d102      	bne.n	8004c12 <_write_r+0x1e>
 8004c0c:	682b      	ldr	r3, [r5, #0]
 8004c0e:	b103      	cbz	r3, 8004c12 <_write_r+0x1e>
 8004c10:	6023      	str	r3, [r4, #0]
 8004c12:	bd38      	pop	{r3, r4, r5, pc}
 8004c14:	20000288 	.word	0x20000288

08004c18 <_close_r>:
 8004c18:	b538      	push	{r3, r4, r5, lr}
 8004c1a:	2300      	movs	r3, #0
 8004c1c:	4d05      	ldr	r5, [pc, #20]	; (8004c34 <_close_r+0x1c>)
 8004c1e:	4604      	mov	r4, r0
 8004c20:	4608      	mov	r0, r1
 8004c22:	602b      	str	r3, [r5, #0]
 8004c24:	f7fb fee8 	bl	80009f8 <_close>
 8004c28:	1c43      	adds	r3, r0, #1
 8004c2a:	d102      	bne.n	8004c32 <_close_r+0x1a>
 8004c2c:	682b      	ldr	r3, [r5, #0]
 8004c2e:	b103      	cbz	r3, 8004c32 <_close_r+0x1a>
 8004c30:	6023      	str	r3, [r4, #0]
 8004c32:	bd38      	pop	{r3, r4, r5, pc}
 8004c34:	20000288 	.word	0x20000288

08004c38 <_fstat_r>:
 8004c38:	b538      	push	{r3, r4, r5, lr}
 8004c3a:	2300      	movs	r3, #0
 8004c3c:	4d06      	ldr	r5, [pc, #24]	; (8004c58 <_fstat_r+0x20>)
 8004c3e:	4604      	mov	r4, r0
 8004c40:	4608      	mov	r0, r1
 8004c42:	4611      	mov	r1, r2
 8004c44:	602b      	str	r3, [r5, #0]
 8004c46:	f7fb fee2 	bl	8000a0e <_fstat>
 8004c4a:	1c43      	adds	r3, r0, #1
 8004c4c:	d102      	bne.n	8004c54 <_fstat_r+0x1c>
 8004c4e:	682b      	ldr	r3, [r5, #0]
 8004c50:	b103      	cbz	r3, 8004c54 <_fstat_r+0x1c>
 8004c52:	6023      	str	r3, [r4, #0]
 8004c54:	bd38      	pop	{r3, r4, r5, pc}
 8004c56:	bf00      	nop
 8004c58:	20000288 	.word	0x20000288

08004c5c <_isatty_r>:
 8004c5c:	b538      	push	{r3, r4, r5, lr}
 8004c5e:	2300      	movs	r3, #0
 8004c60:	4d05      	ldr	r5, [pc, #20]	; (8004c78 <_isatty_r+0x1c>)
 8004c62:	4604      	mov	r4, r0
 8004c64:	4608      	mov	r0, r1
 8004c66:	602b      	str	r3, [r5, #0]
 8004c68:	f7fb fee0 	bl	8000a2c <_isatty>
 8004c6c:	1c43      	adds	r3, r0, #1
 8004c6e:	d102      	bne.n	8004c76 <_isatty_r+0x1a>
 8004c70:	682b      	ldr	r3, [r5, #0]
 8004c72:	b103      	cbz	r3, 8004c76 <_isatty_r+0x1a>
 8004c74:	6023      	str	r3, [r4, #0]
 8004c76:	bd38      	pop	{r3, r4, r5, pc}
 8004c78:	20000288 	.word	0x20000288

08004c7c <_lseek_r>:
 8004c7c:	b538      	push	{r3, r4, r5, lr}
 8004c7e:	4604      	mov	r4, r0
 8004c80:	4608      	mov	r0, r1
 8004c82:	4611      	mov	r1, r2
 8004c84:	2200      	movs	r2, #0
 8004c86:	4d05      	ldr	r5, [pc, #20]	; (8004c9c <_lseek_r+0x20>)
 8004c88:	602a      	str	r2, [r5, #0]
 8004c8a:	461a      	mov	r2, r3
 8004c8c:	f7fb fed8 	bl	8000a40 <_lseek>
 8004c90:	1c43      	adds	r3, r0, #1
 8004c92:	d102      	bne.n	8004c9a <_lseek_r+0x1e>
 8004c94:	682b      	ldr	r3, [r5, #0]
 8004c96:	b103      	cbz	r3, 8004c9a <_lseek_r+0x1e>
 8004c98:	6023      	str	r3, [r4, #0]
 8004c9a:	bd38      	pop	{r3, r4, r5, pc}
 8004c9c:	20000288 	.word	0x20000288

08004ca0 <_malloc_usable_size_r>:
 8004ca0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004ca4:	1f18      	subs	r0, r3, #4
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	bfbc      	itt	lt
 8004caa:	580b      	ldrlt	r3, [r1, r0]
 8004cac:	18c0      	addlt	r0, r0, r3
 8004cae:	4770      	bx	lr

08004cb0 <_read_r>:
 8004cb0:	b538      	push	{r3, r4, r5, lr}
 8004cb2:	4604      	mov	r4, r0
 8004cb4:	4608      	mov	r0, r1
 8004cb6:	4611      	mov	r1, r2
 8004cb8:	2200      	movs	r2, #0
 8004cba:	4d05      	ldr	r5, [pc, #20]	; (8004cd0 <_read_r+0x20>)
 8004cbc:	602a      	str	r2, [r5, #0]
 8004cbe:	461a      	mov	r2, r3
 8004cc0:	f7fb fe61 	bl	8000986 <_read>
 8004cc4:	1c43      	adds	r3, r0, #1
 8004cc6:	d102      	bne.n	8004cce <_read_r+0x1e>
 8004cc8:	682b      	ldr	r3, [r5, #0]
 8004cca:	b103      	cbz	r3, 8004cce <_read_r+0x1e>
 8004ccc:	6023      	str	r3, [r4, #0]
 8004cce:	bd38      	pop	{r3, r4, r5, pc}
 8004cd0:	20000288 	.word	0x20000288

08004cd4 <_init>:
 8004cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cd6:	bf00      	nop
 8004cd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004cda:	bc08      	pop	{r3}
 8004cdc:	469e      	mov	lr, r3
 8004cde:	4770      	bx	lr

08004ce0 <_fini>:
 8004ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ce2:	bf00      	nop
 8004ce4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004ce6:	bc08      	pop	{r3}
 8004ce8:	469e      	mov	lr, r3
 8004cea:	4770      	bx	lr
